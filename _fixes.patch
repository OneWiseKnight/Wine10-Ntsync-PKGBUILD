From 0730167f5dac62b2c48567227a4fdfefbc549e28 Mon Sep 17 00:00:00 2001
From: GloriousEggroll <gloriouseggroll@gmail.com>
Date: Sat, 16 May 2020 20:05:38 -0600
Subject: [PATCH 01/21] Revert "dwrite: Release file streams when building
 collections."

This reverts commit d19e34d8f072514cb903bda89767996ba078bae4.

Fixes Assetto Corsa hud
---
 dlls/dwrite/font.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/dlls/dwrite/font.c b/dlls/dwrite/font.c
index b34244238a2..4cf732dd353 100644
--- a/dlls/dwrite/font.c
+++ b/dlls/dwrite/font.c
@@ -4659,6 +4659,7 @@ HRESULT create_font_collection(IDWriteFactory7 *factory, IDWriteFontFileEnumerat
     BOOL current = FALSE;
     HRESULT hr = S_OK;
     size_t i;
+    const char *sgi = getenv("SteamGameId");
 
     *ret = NULL;
 
@@ -4785,7 +4786,9 @@ HRESULT create_font_collection(IDWriteFactory7 *factory, IDWriteFontFileEnumerat
             }
         }
 
-        IDWriteFontFileStream_Release(stream);
+        if ((!sgi) | (sgi && strcmp(sgi, "244210"))) {
+            IDWriteFontFileStream_Release(stream);
+        }
     }
 
     LIST_FOR_EACH_ENTRY_SAFE(fileenum, fileenum2, &scannedfiles, struct fontfile_enum, entry)

From d37eff26c30f58941349551caa9f56a3b79c14ca Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Sat, 25 May 2024 20:56:03 +0300
Subject: [PATCH 02/21] ntdll: [GAMEFIX] Add file search workaround hack for
 Phantasy Star Online 2

---
 dlls/ntdll/unix/file.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index b3db4a975dd..1eecff966b6 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -3614,6 +3614,7 @@ static NTSTATUS lookup_unix_name( const WCHAR *name, int name_len, char **buffer
     struct stat st;
     char *unix_name = *buffer;
     const WCHAR *ptr, *end;
+    static char *skip_search = NULL;
 
     /* check syntax of individual components */
 
@@ -3660,6 +3661,13 @@ static NTSTATUS lookup_unix_name( const WCHAR *name, int name_len, char **buffer
     if (is_unix && (disposition == FILE_OPEN || disposition == FILE_OVERWRITE))
         return STATUS_OBJECT_NAME_NOT_FOUND;
 
+    if (skip_search == NULL)
+    {
+        skip_search = getenv("WINE_NO_OPEN_FILE_SEARCH");
+        WARN("Disabling case insensitive search for opening files");
+    }
+    if (skip_search && strcasestr(unix_name, skip_search) && disposition == FILE_OPEN)
+        return STATUS_OBJECT_NAME_NOT_FOUND;
     /* now do it component by component */
 
     while (name_len)

From ab644956649576366c543938aac6c38d6955c791 Mon Sep 17 00:00:00 2001
From: Fox2Code <42963271+Fox2Code@users.noreply.github.com>
Date: Tue, 5 Oct 2021 11:51:55 +0200
Subject: [PATCH 03/21] dxgi: [HOTFIX] Remove TRACE in DXGIGetDebugInterface1
 stub causing segfaults. Fixes Unity crash.

---
 dlls/dxgi/dxgi_main.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/dlls/dxgi/dxgi_main.c b/dlls/dxgi/dxgi_main.c
index ca1fb525535..245061a08e8 100644
--- a/dlls/dxgi/dxgi_main.c
+++ b/dlls/dxgi/dxgi_main.c
@@ -245,8 +245,6 @@ HRESULT WINAPI DXGID3D10RegisterLayers(const struct dxgi_device_layer *layers, U
 
 HRESULT WINAPI DXGIGetDebugInterface1(UINT flags, REFIID iid, void **debug)
 {
-    TRACE("flags %#x, iid %s, debug %p.\n", flags, debugstr_guid(iid), debug);
-
     WARN("Returning DXGI_ERROR_SDK_COMPONENT_MISSING.\n");
     return DXGI_ERROR_SDK_COMPONENT_MISSING;
 }

From 2437fef6d9e4100aeae5d3b29c4f36a670c56c9a Mon Sep 17 00:00:00 2001
From: Pedro Nishiyama <nishiyama.v3@gmail.com>
Date: Mon, 20 Nov 2023 02:37:07 -0300
Subject: [PATCH 04/21] ntdll: [HACK] Add WINE_DISABLE_SFN option. Fixes Yakuza
 5 cutscenes

---
 dlls/ntdll/unix/file.c         | 22 +++++++++++++---------
 dlls/ntdll/unix/loader.c       |  7 +++++++
 dlls/ntdll/unix/unix_private.h |  1 +
 3 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index 1eecff966b6..ff1c5c5fe79 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -1578,16 +1578,20 @@ static BOOL append_entry( struct dir_data *data, const char *long_name,
     if (long_len == ARRAY_SIZE(long_nameW)) return TRUE;
     long_nameW[long_len] = 0;
 
-    if (short_name)
-    {
-        short_len = ntdll_umbstowcs( short_name, strlen(short_name),
-                                     short_nameW, ARRAY_SIZE( short_nameW ) - 1 );
-    }
-    else  /* generate a short name if necessary */
+    short_len = 0;
+
+    if (!disable_sfn)
     {
-        short_len = 0;
-        if (!is_legal_8dot3_name( long_nameW, long_len ))
-            short_len = hash_short_file_name( long_nameW, long_len, short_nameW );
+        if (short_name)
+        {
+            short_len = ntdll_umbstowcs( short_name, strlen(short_name),
+                                        short_nameW, ARRAY_SIZE( short_nameW ) - 1 );
+        }
+        else  /* generate a short name if necessary */
+        {
+            if (!is_legal_8dot3_name( long_nameW, long_len ))
+                short_len = hash_short_file_name( long_nameW, long_len, short_nameW );
+        }
     }
     short_nameW[short_len] = 0;
     wcsupr( short_nameW );
diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index 80b17e17b16..272156a0683 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -2124,6 +2124,7 @@ static ULONG_PTR get_image_address(void)
     return 0;
 }
 
+BOOL disable_sfn;
 BOOL ac_odyssey;
 BOOL fsync_simulate_sched_quantum;
 BOOL alert_simulate_sched_quantum;
@@ -2144,6 +2145,12 @@ static void hacks_init(void)
         ERR( "HACK: ram_reporting_bias %lldMB.\n", ram_reporting_bias / (1024 * 1024) );
     }
 
+    env_str = getenv("WINE_DISABLE_SFN");
+    if (env_str)
+        disable_sfn = !!atoi(env_str);
+    else if (main_argc > 1 && (strstr(main_argv[1], "Yakuza5.exe") ))
+        disable_sfn = TRUE;
+
     env_str = getenv("WINE_SIMULATE_ASYNC_READ");
     if (env_str)
         ac_odyssey = !!atoi(env_str);
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index cd070e0b98f..ed16d77a132 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -192,6 +192,7 @@ extern SYSTEM_CPU_INFORMATION cpu_info;
 extern struct ldt_copy __wine_ldt_copy;
 #endif
 
+extern BOOL disable_sfn;
 extern BOOL ac_odyssey;
 extern BOOL fsync_simulate_sched_quantum;
 extern BOOL alert_simulate_sched_quantum;

From cfe604934ed7f2e3440cd57e68eb00c2e88ba6c0 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty <etaash.mathamsetty@gmail.com>
Date: Wed, 5 Jun 2024 01:48:18 +0300
Subject: [PATCH 05/21] ncrypt: [HACK] NCryptDecrypt implementation. Fixes PSN
 Login for Ghost of Tsushima

---
 dlls/ncrypt/main.c | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/dlls/ncrypt/main.c b/dlls/ncrypt/main.c
index 3511f8f2d3f..656c80a5cb9 100644
--- a/dlls/ncrypt/main.c
+++ b/dlls/ncrypt/main.c
@@ -212,9 +212,22 @@ SECURITY_STATUS WINAPI NCryptCreatePersistedKey(NCRYPT_PROV_HANDLE provider, NCR
 SECURITY_STATUS WINAPI NCryptDecrypt(NCRYPT_KEY_HANDLE key, BYTE *input, DWORD insize, void *padding,
                                      BYTE *output, DWORD outsize, DWORD *result, DWORD flags)
 {
-    FIXME("(%#Ix, %p, %lu, %p, %p, %lu, %p, %#lx): stub\n", key, input, insize, padding,
+    struct object *key_object = (struct object *)key;
+
+    FIXME("(%#Ix, %p, %lu, %p, %p, %lu, %p, %#lx):\n", key, input, insize, padding,
           output, outsize, result, flags);
-    return NTE_NOT_SUPPORTED;
+
+    if (flags & ~(NCRYPT_NO_PADDING_FLAG | NCRYPT_PAD_OAEP_FLAG
+        | NCRYPT_PAD_PKCS1_FLAG | NCRYPT_SILENT_FLAG))
+    {
+        FIXME("Flags %lx not supported\n", flags);
+        return NTE_BAD_FLAGS;
+    }
+
+    if (key_object->type != KEY) return NTE_INVALID_HANDLE;
+
+    return map_ntstatus(BCryptDecrypt(key_object->key.bcrypt_key, input, insize, padding,
+                                      NULL, 0, output, outsize, result, flags));
 }
 
 SECURITY_STATUS WINAPI NCryptDeleteKey(NCRYPT_KEY_HANDLE key, DWORD flags)

From 6c8745cf6c24bd72cf33383aa9625db76077a4c0 Mon Sep 17 00:00:00 2001
From: GloriousEggroll <gloriouseggroll@gmail.com>
Date: Mon, 13 May 2024 00:29:46 +0300
Subject: [PATCH 06/21] media-converter: Add environment variables to gate
 media-converter

---
 dlls/winegstreamer/media-converter/lib.c | 48 ++++++++++++++++++------
 1 file changed, 36 insertions(+), 12 deletions(-)

diff --git a/dlls/winegstreamer/media-converter/lib.c b/dlls/winegstreamer/media-converter/lib.c
index d1bc3b8f477..a0584bc86da 100644
--- a/dlls/winegstreamer/media-converter/lib.c
+++ b/dlls/winegstreamer/media-converter/lib.c
@@ -323,28 +323,52 @@ bool media_converter_init(void)
     GST_DEBUG_CATEGORY_INIT(media_converter_debug,
             "protonmediaconverter", GST_DEBUG_FG_YELLOW, "Proton media converter");
 
-    if (!GST_ELEMENT_REGISTER(protonvideoconverter, NULL))
+    // Check if the PROTON_VIDEO_CONVERT environment variable is set to 0
+    // Only try to register if the envvar isn't set
+    const char *proton_video_convert = getenv("PROTON_VIDEO_CONVERT");
+    if (!proton_video_convert || strcmp(proton_video_convert, "0") != 0)
     {
-        GST_ERROR("Failed to register protonvideoconverter.");
-        return false;
+        if (!GST_ELEMENT_REGISTER(protonvideoconverter, NULL))
+        {
+            GST_ERROR("Failed to register protonvideoconverter.");
+            return false;
+        }
     }
 
-    if (!GST_ELEMENT_REGISTER(protonaudioconverter, NULL))
+    // Check if the PROTON_AUDIO_CONVERT environment variable is set to 0
+    // Only try to register if the envvar isn't set
+    const char *proton_audio_convert = getenv("PROTON_AUDIO_CONVERT");
+    if (!proton_audio_convert || strcmp(proton_audio_convert, "0") != 0)
     {
-        GST_ERROR("Failed to register protonaudioconverter.");
-        return false;
+        if (!GST_ELEMENT_REGISTER(protonaudioconverter, NULL))
+        {
+            GST_ERROR("Failed to register protonaudioconverter.");
+            return false;
+        }
     }
 
-    if (!GST_ELEMENT_REGISTER(protonaudioconverterbin, NULL))
+    // Check if the PROTON_AUDIO_CONVERT_BIN environment variable is set to 0
+    // Only try to register if the envvar isn't set
+    const char *proton_audio_convert_bin = getenv("PROTON_AUDIO_CONVERT_BIN");
+    if (!proton_audio_convert_bin || strcmp(proton_audio_convert_bin, "0") != 0)
     {
-        GST_ERROR("Failed to register protonaudioconverterbin.");
-        return false;
+        if (!GST_ELEMENT_REGISTER(protonaudioconverterbin, NULL))
+        {
+            GST_ERROR("Failed to register protonaudioconverterbin.");
+            return false;
+        }
     }
 
-    if (!GST_ELEMENT_REGISTER(protondemuxer, NULL))
+    // Check if the PROTON_DEMUX environment variable is set to 0
+    // Only try to register if the envvar isn't set
+    const char *proton_demuxer = getenv("PROTON_DEMUX");
+    if (!proton_demuxer || strcmp(proton_demuxer, "0") != 0)
     {
-        GST_ERROR("Failed to register protondemuxer.");
-        return false;
+        if (!GST_ELEMENT_REGISTER(protondemuxer, NULL))
+        {
+            GST_ERROR("Failed to register protondemuxer.");
+            return false;
+        }
     }
 
     return true;

From e63f7e0f1911931d99457187575b601068976dd0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <bkoelbl@codeweavers.com>
Date: Thu, 12 Dec 2024 15:41:56 +0100
Subject: [PATCH 07/21] embeddedbrowserwebview: Add stub dll.

---
 configure.ac                                  |  1 +
 dlls/embeddedbrowserwebview/Makefile.in       |  3 +++
 .../embeddedbrowserwebview.rc                 |  2 ++
 .../embeddedbrowserwebview.rgs                | 22 +++++++++++++++++++
 .../embeddedbrowserwebview.spec               |  8 +++++++
 loader/wine.inf.in                            |  2 ++
 6 files changed, 38 insertions(+)
 create mode 100644 dlls/embeddedbrowserwebview/Makefile.in
 create mode 100644 dlls/embeddedbrowserwebview/embeddedbrowserwebview.rc
 create mode 100644 dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs
 create mode 100644 dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec

diff --git a/configure.ac b/configure.ac
index 9acc7ce2845..b3a7c6cace2 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2715,6 +2715,7 @@ WINE_CONFIG_MAKEFILE(dlls/dxgi/tests)
 WINE_CONFIG_MAKEFILE(dlls/dxtrans)
 WINE_CONFIG_MAKEFILE(dlls/dxva2)
 WINE_CONFIG_MAKEFILE(dlls/dxva2/tests)
+WINE_CONFIG_MAKEFILE(dlls/embeddedbrowserwebview)
 WINE_CONFIG_MAKEFILE(dlls/esent)
 WINE_CONFIG_MAKEFILE(dlls/evr)
 WINE_CONFIG_MAKEFILE(dlls/evr/tests)
diff --git a/dlls/embeddedbrowserwebview/Makefile.in b/dlls/embeddedbrowserwebview/Makefile.in
new file mode 100644
index 00000000000..b410d4689d7
--- /dev/null
+++ b/dlls/embeddedbrowserwebview/Makefile.in
@@ -0,0 +1,3 @@
+MODULE  = embeddedbrowserwebview.dll
+
+EXTRADLLFLAGS = -Wb,--prefer-native
diff --git a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rc b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rc
new file mode 100644
index 00000000000..7568b996ffa
--- /dev/null
+++ b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rc
@@ -0,0 +1,2 @@
+/* @makedep: embeddedbrowserwebview.rgs */
+1 WINE_REGISTRY embeddedbrowserwebview.rgs
diff --git a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs
new file mode 100644
index 00000000000..50c17ab41d0
--- /dev/null
+++ b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs
@@ -0,0 +1,22 @@
+HKLM
+{
+    NoRemove Software
+    {
+        NoRemove Wow6432Node
+        {
+            NoRemove Microsoft
+            {
+                NoRemove EdgeUpdate
+                {
+                    NoRemove ClientState
+                    {
+                        NoRemove {F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}
+                        {
+                            val EBWebView = s 'C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\131.0.2903.86'
+                        }
+                    }
+                }
+            }
+        }
+    }
+}
diff --git a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec
new file mode 100644
index 00000000000..b6d42ec0b82
--- /dev/null
+++ b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec
@@ -0,0 +1,8 @@
+1 stub ??0IDataFieldVisitor@telemetry_client@@QEAA@AEBV01@@Z
+2 stub ??0IDataFieldVisitor@telemetry_client@@QEAA@XZ
+3 stub ??1IDataFieldVisitor@telemetry_client@@UEAA@XZ
+4 stub ??4IDataFieldVisitor@telemetry_client@@QEAAAEAV01@AEBV01@@Z
+5 stub ??_7IDataFieldVisitor@telemetry_client@@6B@
+6 stub CreateWebViewEnvironmentWithOptionsInternal
+7 stub DllCanUnloadNow
+8 stub GetHandleVerifier
diff --git a/loader/wine.inf.in b/loader/wine.inf.in
index 30751cc1510..de32e5a3966 100644
--- a/loader/wine.inf.in
+++ b/loader/wine.inf.in
@@ -2303,11 +2303,13 @@ HKLM,SOFTWARE\Microsoft\VisualStudio\14.0\VC\Runtimes\x86,"Version",2,"14.42.344
 11,,start.exe
 11,,winhlp32.exe
 52,win40\0,wineps16.drv,wineps16.drv16
+16426,Microsoft\EdgeWebView\Application\131.0.2903.86\EBWebView\x32,embeddedbrowserwebview.dll
 
 ; 64bit-only fake dlls
 [FakeDllsWin64]
 10,twain_64,sane.ds
 10,twain_64,gphoto2.ds
+16426,Microsoft\EdgeWebView\Application\131.0.2903.86\EBWebView\x64,embeddedbrowserwebview.dll
 
 ; Wow64-only fake dlls
 [FakeDllsWow64]

From 6f71ed23ea6ae3e8a27d13b393ac26dbca6389fe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bernhard=20K=C3=B6lbl?= <bkoelbl@codeweavers.com>
Date: Thu, 12 Dec 2024 19:51:41 +0100
Subject: [PATCH 08/21] embeddedbrowserwebview: Create
 CreateWebViewEnvironmentWithOptionsInternal stub.

With all needed interface definitions and their dependencies.
---
 dlls/embeddedbrowserwebview/Makefile.in       |   4 +
 .../embeddedbrowserwebview.rgs                |   2 +-
 .../embeddedbrowserwebview.spec               |   2 +-
 dlls/embeddedbrowserwebview/main.c            |  43 +
 include/Makefile.in                           |   1 +
 include/webview2.idl                          | 953 ++++++++++++++++++
 6 files changed, 1003 insertions(+), 2 deletions(-)
 create mode 100644 dlls/embeddedbrowserwebview/main.c
 create mode 100644 include/webview2.idl

diff --git a/dlls/embeddedbrowserwebview/Makefile.in b/dlls/embeddedbrowserwebview/Makefile.in
index b410d4689d7..1be0d07dd03 100644
--- a/dlls/embeddedbrowserwebview/Makefile.in
+++ b/dlls/embeddedbrowserwebview/Makefile.in
@@ -1,3 +1,7 @@
 MODULE  = embeddedbrowserwebview.dll
 
 EXTRADLLFLAGS = -Wb,--prefer-native
+
+SOURCES = \
+        embeddedbrowserwebview.rc \
+        main.c \
diff --git a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs
index 50c17ab41d0..6b001dff8d8 100644
--- a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs
+++ b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.rgs
@@ -12,7 +12,7 @@ HKLM
                     {
                         NoRemove {F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}
                         {
-                            val EBWebView = s 'C:\\Program Files (x86)\\Microsoft\\EdgeWebView\\Application\\131.0.2903.86'
+                            val EBWebView = s 'C:\Program Files (x86)\Microsoft\EdgeWebView\Application\131.0.2903.86'
                         }
                     }
                 }
diff --git a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec
index b6d42ec0b82..8ab241743c2 100644
--- a/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec
+++ b/dlls/embeddedbrowserwebview/embeddedbrowserwebview.spec
@@ -3,6 +3,6 @@
 3 stub ??1IDataFieldVisitor@telemetry_client@@UEAA@XZ
 4 stub ??4IDataFieldVisitor@telemetry_client@@QEAAAEAV01@AEBV01@@Z
 5 stub ??_7IDataFieldVisitor@telemetry_client@@6B@
-6 stub CreateWebViewEnvironmentWithOptionsInternal
+6 stdcall CreateWebViewEnvironmentWithOptionsInternal (long wstr wstr ptr ptr)
 7 stub DllCanUnloadNow
 8 stub GetHandleVerifier
diff --git a/dlls/embeddedbrowserwebview/main.c b/dlls/embeddedbrowserwebview/main.c
new file mode 100644
index 00000000000..d5f130d6923
--- /dev/null
+++ b/dlls/embeddedbrowserwebview/main.c
@@ -0,0 +1,43 @@
+/*
+ * WebView2 entry point
+ * Copyright (C) 2024 Bernhard Kölbl for Codeweavers
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, see <https://www.gnu.org/licenses/>.
+ */
+
+#include <stdarg.h>
+
+#include "windef.h"
+
+#include "initguid.h"
+#define COBJMACROS
+#include "objbase.h"
+
+#include "webview2.h"
+
+#include "wine/debug.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(webview2);
+
+/******************************************************************
+ *      CreateWebViewEnvironmentWithOptionsInternal (EMBEDDEDBROWSERWEBVIEW.6)
+ */
+HRESULT WINAPI CreateWebViewEnvironmentWithOptionsInternal ( UINT unk_arg1, PCWSTR browserExecutableFolder, PCWSTR userDataFolder,
+    ICoreWebView2EnvironmentOptions* environmentOptions, ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler* environmentCreatedHandler )
+{
+    FIXME("unk_arg1 %u, browserExecutableFolder %s, userDataFolder %s, environmentOptions %p, environmentCreatedHandler %p stub!\n",
+        unk_arg1, debugstr_w(browserExecutableFolder), debugstr_w(userDataFolder), environmentOptions, environmentCreatedHandler);
+
+    return E_NOTIMPL;
+}
diff --git a/include/Makefile.in b/include/Makefile.in
index d56bc5182d8..c5fa5980ccf 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -817,6 +817,7 @@ SOURCES = \
 	weakreference.idl \
 	webservices.h \
 	websocket.h \
+	webview2.idl \
 	werapi.h \
 	wfext.h \
 	wia.h \
diff --git a/include/webview2.idl b/include/webview2.idl
new file mode 100644
index 00000000000..2c715b649c9
--- /dev/null
+++ b/include/webview2.idl
@@ -0,0 +1,953 @@
+/*
+ * WebView2 interface definitions
+ * Copyright (C) 2024 Bernhard Kölbl for Codeweavers
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, see <https://www.gnu.org/licenses/>.
+ */
+
+#pragma makedep header
+
+import "objidl.idl";
+import "oaidl.idl";
+import "eventtoken.idl";
+
+[
+    uuid(26d34152-879f-4065-bea2-3daa2cfadfb8),
+    version(1.0)
+]
+library WebView2
+{
+
+interface ICoreWebView2;
+interface ICoreWebView2Controller;
+interface ICoreWebView2Deferral;
+interface ICoreWebView2Settings;
+interface ICoreWebView2ProcessFailedEventArgs;
+interface ICoreWebView2ProcessFailedEventHandler;
+interface ICoreWebView2ZoomFactorChangedEventHandler;
+interface ICoreWebView2HttpHeadersCollectionIterator;
+interface ICoreWebView2HttpRequestHeaders;
+interface ICoreWebView2HttpResponseHeaders;
+interface ICoreWebView2WebResourceRequest;
+interface ICoreWebView2WebResourceResponse;
+interface ICoreWebView2NavigationStartingEventArgs;
+interface ICoreWebView2NavigationStartingEventHandler;
+interface ICoreWebView2ContentLoadingEventArgs;
+interface ICoreWebView2ContentLoadingEventHandler;
+interface ICoreWebView2SourceChangedEventArgs;
+interface ICoreWebView2SourceChangedEventHandler;
+interface ICoreWebView2HistoryChangedEventHandler;
+interface ICoreWebView2ScriptDialogOpeningEventArgs;
+interface ICoreWebView2ScriptDialogOpeningEventHandler;
+interface ICoreWebView2NavigationCompletedEventArgs;
+interface ICoreWebView2NavigationCompletedEventHandler;
+interface ICoreWebView2PermissionRequestedEventArgs;
+interface ICoreWebView2PermissionRequestedEventHandler;
+interface ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler;
+interface ICoreWebView2ExecuteScriptCompletedHandler;
+interface ICoreWebView2WebResourceRequestedEventArgs;
+interface ICoreWebView2WebResourceRequestedEventHandler;
+interface ICoreWebView2CapturePreviewCompletedHandler;
+interface ICoreWebView2FocusChangedEventHandler;
+interface ICoreWebView2MoveFocusRequestedEventArgs;
+interface ICoreWebView2MoveFocusRequestedEventHandler;
+interface ICoreWebView2WebMessageReceivedEventArgs;
+interface ICoreWebView2WebMessageReceivedEventHandler;
+interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs;
+interface ICoreWebView2DevToolsProtocolEventReceivedEventHandler;
+interface ICoreWebView2CallDevToolsProtocolMethodCompletedHandler;
+interface ICoreWebView2CreateCoreWebView2ControllerCompletedHandler;
+interface ICoreWebView2NewWindowRequestedEventArgs;
+interface ICoreWebView2WindowFeatures;
+interface ICoreWebView2NewWindowRequestedEventHandler;
+interface ICoreWebView2DocumentTitleChangedEventHandler;
+interface ICoreWebView2AcceleratorKeyPressedEventArgs;
+interface ICoreWebView2AcceleratorKeyPressedEventHandler;
+interface ICoreWebView2NewBrowserVersionAvailableEventHandler;
+interface ICoreWebView2ContainsFullScreenElementChangedEventHandler;
+interface ICoreWebView2WindowCloseRequestedEventHandler;
+interface ICoreWebView2Environment;
+interface ICoreWebView2EnvironmentOptions;
+interface ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler;
+interface ICoreWebView2DevToolsProtocolEventReceiver;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT
+{
+    COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG,
+    COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_JPEG,
+} COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_SCRIPT_DIALOG_KIND
+{
+    COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT,
+    COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM,
+    COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT,
+    COREWEBVIEW2_SCRIPT_DIALOG_KIND_BEFOREUNLOAD,
+} COREWEBVIEW2_SCRIPT_DIALOG_KIND;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_PROCESS_FAILED_KIND
+{
+    COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED,
+    COREWEBVIEW2_PROCESS_FAILED_KIND_UNKNOWN_PROCESS_EXITED,
+} COREWEBVIEW2_PROCESS_FAILED_KIND;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_PERMISSION_KIND
+{
+    COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION,
+    COREWEBVIEW2_PERMISSION_KIND_MICROPHONE,
+    COREWEBVIEW2_PERMISSION_KIND_CAMERA,
+    COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION,
+    COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS,
+    COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS,
+    COREWEBVIEW2_PERMISSION_KIND_CLIPBOARD_READ,
+} COREWEBVIEW2_PERMISSION_KIND;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_PERMISSION_STATE
+{
+    COREWEBVIEW2_PERMISSION_STATE_DEFAULT,
+    COREWEBVIEW2_PERMISSION_STATE_ALLOW,
+    COREWEBVIEW2_PERMISSION_STATE_DENY,
+} COREWEBVIEW2_PERMISSION_STATE;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_WEB_ERROR_STATUS
+{
+    COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID,
+    COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE,
+    COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT,
+    COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET,
+    COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT,
+    COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED,
+    COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR,
+} COREWEBVIEW2_WEB_ERROR_STATUS;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_WEB_RESOURCE_CONTEXT
+{
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT,
+    COREWEBVIEW2_WEB_RESOURCE_CONTEXT_OTHER,
+} COREWEBVIEW2_WEB_RESOURCE_CONTEXT;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_MOVE_FOCUS_REASON
+{
+    COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC,
+    COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT,
+    COREWEBVIEW2_MOVE_FOCUS_REASON_PREVIOUS,
+} COREWEBVIEW2_MOVE_FOCUS_REASON;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_KEY_EVENT_KIND
+{
+    COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN,
+    COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP,
+    COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN,
+    COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_UP,
+} COREWEBVIEW2_KEY_EVENT_KIND;
+
+typedef struct COREWEBVIEW2_PHYSICAL_KEY_STATUS
+{
+    UINT32 RepeatCount;
+    UINT32 ScanCode;
+    BOOL IsExtendedKey;
+    BOOL IsMenuKeyDown;
+    BOOL WasKeyDown;
+    BOOL IsKeyReleased;
+} COREWEBVIEW2_PHYSICAL_KEY_STATUS;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_MOUSE_EVENT_KIND
+{
+    COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL                          = 0x020E,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOUBLE_CLICK                  = 0x0203,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN                          = 0x0201,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP                            = 0x0202,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_LEAVE                                     = 0x02A3,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOUBLE_CLICK                = 0x0209,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN                        = 0x0207,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP                          = 0x0208,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE                                      = 0x0200,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOUBLE_CLICK                 = 0x0206,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN                         = 0x0204,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP                           = 0x0205,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL                                     = 0x020A,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOUBLE_CLICK                     = 0x020D,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOWN                             = 0x020B,
+    COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_UP                               = 0x020C,
+} COREWEBVIEW2_MOUSE_EVENT_KIND;
+
+[v1_enum]
+typedef enum COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS {
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_NONE                              = 0x0,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_LEFT_BUTTON                       = 0x0001,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_RIGHT_BUTTON                      = 0x0002,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_SHIFT                             = 0x0004,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_CONTROL                           = 0x0008,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_MIDDLE_BUTTON                     = 0x0010,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON1                         = 0x0020,
+    COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON2                         = 0x0040,
+} COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS;
+cpp_quote("DEFINE_ENUM_FLAG_OPERATORS(COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS);")
+
+[v1_enum]
+typedef enum COREWEBVIEW2_POINTER_EVENT_KIND {
+    COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE                                = 0x024B,
+    COREWEBVIEW2_POINTER_EVENT_KIND_DOWN                                    = 0x0246,
+    COREWEBVIEW2_POINTER_EVENT_KIND_ENTER                                   = 0x0249,
+    COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE                                   = 0x024A,
+    COREWEBVIEW2_POINTER_EVENT_KIND_UP                                      = 0x0247,
+    COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE                                  = 0x0245,
+} COREWEBVIEW2_POINTER_EVENT_KIND;
+
+[
+    uuid(76eceacb-0462-4d94-ac83-423a6793775e),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2 : IUnknown
+{
+    [propget] HRESULT Settings( [out, retval] ICoreWebView2Settings **settings );
+    [propget] HRESULT Source( [out, retval] LPWSTR *uri );
+    HRESULT Navigate( [in] LPCWSTR uri );
+    HRESULT NavigateToString( [in] LPCWSTR htmlContent );
+    HRESULT add_NavigationStarting( [in] ICoreWebView2NavigationStartingEventHandler *eventHandler, [out] EventRegistrationToken *token );
+    HRESULT remove_NavigationStarting( [in] EventRegistrationToken token );
+    HRESULT add_ContentLoading( [in] ICoreWebView2ContentLoadingEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_ContentLoading( [in] EventRegistrationToken token );
+    HRESULT add_SourceChanged( [in] ICoreWebView2SourceChangedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_SourceChanged( [in] EventRegistrationToken token );
+    HRESULT add_HistoryChanged( [in] ICoreWebView2HistoryChangedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_HistoryChanged( [in] EventRegistrationToken token );
+    HRESULT add_NavigationCompleted( [in] ICoreWebView2NavigationCompletedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_NavigationCompleted( [in] EventRegistrationToken token );
+    HRESULT add_FrameNavigationStarting( [in] ICoreWebView2NavigationStartingEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_FrameNavigationStarting( [in] EventRegistrationToken token );
+    HRESULT add_FrameNavigationCompleted( [in] ICoreWebView2NavigationCompletedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_FrameNavigationCompleted( [in] EventRegistrationToken token );
+    HRESULT add_ScriptDialogOpening( [in] ICoreWebView2ScriptDialogOpeningEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_ScriptDialogOpening( [in] EventRegistrationToken token );
+    HRESULT add_PermissionRequested( [in] ICoreWebView2PermissionRequestedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_PermissionRequested( [in] EventRegistrationToken token );
+    HRESULT add_ProcessFailed( [in] ICoreWebView2ProcessFailedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_ProcessFailed( [in] EventRegistrationToken token );
+    HRESULT AddScriptToExecuteOnDocumentCreated( [in] LPCWSTR javaScript,[in] ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler *handler );
+    HRESULT RemoveScriptToExecuteOnDocumentCreated( [in] LPCWSTR id );
+    HRESULT ExecuteScript( [in] LPCWSTR javaScript,[in] ICoreWebView2ExecuteScriptCompletedHandler *handler );
+    HRESULT CapturePreview( [in] COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat,[in] IStream *imageStream,[in] ICoreWebView2CapturePreviewCompletedHandler *handler );
+    HRESULT Reload( );
+    HRESULT PostWebMessageAsJson( [in] LPCWSTR webMessageAsJson );
+    HRESULT PostWebMessageAsString( [in] LPCWSTR webMessageAsString );
+    HRESULT add_WebMessageReceived( [in] ICoreWebView2WebMessageReceivedEventHandler *handler,[out] EventRegistrationToken *token );
+    HRESULT remove_WebMessageReceived( [in] EventRegistrationToken token );
+    HRESULT CallDevToolsProtocolMethod( [in] LPCWSTR methodName,[in] LPCWSTR parametersAsJson,[in] ICoreWebView2CallDevToolsProtocolMethodCompletedHandler *handler );
+    [propget] HRESULT BrowserProcessId( [out, retval] UINT32 *value );
+    [propget] HRESULT CanGoBack( [out, retval] BOOL *canGoBack );
+    [propget] HRESULT CanGoForward( [out, retval] BOOL *canGoForward );
+    HRESULT GoBack( );
+    HRESULT GoForward( );
+    HRESULT GetDevToolsProtocolEventReceiver( [in] LPCWSTR eventName,[out, retval] ICoreWebView2DevToolsProtocolEventReceiver **receiver );
+    HRESULT Stop( );
+    HRESULT add_NewWindowRequested( [in] ICoreWebView2NewWindowRequestedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_NewWindowRequested( [in] EventRegistrationToken token );
+    HRESULT add_DocumentTitleChanged( [in] ICoreWebView2DocumentTitleChangedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_DocumentTitleChanged( [in] EventRegistrationToken token );
+    [propget] HRESULT DocumentTitle( [out, retval] LPWSTR *title );
+    HRESULT AddHostObjectToScript( [in] LPCWSTR name, [in] VARIANT *object );
+    HRESULT RemoveHostObjectFromScript( [in] LPCWSTR name );
+    HRESULT OpenDevToolsWindow( );
+    HRESULT add_ContainsFullScreenElementChanged( [in] ICoreWebView2ContainsFullScreenElementChangedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_ContainsFullScreenElementChanged( [in] EventRegistrationToken token );
+    [propget] HRESULT ContainsFullScreenElement( [out, retval] BOOL *containsFullScreenElement );
+    HRESULT add_WebResourceRequested( [in] ICoreWebView2WebResourceRequestedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_WebResourceRequested( [in] EventRegistrationToken token );
+    HRESULT AddWebResourceRequestedFilter( [in] LPCWSTR const uri,[in] COREWEBVIEW2_WEB_RESOURCE_CONTEXT const resourceContext );
+    HRESULT RemoveWebResourceRequestedFilter( [in] LPCWSTR const uri,[in] COREWEBVIEW2_WEB_RESOURCE_CONTEXT const resourceContext );
+    HRESULT add_WindowCloseRequested( [in] ICoreWebView2WindowCloseRequestedEventHandler *eventHandler,[out] EventRegistrationToken *token );
+    HRESULT remove_WindowCloseRequested( [in] EventRegistrationToken token );
+}
+
+[
+    uuid(4d00c0d1-9434-4eb6-8078-8697a560334f), 
+    object, 
+    pointer_default(unique)
+]
+interface ICoreWebView2Controller : IUnknown
+{
+    [propget] HRESULT IsVisible( [out, retval] BOOL *isVisible );
+    [propput] HRESULT IsVisible( [in] BOOL isVisible );
+    [propget] HRESULT Bounds( [out, retval] RECT *bounds );
+    [propput] HRESULT Bounds( [in] RECT bounds );
+    [propget] HRESULT ZoomFactor( [out, retval] double *zoomFactor );
+    [propput] HRESULT ZoomFactor( [in] double zoomFactor );
+    HRESULT add_ZoomFactorChanged( [in] ICoreWebView2ZoomFactorChangedEventHandler *eventHandler, [out] EventRegistrationToken *token );
+    HRESULT remove_ZoomFactorChanged( [in] EventRegistrationToken token );
+    HRESULT SetBoundsAndZoomFactor( [in] RECT bounds, [in] double zoomFactor );
+    HRESULT MoveFocus( [in] COREWEBVIEW2_MOVE_FOCUS_REASON reason );
+    HRESULT add_MoveFocusRequested( [in] ICoreWebView2MoveFocusRequestedEventHandler *eventHandler, [out] EventRegistrationToken *token );
+    HRESULT remove_MoveFocusRequested([in] EventRegistrationToken token);
+    HRESULT add_GotFocus( [in] ICoreWebView2FocusChangedEventHandler *eventHandler, [out] EventRegistrationToken *token );
+    HRESULT remove_GotFocus( [in] EventRegistrationToken token );
+    HRESULT add_LostFocus( [in] ICoreWebView2FocusChangedEventHandler *eventHandler, [out] EventRegistrationToken *token );
+    HRESULT remove_LostFocus( [in] EventRegistrationToken token );
+    HRESULT add_AcceleratorKeyPressed( [in] ICoreWebView2AcceleratorKeyPressedEventHandler *eventHandler, [out] EventRegistrationToken *token);
+    HRESULT remove_AcceleratorKeyPressed( [in] EventRegistrationToken token );
+    [propget] HRESULT ParentWindow( [out, retval] HWND *parentWindow );
+    [propput] HRESULT ParentWindow( [in] HWND parentWindow );
+    HRESULT NotifyParentWindowPositionChanged( );
+    HRESULT Close( );
+    [propget] HRESULT CoreWebView2( [out, retval] ICoreWebView2 **coreWebView2 );
+}
+
+[
+    uuid(c10e7f7b-b585-46f0-a623-8befbf3e4ee0),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2Deferral : IUnknown
+{
+    HRESULT Complete( );
+}
+
+[
+    uuid(e562e4f0-d7fa-43ac-8d71-c05150499f00),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2Settings : IUnknown 
+{
+    [propget] HRESULT IsScriptEnabled( [out, retval] BOOL *isScriptEnabled );
+    [propput] HRESULT IsScriptEnabled( [in] BOOL isScriptEnabled );
+    [propget] HRESULT IsWebMessageEnabled( [out, retval] BOOL *isWebMessageEnabled );
+    [propput] HRESULT IsWebMessageEnabled( [in] BOOL isWebMessageEnabled );
+    [propget] HRESULT AreDefaultScriptDialogsEnabled( [out, retval] BOOL *areDefaultScriptDialogsEnabled );
+    [propput] HRESULT AreDefaultScriptDialogsEnabled( [in] BOOL areDefaultScriptDialogsEnabled );
+    [propget] HRESULT IsStatusBarEnabled( [out, retval] BOOL *isStatusBarEnabled );
+    [propput] HRESULT IsStatusBarEnabled( [in] BOOL isStatusBarEnabled );
+    [propget] HRESULT AreDevToolsEnabled( [out, retval] BOOL *areDevToolsEnabled );
+    [propput] HRESULT AreDevToolsEnabled( [in] BOOL areDevToolsEnabled );
+    [propget] HRESULT AreDefaultContextMenusEnabled( [out, retval] BOOL *enabled );
+    [propput] HRESULT AreDefaultContextMenusEnabled( [in] BOOL enabled );
+    [propget] HRESULT AreHostObjectsAllowed( [out, retval] BOOL *allowed );
+    [propput] HRESULT AreHostObjectsAllowed( [in] BOOL allowed );
+    [propget] HRESULT IsZoomControlEnabled( [out, retval] BOOL *enabled );
+    [propput] HRESULT IsZoomControlEnabled( [in] BOOL enabled );
+    [propget] HRESULT IsBuiltInErrorPageEnabled( [out, retval] BOOL *enabled );
+    [propput] HRESULT IsBuiltInErrorPageEnabled( [in] BOOL enabled );
+}
+
+[
+    uuid(8155a9a4-1474-4a86-8cae-151b0fa6b8ca),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ProcessFailedEventArgs : IUnknown
+{
+    [propget] HRESULT ProcessFailedKind( [out, retval] COREWEBVIEW2_PROCESS_FAILED_KIND *processFailedKind );
+}
+
+[
+    uuid(79e0aea4-990b-42d9-aa1d-0fcc2e5bc7f1),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ProcessFailedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender,[in] ICoreWebView2ProcessFailedEventArgs *args );
+}
+
+[
+    uuid(b52d71d6-c4df-4543-a90c-64a3e60f38cb),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ZoomFactorChangedEventHandler : IUnknown
+{
+    HRESULT Invoke([in] ICoreWebView2Controller *sender, [in] IUnknown *args);
+}
+
+[
+    uuid(0702fc30-f43b-47bb-ab52-a42cb552ad9f),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2HttpHeadersCollectionIterator : IUnknown
+{
+    HRESULT GetCurrentHeader( [out] LPWSTR *name, [out] LPWSTR *value );
+    [propget] HRESULT HasCurrentHeader( [out, retval] BOOL *hasCurrent );
+    HRESULT MoveNext( [out, retval] BOOL *hasNext );
+}
+
+[
+    uuid(e86cac0e-5523-465c-b536-8fb9fc8c8c60),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2HttpRequestHeaders : IUnknown
+{
+    HRESULT GetHeader( [in] LPCWSTR name, [out, retval] LPWSTR *value );
+    HRESULT GetHeaders( [in] LPCWSTR name, [out, retval] ICoreWebView2HttpHeadersCollectionIterator **iterator );
+    HRESULT Contains( [in] LPCWSTR name, [out, retval] BOOL *contains );
+    HRESULT SetHeader( [in] LPCWSTR name, [in] LPCWSTR value );
+    HRESULT RemoveHeader( [in] LPCWSTR name );
+    HRESULT GetIterator( [out, retval] ICoreWebView2HttpHeadersCollectionIterator **iterator );
+}
+
+[
+    uuid(03c5ff5a-9b45-4a88-881c-89a9f328619c),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2HttpResponseHeaders : IUnknown
+{
+    HRESULT AppendHeader( [in] LPCWSTR name, [in] LPCWSTR value );
+    HRESULT Contains( [in] LPCWSTR name, [out, retval] BOOL *contains );
+    HRESULT GetHeader( [in] LPCWSTR name, [out, retval] LPWSTR *value );
+    HRESULT GetHeaders( [in] LPCWSTR name, [out, retval] ICoreWebView2HttpHeadersCollectionIterator **iterator );
+    HRESULT GetIterator( [out, retval] ICoreWebView2HttpHeadersCollectionIterator **iterator );
+}
+
+[
+    uuid(97055cd4-512c-4264-8b5f-e3f446cea6a5),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WebResourceRequest : IUnknown
+{
+    [propget] HRESULT Uri( [out, retval] LPWSTR *uri );
+    [propput] HRESULT Uri( [in] LPCWSTR uri );
+    [propget] HRESULT Method( [out, retval] LPWSTR *method );
+    [propput] HRESULT Method( [in] LPCWSTR method );
+    [propget] HRESULT Content( [out, retval] IStream **content );
+    [propput] HRESULT Content( [in] IStream *content );
+    [propget] HRESULT Headers( [out, retval] ICoreWebView2HttpRequestHeaders **headers );
+}
+
+[
+    uuid(aafcc94f-fa27-48fd-97df-830ef75aaec9),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WebResourceResponse : IUnknown
+{
+    [propget] HRESULT Content( [out, retval] IStream **content );
+    [propput] HRESULT Content( [in] IStream *content );
+    [propget] HRESULT Headers( [out, retval] ICoreWebView2HttpResponseHeaders **headers );
+    [propget] HRESULT StatusCode( [out, retval] int *statusCode );
+    [propput] HRESULT StatusCode( [in] int statusCode );
+    [propget] HRESULT ReasonPhrase( [out, retval] LPWSTR *reasonPhrase );
+    [propput] HRESULT ReasonPhrase( [in] LPCWSTR reasonPhrase );
+}
+
+[
+    uuid(5b495469-e119-438a-9b18-7604f25f2e49),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NavigationStartingEventArgs : IUnknown
+{
+    [propget] HRESULT Uri( [out, retval] LPWSTR *uri );
+    [propget] HRESULT IsUserInitiated( [out, retval] BOOL *isUserInitiated );
+    [propget] HRESULT IsRedirected( [out, retval] BOOL *isRedirected );
+    [propget] HRESULT RequestHeaders( [out, retval] ICoreWebView2HttpRequestHeaders **requestHeaders );
+    [propget] HRESULT Cancel( [out, retval] BOOL *cancel );
+    [propput] HRESULT Cancel( [in] BOOL cancel );
+    [propget] HRESULT NavigationId( [out, retval] UINT64 *navigationId );
+}
+
+[
+    uuid(9adbe429-f36d-432b-9ddc-f8881fbd76e3),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NavigationStartingEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender,[in] ICoreWebView2NavigationStartingEventArgs *args );
+}
+
+[
+    uuid(0c8a1275-9b6b-4901-87ad-70df25bafa6e),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ContentLoadingEventArgs : IUnknown
+{
+    [propget] HRESULT IsErrorPage( [out, retval] BOOL *isErrorPage );
+    [propget] HRESULT NavigationId( [out, retval] UINT64 *navigationId );
+}
+
+[
+    uuid(364471e7-f2be-4910-bdba-d72077d51c4b),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ContentLoadingEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] ICoreWebView2ContentLoadingEventArgs *args );
+}
+
+[
+    uuid(31e0e545-1dba-4266-8914-f63848a1f7d7),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2SourceChangedEventArgs : IUnknown
+{
+    [propget] HRESULT IsNewDocument( [out, retval] BOOL *isNewDocument );
+}
+
+[
+    uuid(3c067f9f-5388-4772-8b48-79f7ef1ab37c),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2SourceChangedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] ICoreWebView2SourceChangedEventArgs *args );
+}
+
+[
+    uuid(c79a420c-efd9-4058-9295-3e8b4bcab645),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2HistoryChangedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] IUnknown *args );
+}
+
+[
+    uuid(7390bb70-abe0-4843-9529-f143b31b03d6),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ScriptDialogOpeningEventArgs : IUnknown
+{
+    [propget] HRESULT Uri([out, retval] LPWSTR *uri);
+    [propget] HRESULT Kind([out, retval] COREWEBVIEW2_SCRIPT_DIALOG_KIND *kind);
+    [propget] HRESULT Message([out, retval] LPWSTR *message);
+    HRESULT Accept( );
+    [propget] HRESULT DefaultText([out, retval] LPWSTR *defaultText);
+    [propget] HRESULT ResultText([out, retval] LPWSTR *resultText);
+    [propput] HRESULT ResultText([in] LPCWSTR resultText);
+    HRESULT GetDeferral( [out, retval] ICoreWebView2Deferral **deferral );
+}
+
+[
+    uuid(ef381bf9-afa8-4e37-91c4-8ac48524bdfb),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ScriptDialogOpeningEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender,[in] ICoreWebView2ScriptDialogOpeningEventArgs* args );
+}
+
+[
+    uuid(30d68b7d-20d9-4752-a9ca-ec8448fbb5c1),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NavigationCompletedEventArgs : IUnknown
+{
+    [propget] HRESULT IsSuccess( [out, retval] BOOL *isSuccess );
+    [propget] HRESULT WebErrorStatus( [out, retval] COREWEBVIEW2_WEB_ERROR_STATUS *webErrorStatus );
+    [propget] HRESULT NavigationId( [out, retval] UINT64 *navigationId );
+}
+
+[
+    uuid(d33a35bf-1c49-4f98-93ab-006e0533fe1c),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NavigationCompletedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender,[in] ICoreWebView2NavigationCompletedEventArgs *args );
+}
+
+[
+    uuid(973ae2ef-ff18-4894-8fb2-3c758f046810),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2PermissionRequestedEventArgs : IUnknown
+{
+    [propget] HRESULT Uri( [out, retval] LPWSTR *uri );
+    [propget] HRESULT PermissionKind( [out, retval] COREWEBVIEW2_PERMISSION_KIND *permissionKind);
+    [propget] HRESULT IsUserInitiated( [out, retval] BOOL *isUserInitiated);
+    [propget] HRESULT State( [out, retval] COREWEBVIEW2_PERMISSION_STATE *state);
+    [propput] HRESULT State( [in] COREWEBVIEW2_PERMISSION_STATE state);
+    HRESULT GetDeferral( [out, retval] ICoreWebView2Deferral **deferral);
+}
+
+[
+    uuid(15e1c6a3-c72a-4df3-91d7-d097fbec6bfd),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2PermissionRequestedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender,[in] ICoreWebView2PermissionRequestedEventArgs *args );
+}
+
+[
+    uuid(b99369f3-9b11-47b5-bc6f-8e7895fcea17),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler : IUnknown
+{
+    HRESULT Invoke( [in] HRESULT errorCode, [in] LPCWSTR id );
+}
+
+[
+    uuid(49511172-cc67-4bca-9923-137112f4c4cc),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ExecuteScriptCompletedHandler : IUnknown
+{
+    HRESULT Invoke( [in] HRESULT errorCode, [in] LPCWSTR resultObjectAsJson );
+}
+
+[
+    uuid(453e667f-12c7-49d4-be6d-ddbe7956f57a),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WebResourceRequestedEventArgs : IUnknown
+{
+    [propget] HRESULT Request( [out, retval] ICoreWebView2WebResourceRequest **request );
+    [propget] HRESULT Response( [out, retval] ICoreWebView2WebResourceResponse **response );
+    [propput] HRESULT Response( [in] ICoreWebView2WebResourceResponse *response );
+    HRESULT GetDeferral( [out, retval] ICoreWebView2Deferral **deferral );
+    [propget] HRESULT ResourceContext( [out, retval] COREWEBVIEW2_WEB_RESOURCE_CONTEXT *context );
+}
+
+[
+    uuid(ab00b74c-15f1-4646-80e8-e76341d25d71),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WebResourceRequestedEventHandler : IUnknown
+{
+    HRESULT Invoke([in] ICoreWebView2 *sender,[in] ICoreWebView2WebResourceRequestedEventArgs *args);
+}
+
+[
+    uuid(697e05e9-3d8f-45fa-96f4-8ffe1ededaf5),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2CapturePreviewCompletedHandler : IUnknown
+{
+    HRESULT Invoke( [in] HRESULT errorCode );
+}
+
+[
+    uuid(05ea24bd-6452-4926-9014-4b82b498135d),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2FocusChangedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2Controller *sender, [in] IUnknown *args );
+}
+
+[
+    uuid(2d6aa13b-3839-4a15-92fc-d88b3c0d9c9d),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2MoveFocusRequestedEventArgs : IUnknown
+{
+    [propget] HRESULT Reason( [out, retval] COREWEBVIEW2_MOVE_FOCUS_REASON *reason );
+    [propget] HRESULT Handled( [out, retval] BOOL *value );
+    [propput] HRESULT Handled( [in] BOOL value );
+}
+
+[
+    uuid(9f760f8a-fb79-42be-9990-7b56900fa9c7),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2AcceleratorKeyPressedEventArgs : IUnknown
+{
+    [propget] HRESULT KeyEventKind( [out, retval] COREWEBVIEW2_KEY_EVENT_KIND *keyEventKind );
+    [propget] HRESULT VirtualKey( [out, retval] UINT *virtualKey );
+    [propget] HRESULT KeyEventLParam([ out, retval] INT *lParam );
+    [propget] HRESULT PhysicalKeyStatus( [out, retval] COREWEBVIEW2_PHYSICAL_KEY_STATUS *physicalKeyStatus );
+    [propget] HRESULT Handled( [out, retval] BOOL *handled );
+    [propput] HRESULT Handled( [in] BOOL handled );
+}
+
+[
+    uuid(69035451-6dc7-4cb8-9bce-b2bd70ad289f),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2MoveFocusRequestedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2Controller *sender, [in] ICoreWebView2MoveFocusRequestedEventArgs *args );
+}
+
+[
+    uuid(0f99a40c-e962-4207-9e92-e3d542eff849),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WebMessageReceivedEventArgs : IUnknown
+{
+    [propget] HRESULT Source( [out, retval] LPWSTR *source );
+    [propget] HRESULT WebMessageAsJson( [out, retval] LPWSTR *webMessageAsJson );
+    HRESULT TryGetWebMessageAsString( [out, retval] LPWSTR *webMessageAsString );
+}
+
+[
+    uuid(57213f19-00e6-49fa-8e07-898ea01ecbd2),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WebMessageReceivedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] ICoreWebView2WebMessageReceivedEventArgs *args );
+}
+
+[
+    uuid(653c2959-bb3a-4377-8632-b58ada4e66c4),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2DevToolsProtocolEventReceivedEventArgs : IUnknown
+{
+    [propget] HRESULT ParameterObjectAsJson( [out, retval] LPWSTR *parameterObjectAsJson );
+}
+
+[
+    uuid(e2fda4be-5456-406c-a261-3d452138362c),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2DevToolsProtocolEventReceivedEventHandler : IUnknown
+{
+  HRESULT Invoke( [in] ICoreWebView2 *sender, [in] ICoreWebView2DevToolsProtocolEventReceivedEventArgs *args);
+}
+
+[
+    uuid(5c4889f0-5ef6-4c5a-952c-d8f1b92d0574),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2CallDevToolsProtocolMethodCompletedHandler : IUnknown
+{
+    HRESULT Invoke( [in] HRESULT errorCode, [in] LPCWSTR returnObjectAsJson );
+}
+
+[
+    uuid(6c4819f3-c9b7-4260-8127-c9f5bde7f68c),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2CreateCoreWebView2ControllerCompletedHandler : IUnknown
+{
+    HRESULT Invoke( HRESULT errorCode, ICoreWebView2Controller *createdController );
+}
+
+[
+    uuid(34acb11c-fc37-4418-9132-f9c21d1eafb9),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NewWindowRequestedEventArgs : IUnknown
+{
+    [propget] HRESULT Uri( [out, retval] LPWSTR *uri);
+    [propput] HRESULT NewWindow( [in] ICoreWebView2 *newWindow);
+    [propget] HRESULT NewWindow( [out, retval] ICoreWebView2 **newWindow);
+    [propput] HRESULT Handled( [in] BOOL handled);
+    [propget] HRESULT Handled( [out, retval] BOOL *handled);
+    [propget] HRESULT IsUserInitiated( [out, retval] BOOL *isUserInitiated);
+    HRESULT GetDeferral( [out, retval] ICoreWebView2Deferral **deferral);
+    [propget] HRESULT WindowFeatures( [out, retval] ICoreWebView2WindowFeatures **value);
+}
+
+[
+    uuid(5eaf559f-b46e-4397-8860-e422f287ff1e),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WindowFeatures : IUnknown
+{
+    [propget] HRESULT HasPosition( [out, retval] BOOL *value);
+    [propget] HRESULT HasSize( [out, retval] BOOL *value);
+    [propget] HRESULT Left( [out, retval] UINT32 *value);
+    [propget] HRESULT Top( [out, retval] UINT32 *value);
+    [propget] HRESULT Height( [out, retval] UINT32 *value);
+    [propget] HRESULT Width( [out, retval] UINT32 *value);
+    [propget] HRESULT ShouldDisplayMenuBar( [out, retval] BOOL *value);
+    [propget] HRESULT ShouldDisplayStatus( [out, retval] BOOL *value);
+    [propget] HRESULT ShouldDisplayToolbar( [out, retval] BOOL *value);
+    [propget] HRESULT ShouldDisplayScrollBars( [out, retval] BOOL *value);
+}
+
+[
+    uuid(d4c185fe-c81c-4989-97af-2d3fa7ab5651),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NewWindowRequestedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender,[in] ICoreWebView2NewWindowRequestedEventArgs *args );
+}
+
+[
+    uuid(f5f2b923-953e-4042-9f95-f3a118e1afd4),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2DocumentTitleChangedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] IUnknown *args );
+}
+
+[
+    uuid(b29c7e28-fa79-41a8-8e44-65811c76dcb2),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2AcceleratorKeyPressedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2Controller *sender, [in] ICoreWebView2AcceleratorKeyPressedEventArgs *args );
+}
+
+[
+    uuid(f9a2976e-d34e-44fc-adee-81b6b57ca914),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2NewBrowserVersionAvailableEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2Environment *sender, [in] IUnknown *args );
+}
+
+[
+    uuid(e45d98b1-afef-45be-8baf-6c7728867f73),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2ContainsFullScreenElementChangedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] IUnknown *args );
+}
+
+[
+    uuid(5c19e9e0-092f-486b-affa-ca8231913039),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2WindowCloseRequestedEventHandler : IUnknown
+{
+    HRESULT Invoke( [in] ICoreWebView2 *sender, [in] IUnknown *args );
+}
+
+[
+    uuid(b96d755e-0319-4e92-a296-23436f46a1fc),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2Environment : IUnknown
+{
+    HRESULT CreateCoreWebView2Controller(HWND parentWindow, ICoreWebView2CreateCoreWebView2ControllerCompletedHandler *handler);
+    HRESULT CreateWebResourceResponse([in] IStream *content, [in] int statusCode,
+                                      [in] LPCWSTR reasonPhrase, [in] LPCWSTR headers, [out, retval] ICoreWebView2WebResourceResponse **response); 
+    [propget] HRESULT BrowserVersionString([out, retval] LPWSTR *versionInfo);
+    HRESULT add_NewBrowserVersionAvailable([in] ICoreWebView2NewBrowserVersionAvailableEventHandler *eventHandler, [out] EventRegistrationToken *token);
+    HRESULT remove_NewBrowserVersionAvailable([in] EventRegistrationToken token);
+}
+
+[
+    uuid(2fde08a8-1e9a-4766-8c05-95a9ceb9d1c5),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2EnvironmentOptions : IUnknown
+{
+    [propget] HRESULT AdditionalBrowserArguments([out, retval] LPWSTR *value);
+    [propput] HRESULT AdditionalBrowserArguments([in] LPCWSTR value);
+    [propget] HRESULT Language([out, retval] LPWSTR *value);
+    [propput] HRESULT Language([in] LPCWSTR value);
+    [propget] HRESULT TargetCompatibleBrowserVersion([out, retval] LPWSTR *value);
+    [propput] HRESULT TargetCompatibleBrowserVersion([in] LPCWSTR value);
+    [propget] HRESULT AllowSingleSignOnUsingOSPrimaryAccount([out, retval] BOOL *allow);
+    [propput] HRESULT AllowSingleSignOnUsingOSPrimaryAccount([in] BOOL allow);
+}
+
+[
+    uuid(4e8a3389-c9d8-4bd2-b6b5-124fee6cc14d),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler : IUnknown
+{
+    HRESULT Invoke( HRESULT errorCode, ICoreWebView2Environment* createdEnvironment );
+}
+
+[
+    uuid(b32ca51a-8371-45e9-9317-af021d080367),
+    object,
+    pointer_default(unique)
+]
+interface ICoreWebView2DevToolsProtocolEventReceiver : IUnknown
+{
+    HRESULT add_DevToolsProtocolEventReceived( [in] ICoreWebView2DevToolsProtocolEventReceivedEventHandler *handler,[out] EventRegistrationToken *token );
+    HRESULT remove_DevToolsProtocolEventReceived( [in] EventRegistrationToken token );
+}
+
+}

From d526ef26bc1ea9598e44990969839f149de2d4fc Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Thu, 13 Mar 2025 20:58:48 +0200
Subject: [PATCH 09/21] Revert "HACK: winegstreamer: Set GST_GL_WINDOW
 environment variable."

This reverts commit 37818f7a547f7090ef684f8202438374fc31a165.
---
 dlls/winegstreamer/unixlib.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/dlls/winegstreamer/unixlib.c b/dlls/winegstreamer/unixlib.c
index 0d1b3b6f65a..3d4c86c0082 100644
--- a/dlls/winegstreamer/unixlib.c
+++ b/dlls/winegstreamer/unixlib.c
@@ -278,7 +278,6 @@ NTSTATUS wg_init_gstreamer(void *arg)
     if (params->err_on)
         setenv("GST_DEBUG", "1", FALSE);
     setenv("GST_DEBUG_NO_COLOR", "1", FALSE);
-    setenv("GST_GL_WINDOW", "x11", 1);
 
     /* GStreamer installs a temporary SEGV handler when it loads plugins
      * to initialize its registry calling exit(-1) when any fault is caught.

From 23e36eea6ed02e9d1cc4060ae07b89bc179e6665 Mon Sep 17 00:00:00 2001
From: Matthias Gorzellik <matthias.gorzellik@gmail.com>
Date: Mon, 3 Feb 2025 21:36:49 +0100
Subject: [PATCH 10/21] winebus.sys: add function to identify fanatec
 wheel-bases and enable hidraw for them

---
 dlls/winebus.sys/main.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/dlls/winebus.sys/main.c b/dlls/winebus.sys/main.c
index 858c89d7d5a..27edacdd97b 100644
--- a/dlls/winebus.sys/main.c
+++ b/dlls/winebus.sys/main.c
@@ -450,6 +450,20 @@ static const WCHAR *wcscasestr(const WCHAR *search, const WCHAR *needle)
     return NULL;
 }
 
+static BOOL is_fanatec_wheelbase(WORD pid)
+{
+    if (pid == 0x0e03) return TRUE; /* Fanatec CSL Elite */
+    if (pid == 0x0005) return TRUE; /* Fanatec CSL Elite PS4 */
+    if (pid == 0x0020) return TRUE; /* Fanatec CSL DD / DD Pro / ClubSport DD */
+    if (pid == 0x0001) return TRUE; /* Fanatec ClubSport V2 */
+    if (pid == 0x0004) return TRUE; /* Fanatec ClubSport V2.5 */
+    if (pid == 0x0006) return TRUE; /* Fanatec Podium DD1 */
+    if (pid == 0x0007) return TRUE; /* Fanatec Podium DD2 */
+    if (pid == 0x0011) return TRUE; /* Fanatec CSR Elite / Forza Motorsport */
+    if (pid == 0xe0fe) return TRUE; /* CS-WB-DD (FW update mode) */
+    return FALSE;
+}
+
 static BOOL is_hidraw_enabled(WORD vid, WORD pid, const USAGE_AND_PAGE *usages, UINT buttons)
 {
     char buffer[FIELD_OFFSET(KEY_VALUE_PARTIAL_INFORMATION, Data[1024])];
@@ -518,6 +532,7 @@ static BOOL is_hidraw_enabled(WORD vid, WORD pid, const USAGE_AND_PAGE *usages,
     case 0x0eb7:
         if (pid == 0x183b) prefer_hidraw = TRUE; /* Fanatec ClubSport Pedals v3 */
         if (pid == 0x1839) prefer_hidraw = TRUE; /* Fanatec ClubSport Pedals v1/v2 */
+        if (is_fanatec_wheelbase(pid)) prefer_hidraw = TRUE;
         break;
     case 0x231d:
         /* comes with 128 buttons in the default configuration */

From 643c0029e81db183167e0064b5627ee40c1ce82f Mon Sep 17 00:00:00 2001
From: Eric Sullivan <esullivan@nvidia.com>
Date: Wed, 11 Oct 2023 15:43:36 -0700
Subject: [PATCH 11/21] win32u: Add support for VK_NV_low_latency2

To support VK_NV_low_latency2 a frame ID should be provided for each
call to vkQueueSubmit. This commit adds a path for fshack to provide
a frame ID when it submits its upscaling work, when low latency mode
is enabled.
---
 dlls/win32u/vulkan.c         | 45 ++++++++++++++++++++++++++++++++++++
 include/wine/vulkan_driver.h |  2 ++
 2 files changed, 47 insertions(+)

diff --git a/dlls/win32u/vulkan.c b/dlls/win32u/vulkan.c
index 4cb3997f648..1bf8c5e404e 100644
--- a/dlls/win32u/vulkan.c
+++ b/dlls/win32u/vulkan.c
@@ -852,6 +852,24 @@ static VkResult init_fs_hack_images( struct vulkan_device *device, struct swapch
     return res;
 }
 
+static VkResult win32u_vkSetLatencySleepModeNV(VkDevice device, VkSwapchainKHR swapchain, const VkLatencySleepModeInfoNV *pSleepModeInfo)
+{
+    VkLatencySleepModeInfoNV sleep_mode_info_host;
+
+    struct vulkan_device *vk_device = vulkan_device_from_handle(device);
+    struct swapchain *vk_swapchain = swapchain_from_handle(swapchain);
+
+    vk_device->low_latency_enabled = pSleepModeInfo->lowLatencyMode;
+
+    sleep_mode_info_host.sType = VK_STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV;
+    sleep_mode_info_host.pNext = NULL;
+    sleep_mode_info_host.lowLatencyMode = pSleepModeInfo->lowLatencyMode;
+    sleep_mode_info_host.lowLatencyBoost = pSleepModeInfo->lowLatencyBoost;
+    sleep_mode_info_host.minimumIntervalUs = pSleepModeInfo->minimumIntervalUs;
+
+    return vk_device->p_vkSetLatencySleepModeNV(vk_device->host.device, vk_swapchain->obj.host.swapchain, &sleep_mode_info_host);
+}
+
 static VkResult win32u_vkCreateSwapchainKHR( VkDevice client_device, const VkSwapchainCreateInfoKHR *create_info,
                                              const VkAllocationCallbacks *allocator, VkSwapchainKHR *ret )
 {
@@ -1225,6 +1243,21 @@ static VkResult record_compute_cmd( struct vulkan_device *device, struct swapcha
     return VK_SUCCESS;
 }
 
+
+#define win32u_vk_find_struct(s, t) win32u_vk_find_struct_((void *)s, VK_STRUCTURE_TYPE_##t)
+static void *win32u_vk_find_struct_(void *s, VkStructureType t)
+{
+    VkBaseOutStructure *header;
+
+    for (header = s; header; header = header->pNext)
+    {
+        if (header->sType == t)
+            return header;
+    }
+
+    return NULL;
+}
+
 static VkResult win32u_vkQueuePresentKHR( VkQueue client_queue, const VkPresentInfoKHR *present_info )
 {
     static pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;
@@ -1335,6 +1368,8 @@ static VkResult win32u_vkQueuePresentKHR( VkQueue client_queue, const VkPresentI
     if (n_hacks > 0)
     {
         VkPipelineStageFlags waitStage, *waitStages, *waitStages_arr = NULL;
+        VkLatencySubmissionPresentIdNV latencySubmitInfo;
+        VkPresentIdKHR *present_id;
 
         if (present_info->waitSemaphoreCount > 1)
         {
@@ -1359,6 +1394,15 @@ static VkResult win32u_vkQueuePresentKHR( VkQueue client_queue, const VkPresentI
         submitInfo.signalSemaphoreCount = 1;
         submitInfo.pSignalSemaphores = &blit_sema;
 
+        if ((queue->device->low_latency_enabled) &&
+            (present_id = win32u_vk_find_struct(&present_info_host, PRESENT_ID_KHR)))
+        {
+            latencySubmitInfo.sType = VK_STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV;
+            latencySubmitInfo.pNext = NULL;
+            latencySubmitInfo.presentID = *present_id->pPresentIds;
+            submitInfo.pNext = &latencySubmitInfo;
+        }
+
         if ((res = device->p_vkQueueSubmit( queue->host.queue, 1, &submitInfo, VK_NULL_HANDLE )))
         {
             ERR( "vkQueueSubmit: %d\n", res );
@@ -1452,6 +1496,7 @@ static struct vulkan_funcs vulkan_funcs =
     .p_vkGetSwapchainImagesKHR = win32u_vkGetSwapchainImagesKHR,
     .p_vkQueuePresentKHR = win32u_vkQueuePresentKHR,
     .p_get_host_surface_extension = win32u_get_host_surface_extension,
+    .p_vkSetLatencySleepModeNV = win32u_vkSetLatencySleepModeNV,
 };
 
 static VkResult nulldrv_vulkan_surface_create( HWND hwnd, VkInstance instance, VkSurfaceKHR *surface, void **private )
diff --git a/include/wine/vulkan_driver.h b/include/wine/vulkan_driver.h
index 15d03383e12..329758551f6 100644
--- a/include/wine/vulkan_driver.h
+++ b/include/wine/vulkan_driver.h
@@ -133,6 +133,7 @@ struct vulkan_device
     unsigned int allocated_fence_ops_count;
 
     BOOL keyed_mutexes_enabled;
+    BOOL low_latency_enabled;
 };
 
 static inline struct vulkan_device *vulkan_device_from_handle( VkDevice handle )
@@ -210,6 +211,7 @@ struct vulkan_funcs
     PFN_vkGetPhysicalDeviceWin32PresentationSupportKHR p_vkGetPhysicalDeviceWin32PresentationSupportKHR;
     PFN_vkGetSwapchainImagesKHR p_vkGetSwapchainImagesKHR;
     PFN_vkQueuePresentKHR p_vkQueuePresentKHR;
+    PFN_vkSetLatencySleepModeNV p_vkSetLatencySleepModeNV;
 
     /* winevulkan specific functions */
     const char *(*p_get_host_surface_extension)(void);

From c26c3e08ea5404658eeb0f73b7990c9235afaf5a Mon Sep 17 00:00:00 2001
From: Cameron Moore <moore.cameron1111@gmail.com>
Date: Sat, 3 Feb 2024 21:21:50 -0500
Subject: [PATCH 12/21] win32u: [GAMEFIX] Fix xinput support for Dragon Age
 Inquisition

win32u: [GAMEFIX] 1/2 Dragon Age Inquisition: fix xinput support

https://bugs.winehq.org/show_bug.cgi?id=47070

I'm not completely sure on the specifics of why the bug happens,
but there are two main threads involved. Thread A owns the window
object for the game. Thread B makes all the calls to XInputGetState.
However, Thread B checks if the window has focus to receive keyboard
inputs every frame. Thread B calls AttachThreadInput to attach its
message queue to the Thread A's window a few times before the bug
starts occurring along with one separate time at the start where
Thread A attaches Thread B's message queue to the window as well.
The message queue is detached one last time and then Thread B no
longer has access to the window.

My workaround checks GetFocus for when it starts receiving Null
for a response (meaning it does not have access to a window anymore).
Prior to this, AttachThreadInput stores the IDs of the two threads
which call the function the very first time (hopefully this works
with the EA App as I've been debugging this with Origin which doesn't
seem to call either of the two WINAPI functions as long as you load
straight into the game from the Origin library menu). When GetFocus
realizes it does not have a window for the thread, it calls
AttachThreadInput with the two thread IDs. This allows Thread B to
access the window, which let's GetFocus return the proper window
handle, which then let's the program access XInputGetState meaning
the controller finally works.

Anyway, as far as the final cause of the bug: it might be because
of thread prioritization causing Thread B to AttachThreadInput to
be called by it last as the only time Thread A calls it, it does
not detach the message queue afterwards. This leads me to believe
that the bug might just be caused by incomplete wine
functionality / stubs. Although, this part is speculation.

win32u: [GAMEFIX] 2/2 Dragon Age Inquisition: fix xinput support

Wrap hack with a SteamGameId check and cache it.
---
 dlls/win32u/input.c | 58 ++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 57 insertions(+), 1 deletion(-)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 97e651a7ce5..24f2d40e31d 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -30,6 +30,8 @@
 #pragma makedep unix
 #endif
 
+#include <sys/prctl.h>
+#include <string.h>
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
 #include "win32u_private.h"
@@ -581,12 +583,32 @@ HWND get_capture(void)
     return NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndCapture : 0;
 }
 
+static int is_DragonAgeInquis = -1;
+
 /* see GetFocus */
 HWND get_focus(void)
 {
     GUITHREADINFO info;
+    HWND retValueWindow;
+    static HWND prev = 0;
+    const char *sgi;
+    
     info.cbSize = sizeof(info);
-    return NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndFocus : 0;
+    retValueWindow = NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndFocus : 0;
+
+    if (is_DragonAgeInquis)
+    {
+        if ((is_DragonAgeInquis == 1) ||
+            (is_DragonAgeInquis = ((sgi = getenv("SteamGameId")) && !strcmp(sgi, "1222690"))))
+        {
+            if (retValueWindow == 0 && prev != 0)
+                NtUserAttachThreadInput(0, 0, 1);
+            else
+                prev = retValueWindow;
+        }
+    }
+
+    return retValueWindow;
 }
 
 /**********************************************************************
@@ -595,6 +617,40 @@ HWND get_focus(void)
 BOOL WINAPI NtUserAttachThreadInput( DWORD from, DWORD to, BOOL attach )
 {
     BOOL ret;
+    static int visited = 0;
+    static DWORD fromThreadForHack = 0;
+    static DWORD toThreadForHack = 0;
+    static char processNameForHack[16];
+    static const char* DAIprocessName = "DragonAgeInquis";
+    static const char* DAIGameLoopName = "GameLoop";
+    const char *sgi;
+
+    if (is_DragonAgeInquis)
+    {
+        if ((is_DragonAgeInquis == 1) ||
+            (is_DragonAgeInquis = ((sgi = getenv("SteamGameId")) && !strcmp(sgi, "1222690"))))
+        {
+            prctl(PR_GET_NAME, processNameForHack);
+            TRACE("Process Name: %s\n", processNameForHack);
+            if (strncmp(DAIprocessName, processNameForHack, 15) == 0 || strncmp(DAIGameLoopName, processNameForHack, 8) == 0)
+            {
+                if (!visited)
+                {
+                    TRACE("First Visit Process Name: %s\n", processNameForHack);
+                    fromThreadForHack = from;
+                    toThreadForHack = to;
+                    visited = 1;
+                }
+
+                if (from == 0 && to == 0 && visited)
+                {
+                    TRACE("00 Process Name: %s\n", processNameForHack);
+                    from = fromThreadForHack;
+                    to = toThreadForHack;
+                }
+            }
+        }
+    }
 
     SERVER_START_REQ( attach_thread_input )
     {

From fe3f72898047cdedd77acb860cc8f006b77dce9f Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Sat, 16 Nov 2024 14:45:36 +0200
Subject: [PATCH 13/21] win32u: add env switch to disable wm decorations

WINE_NO_WM_DECORATION=1 disables decorations from the window manager
Works around issues with the mouse clicking through borderless window
edges.
---
 dlls/win32u/sysparams.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
index 69ee6c3baba..29b4dcb6c41 100644
--- a/dlls/win32u/sysparams.c
+++ b/dlls/win32u/sysparams.c
@@ -5700,6 +5700,13 @@ void sysparams_init(void)
     if (!get_config_key( hkey, appkey, "EmulateModeset", buffer, sizeof(buffer) ))
         emulate_modeset = !IS_OPTION_TRUE( buffer[0] );
 
+    {
+        const char *decorate = NULL;
+
+        decorate = getenv( "WINE_NO_WM_DECORATION" );
+        if (decorate && decorate[0] == '1') decorated_mode = FALSE;
+    }
+
     {
         const char *s;
 

From 4307aa610cf5aca3c86a6b014668e7c9885a8ec1 Mon Sep 17 00:00:00 2001
From: NelloKudo <marshnelloosu@gmail.com>
Date: Tue, 4 Mar 2025 15:43:59 +0000
Subject: [PATCH 14/21] winex11: add Muffin (Cinnamon) to Mutter detection

Without this addition, every Mutter-specific workaround will fail to apply to Cinnamon's
compositor Muffin, which is nothing but a Mutter fork.
---
 dlls/winex11.drv/window.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 56c2dab6620..6c8f1a55672 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -3863,6 +3863,7 @@ void net_supporting_wm_check_init( struct x11drv_thread_data *data )
         char const *sgi = getenv( "SteamGameId" );
 
         if (!strcmp( data->window_manager, "GNOME Shell" )) strcpy( data->window_manager, "Mutter" );
+        if (!strcmp( data->window_manager, "Mutter (Muffin)" )) strcpy( data->window_manager, "Mutter" );
         TRACE( "Detected window manager: %s\n", debugstr_a(data->window_manager) );
 
         /* Street Fighter V expects a certain sequence of window resizes

From 54d28641e120496e3ac6136ab6e6b1dd31513d34 Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Mon, 5 May 2025 22:56:51 +0300
Subject: [PATCH 15/21] fshack: Implement AMD FSR upscaler for fullscreen hack

Co-authored-by: Georg Lehmann <dadschoorse@gmail.com>
Co-authored-by: GloriousEggroll <gloriouseggroll@gmail.com>
Co-authored-by: Ph42oN <julle.ys.57@gmail.com>
---
 dlls/win32u/fsr_spv.h        | 744 +++++++++++++++++++++++++++++++++++
 dlls/win32u/sysparams.c      | 149 +++++++
 dlls/win32u/vulkan.c         | 564 +++++++++++++++++++++-----
 dlls/win32u/win32u_private.h |   1 +
 4 files changed, 1358 insertions(+), 100 deletions(-)
 create mode 100644 dlls/win32u/fsr_spv.h

diff --git a/dlls/win32u/fsr_spv.h b/dlls/win32u/fsr_spv.h
new file mode 100644
index 00000000000..cc4d3dea877
--- /dev/null
+++ b/dlls/win32u/fsr_spv.h
@@ -0,0 +1,744 @@
+#ifndef __FSR_SPV_H
+#define __FSR_SPV_H
+
+#include <stdint.h>
+
+/*
+#version 460
+#extension GL_GOOGLE_include_directive: require
+
+layout(local_size_x=8, local_size_y=8, local_size_z=1) in;
+
+layout(binding = 0) uniform sampler2D texSampler;
+layout(binding = 1) uniform writeonly image2D outImage;
+
+#define A_GPU 1
+#define A_GLSL 1
+//#include "ffx_a.h"
+#define FSR_EASU_F 1
+AF4 FsrEasuRF(AF2 p){return AF4(textureGather(texSampler, p, 0));}
+AF4 FsrEasuGF(AF2 p){return AF4(textureGather(texSampler, p, 1));}
+AF4 FsrEasuBF(AF2 p){return AF4(textureGather(texSampler, p, 2));}
+//#include "ffx_fsr1.h"
+
+layout(push_constant) uniform pushConstants {
+    uvec4 c1, c2, c3, c4;
+};
+
+
+void main()
+{
+    vec3 color;
+
+    if (any(greaterThanEqual(gl_GlobalInvocationID.xy, c4.zw)))
+        return;
+
+    FsrEasuF(color, uvec2(gl_GlobalInvocationID.xy), c1, c2, c3, c4);
+
+    imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.0));
+}
+*/
+const uint32_t fsr_easu_comp_spv[] = {
+    0x07230203,0x00010000,0x0008000a,0x0000129e,0x00000000,0x00020011,0x00000001,0x00020011,
+    0x00000038,0x0006000b,0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,
+    0x00000000,0x00000001,0x0006000f,0x00000005,0x00000004,0x6e69616d,0x00000000,0x000004ee,
+    0x00060010,0x00000004,0x00000011,0x00000008,0x00000008,0x00000001,0x00030003,0x00000002,
+    0x000001cc,0x000a0004,0x475f4c47,0x4c474f4f,0x70635f45,0x74735f70,0x5f656c79,0x656e696c,
+    0x7269645f,0x69746365,0x00006576,0x00080004,0x475f4c47,0x4c474f4f,0x6e695f45,0x64756c63,
+    0x69645f65,0x74636572,0x00657669,0x00040005,0x00000004,0x6e69616d,0x00000000,0x00050005,
+    0x000000bc,0x53786574,0x6c706d61,0x00007265,0x00080005,0x000004ee,0x475f6c67,0x61626f6c,
+    0x766e496c,0x7461636f,0x496e6f69,0x00000044,0x00060005,0x000004f1,0x68737570,0x736e6f43,
+    0x746e6174,0x00000073,0x00040006,0x000004f1,0x00000000,0x00003163,0x00040006,0x000004f1,
+    0x00000001,0x00003263,0x00040006,0x000004f1,0x00000002,0x00003363,0x00040006,0x000004f1,
+    0x00000003,0x00003463,0x00030005,0x000004f3,0x00000000,0x00050005,0x00000517,0x4974756f,
+    0x6567616d,0x00000000,0x00040047,0x000000bc,0x00000022,0x00000000,0x00040047,0x000000bc,
+    0x00000021,0x00000000,0x00040047,0x000004ee,0x0000000b,0x0000001c,0x00050048,0x000004f1,
+    0x00000000,0x00000023,0x00000000,0x00050048,0x000004f1,0x00000001,0x00000023,0x00000010,
+    0x00050048,0x000004f1,0x00000002,0x00000023,0x00000020,0x00050048,0x000004f1,0x00000003,
+    0x00000023,0x00000030,0x00030047,0x000004f1,0x00000002,0x00040047,0x00000517,0x00000022,
+    0x00000000,0x00040047,0x00000517,0x00000021,0x00000001,0x00030047,0x00000517,0x00000019,
+    0x00040047,0x00000523,0x0000000b,0x00000019,0x00020013,0x00000002,0x00030021,0x00000003,
+    0x00000002,0x00030016,0x00000006,0x00000020,0x00040017,0x0000000c,0x00000006,0x00000002,
+    0x00040017,0x00000011,0x00000006,0x00000003,0x00040017,0x00000016,0x00000006,0x00000004,
+    0x00040015,0x0000001b,0x00000020,0x00000000,0x00020014,0x0000004f,0x00040017,0x00000060,
+    0x0000001b,0x00000002,0x00040017,0x00000062,0x0000001b,0x00000004,0x0004002b,0x00000006,
+    0x00000093,0x3f800000,0x0004002b,0x00000006,0x0000009b,0x00000000,0x0004002b,0x0000001b,
+    0x000000a3,0x7ef07ebb,0x0004002b,0x0000001b,0x000000ac,0x5f347d74,0x0004002b,0x0000001b,
+    0x000000b1,0x00000001,0x00090019,0x000000b9,0x00000006,0x00000001,0x00000000,0x00000000,
+    0x00000000,0x00000001,0x00000000,0x0003001b,0x000000ba,0x000000b9,0x00040020,0x000000bb,
+    0x00000000,0x000000ba,0x0004003b,0x000000bb,0x000000bc,0x00000000,0x00040015,0x000000bf,
+    0x00000020,0x00000001,0x0004002b,0x000000bf,0x000000c0,0x00000000,0x0004002b,0x000000bf,
+    0x000000cb,0x00000001,0x0004002b,0x000000bf,0x000000d6,0x00000002,0x0004002b,0x0000001b,
+    0x000000e0,0x00000000,0x0004002b,0x00000006,0x0000010d,0x3ecccccd,0x0004002b,0x00000006,
+    0x00000112,0xbf800000,0x0004002b,0x00000006,0x00000123,0x3fc80000,0x0004002b,0x00000006,
+    0x00000128,0xbf100000,0x0004002b,0x00000006,0x00000230,0x3f000000,0x0004002b,0x00000006,
+    0x000002f5,0x38000000,0x0004002b,0x00000006,0x0000033e,0xbf000000,0x0004002b,0x00000006,
+    0x00000348,0xbe947ae1,0x0005002c,0x0000000c,0x0000039c,0x0000009b,0x00000112,0x0005002c,
+    0x0000000c,0x000003b7,0x00000093,0x00000112,0x0005002c,0x0000000c,0x000003d2,0x00000112,
+    0x00000093,0x0005002c,0x0000000c,0x000003ed,0x0000009b,0x00000093,0x0005002c,0x0000000c,
+    0x00000423,0x00000112,0x0000009b,0x0005002c,0x0000000c,0x0000043e,0x00000093,0x00000093,
+    0x0004002b,0x00000006,0x00000459,0x40000000,0x0005002c,0x0000000c,0x0000045a,0x00000459,
+    0x00000093,0x0005002c,0x0000000c,0x00000475,0x00000459,0x0000009b,0x0005002c,0x0000000c,
+    0x00000490,0x00000093,0x0000009b,0x0005002c,0x0000000c,0x000004ab,0x00000093,0x00000459,
+    0x0005002c,0x0000000c,0x000004c6,0x0000009b,0x00000459,0x00040017,0x000004ec,0x0000001b,
+    0x00000003,0x00040020,0x000004ed,0x00000001,0x000004ec,0x0004003b,0x000004ed,0x000004ee,
+    0x00000001,0x0006001e,0x000004f1,0x00000062,0x00000062,0x00000062,0x00000062,0x00040020,
+    0x000004f2,0x00000009,0x000004f1,0x0004003b,0x000004f2,0x000004f3,0x00000009,0x0004002b,
+    0x000000bf,0x000004f4,0x00000003,0x00040020,0x000004f5,0x00000009,0x00000062,0x00040017,
+    0x000004f9,0x0000004f,0x00000002,0x00090019,0x00000515,0x00000006,0x00000001,0x00000000,
+    0x00000000,0x00000000,0x00000002,0x00000000,0x00040020,0x00000516,0x00000000,0x00000515,
+    0x0004003b,0x00000516,0x00000517,0x00000000,0x00040017,0x0000051b,0x000000bf,0x00000002,
+    0x0004002b,0x0000001b,0x00000522,0x00000008,0x0006002c,0x000004ec,0x00000523,0x00000522,
+    0x00000522,0x000000b1,0x0007002c,0x00000016,0x0000127a,0x00000230,0x00000230,0x00000230,
+    0x00000230,0x00030001,0x0000000c,0x0000129d,0x00050036,0x00000002,0x00000004,0x00000000,
+    0x00000003,0x000200f8,0x00000005,0x000300f7,0x00000524,0x00000000,0x000300fb,0x000000e0,
+    0x00000525,0x000200f8,0x00000525,0x0004003d,0x000004ec,0x000004ef,0x000004ee,0x0007004f,
+    0x00000060,0x000004f0,0x000004ef,0x000004ef,0x00000000,0x00000001,0x00050041,0x000004f5,
+    0x000004f6,0x000004f3,0x000004f4,0x0004003d,0x00000062,0x000004f7,0x000004f6,0x0007004f,
+    0x00000060,0x000004f8,0x000004f7,0x000004f7,0x00000002,0x00000003,0x000500ae,0x000004f9,
+    0x000004fa,0x000004f0,0x000004f8,0x0004009a,0x0000004f,0x000004fb,0x000004fa,0x000300f7,
+    0x000004fd,0x00000000,0x000400fa,0x000004fb,0x000004fc,0x000004fd,0x000200f8,0x000004fc,
+    0x000200f9,0x00000524,0x000200f8,0x000004fd,0x00050051,0x0000001b,0x00000502,0x000004ef,
+    0x00000000,0x00050051,0x0000001b,0x00000503,0x000004ef,0x00000001,0x00050050,0x00000060,
+    0x00000504,0x00000502,0x00000503,0x00050041,0x000004f5,0x00000508,0x000004f3,0x000000c0,
+    0x0004003d,0x00000062,0x00000509,0x00000508,0x00050041,0x000004f5,0x0000050b,0x000004f3,
+    0x000000cb,0x0004003d,0x00000062,0x0000050c,0x0000050b,0x00050041,0x000004f5,0x0000050e,
+    0x000004f3,0x000000d6,0x0004003d,0x00000062,0x0000050f,0x0000050e,0x00040070,0x0000000c,
+    0x00000618,0x00000504,0x00050051,0x0000001b,0x0000061b,0x00000509,0x00000000,0x00050051,
+    0x0000001b,0x0000061c,0x00000509,0x00000001,0x00050050,0x00000060,0x0000061d,0x0000061b,
+    0x0000061c,0x0004007c,0x0000000c,0x0000061e,0x0000061d,0x00050085,0x0000000c,0x0000061f,
+    0x00000618,0x0000061e,0x00050051,0x0000001b,0x00000622,0x00000509,0x00000002,0x00050051,
+    0x0000001b,0x00000623,0x00000509,0x00000003,0x00050050,0x00000060,0x00000624,0x00000622,
+    0x00000623,0x0004007c,0x0000000c,0x00000625,0x00000624,0x00050081,0x0000000c,0x00000626,
+    0x0000061f,0x00000625,0x0006000c,0x0000000c,0x00000628,0x00000001,0x00000008,0x00000626,
+    0x00050083,0x0000000c,0x0000062b,0x00000626,0x00000628,0x00050051,0x0000001b,0x0000062f,
+    0x0000050c,0x00000000,0x00050051,0x0000001b,0x00000630,0x0000050c,0x00000001,0x00050050,
+    0x00000060,0x00000631,0x0000062f,0x00000630,0x0004007c,0x0000000c,0x00000632,0x00000631,
+    0x00050085,0x0000000c,0x00000633,0x00000628,0x00000632,0x00050051,0x0000001b,0x00000636,
+    0x0000050c,0x00000002,0x00050051,0x0000001b,0x00000637,0x0000050c,0x00000003,0x00050050,
+    0x00000060,0x00000638,0x00000636,0x00000637,0x0004007c,0x0000000c,0x00000639,0x00000638,
+    0x00050081,0x0000000c,0x0000063a,0x00000633,0x00000639,0x00050051,0x0000001b,0x0000063e,
+    0x0000050f,0x00000000,0x00050051,0x0000001b,0x0000063f,0x0000050f,0x00000001,0x00050050,
+    0x00000060,0x00000640,0x0000063e,0x0000063f,0x0004007c,0x0000000c,0x00000641,0x00000640,
+    0x00050081,0x0000000c,0x00000642,0x0000063a,0x00000641,0x00050051,0x0000001b,0x00000646,
+    0x0000050f,0x00000002,0x00050051,0x0000001b,0x00000647,0x0000050f,0x00000003,0x00050050,
+    0x00000060,0x00000648,0x00000646,0x00000647,0x0004007c,0x0000000c,0x00000649,0x00000648,
+    0x00050081,0x0000000c,0x0000064a,0x0000063a,0x00000649,0x00050051,0x0000001b,0x0000064e,
+    0x000004f7,0x00000000,0x00050051,0x0000001b,0x0000064f,0x000004f7,0x00000001,0x00050050,
+    0x00000060,0x00000650,0x0000064e,0x0000064f,0x0004007c,0x0000000c,0x00000651,0x00000650,
+    0x00050081,0x0000000c,0x00000652,0x0000063a,0x00000651,0x0004003d,0x000000ba,0x00000845,
+    0x000000bc,0x00060060,0x00000016,0x00000847,0x00000845,0x0000063a,0x000000c0,0x00060060,
+    0x00000016,0x00000851,0x00000845,0x0000063a,0x000000cb,0x00060060,0x00000016,0x0000085b,
+    0x00000845,0x0000063a,0x000000d6,0x00060060,0x00000016,0x00000865,0x00000845,0x00000642,
+    0x000000c0,0x00060060,0x00000016,0x0000086f,0x00000845,0x00000642,0x000000cb,0x00060060,
+    0x00000016,0x00000879,0x00000845,0x00000642,0x000000d6,0x00060060,0x00000016,0x00000883,
+    0x00000845,0x0000064a,0x000000c0,0x00060060,0x00000016,0x0000088d,0x00000845,0x0000064a,
+    0x000000cb,0x00060060,0x00000016,0x00000897,0x00000845,0x0000064a,0x000000d6,0x00060060,
+    0x00000016,0x000008a1,0x00000845,0x00000652,0x000000c0,0x00060060,0x00000016,0x000008ab,
+    0x00000845,0x00000652,0x000000cb,0x00060060,0x00000016,0x000008b5,0x00000845,0x00000652,
+    0x000000d6,0x00050085,0x00000016,0x0000066d,0x0000085b,0x0000127a,0x00050085,0x00000016,
+    0x00000670,0x00000847,0x0000127a,0x00050081,0x00000016,0x00000672,0x00000670,0x00000851,
+    0x00050081,0x00000016,0x00000673,0x0000066d,0x00000672,0x00050085,0x00000016,0x00000676,
+    0x00000879,0x0000127a,0x00050085,0x00000016,0x00000679,0x00000865,0x0000127a,0x00050081,
+    0x00000016,0x0000067b,0x00000679,0x0000086f,0x00050081,0x00000016,0x0000067c,0x00000676,
+    0x0000067b,0x00050085,0x00000016,0x0000067f,0x00000897,0x0000127a,0x00050085,0x00000016,
+    0x00000682,0x00000883,0x0000127a,0x00050081,0x00000016,0x00000684,0x00000682,0x0000088d,
+    0x00050081,0x00000016,0x00000685,0x0000067f,0x00000684,0x00050085,0x00000016,0x00000688,
+    0x000008b5,0x0000127a,0x00050085,0x00000016,0x0000068b,0x000008a1,0x0000127a,0x00050081,
+    0x00000016,0x0000068d,0x0000068b,0x000008ab,0x00050081,0x00000016,0x0000068e,0x00000688,
+    0x0000068d,0x00050051,0x00000006,0x00000690,0x00000673,0x00000000,0x00050051,0x00000006,
+    0x00000692,0x00000673,0x00000001,0x00050051,0x00000006,0x00000694,0x0000067c,0x00000000,
+    0x00050051,0x00000006,0x00000696,0x0000067c,0x00000001,0x00050051,0x00000006,0x00000698,
+    0x0000067c,0x00000002,0x00050051,0x00000006,0x0000069a,0x0000067c,0x00000003,0x00050051,
+    0x00000006,0x0000069c,0x00000685,0x00000000,0x00050051,0x00000006,0x0000069e,0x00000685,
+    0x00000001,0x00050051,0x00000006,0x000006a0,0x00000685,0x00000002,0x00050051,0x00000006,
+    0x000006a2,0x00000685,0x00000003,0x00050051,0x00000006,0x000006a4,0x0000068e,0x00000002,
+    0x00050051,0x00000006,0x000006a6,0x0000068e,0x00000003,0x00050051,0x00000006,0x00000913,
+    0x0000062b,0x00000000,0x00050083,0x00000006,0x00000914,0x00000093,0x00000913,0x00050051,
+    0x00000006,0x00000917,0x0000062b,0x00000001,0x00050083,0x00000006,0x00000918,0x00000093,
+    0x00000917,0x00050085,0x00000006,0x00000919,0x00000914,0x00000918,0x00050083,0x00000006,
+    0x00000939,0x000006a2,0x00000698,0x00050083,0x00000006,0x0000093c,0x00000698,0x0000069a,
+    0x0006000c,0x00000006,0x0000093e,0x00000001,0x00000004,0x00000939,0x0006000c,0x00000006,
+    0x00000940,0x00000001,0x00000004,0x0000093c,0x0007000c,0x00000006,0x00000941,0x00000001,
+    0x00000028,0x0000093e,0x00000940,0x0004007c,0x0000001b,0x00000993,0x00000941,0x00050082,
+    0x0000001b,0x00000994,0x000000a3,0x00000993,0x0004007c,0x00000006,0x00000995,0x00000994,
+    0x00050083,0x00000006,0x00000946,0x000006a2,0x0000069a,0x00050085,0x00000006,0x00000949,
+    0x00000946,0x00000919,0x0006000c,0x00000006,0x0000094f,0x00000001,0x00000004,0x00000946,
+    0x00050085,0x00000006,0x00000951,0x0000094f,0x00000995,0x0008000c,0x00000006,0x000009a0,
+    0x00000001,0x0000002b,0x00000951,0x0000009b,0x00000093,0x00050085,0x00000006,0x00000955,
+    0x000009a0,0x000009a0,0x00050085,0x00000006,0x00000958,0x00000955,0x00000919,0x00050083,
+    0x00000006,0x0000095d,0x00000696,0x00000698,0x00050083,0x00000006,0x00000960,0x00000698,
+    0x00000690,0x0006000c,0x00000006,0x00000962,0x00000001,0x00000004,0x0000095d,0x0006000c,
+    0x00000006,0x00000964,0x00000001,0x00000004,0x00000960,0x0007000c,0x00000006,0x00000965,
+    0x00000001,0x00000028,0x00000962,0x00000964,0x0004007c,0x0000001b,0x000009ac,0x00000965,
+    0x00050082,0x0000001b,0x000009ad,0x000000a3,0x000009ac,0x0004007c,0x00000006,0x000009ae,
+    0x000009ad,0x00050083,0x00000006,0x0000096a,0x00000696,0x00000690,0x00050085,0x00000006,
+    0x0000096d,0x0000096a,0x00000919,0x0006000c,0x00000006,0x00000973,0x00000001,0x00000004,
+    0x0000096a,0x00050085,0x00000006,0x00000975,0x00000973,0x000009ae,0x0008000c,0x00000006,
+    0x000009b9,0x00000001,0x0000002b,0x00000975,0x0000009b,0x00000093,0x00050085,0x00000006,
+    0x00000979,0x000009b9,0x000009b9,0x00050085,0x00000006,0x0000097c,0x00000979,0x00000919,
+    0x00050081,0x00000006,0x0000097e,0x00000958,0x0000097c,0x00050085,0x00000006,0x000009e8,
+    0x00000913,0x00000918,0x00050083,0x00000006,0x000009fe,0x000006a0,0x000006a2,0x0006000c,
+    0x00000006,0x00000a03,0x00000001,0x00000004,0x000009fe,0x0007000c,0x00000006,0x00000a06,
+    0x00000001,0x00000028,0x00000a03,0x0000093e,0x0004007c,0x0000001b,0x00000a58,0x00000a06,
+    0x00050082,0x0000001b,0x00000a59,0x000000a3,0x00000a58,0x0004007c,0x00000006,0x00000a5a,
+    0x00000a59,0x00050083,0x00000006,0x00000a0b,0x000006a0,0x00000698,0x00050085,0x00000006,
+    0x00000a0e,0x00000a0b,0x000009e8,0x00050081,0x00000006,0x00000a11,0x00000949,0x00000a0e,
+    0x0006000c,0x00000006,0x00000a14,0x00000001,0x00000004,0x00000a0b,0x00050085,0x00000006,
+    0x00000a16,0x00000a14,0x00000a5a,0x0008000c,0x00000006,0x00000a65,0x00000001,0x0000002b,
+    0x00000a16,0x0000009b,0x00000093,0x00050085,0x00000006,0x00000a1a,0x00000a65,0x00000a65,
+    0x00050085,0x00000006,0x00000a1d,0x00000a1a,0x000009e8,0x00050081,0x00000006,0x00000a1f,
+    0x0000097e,0x00000a1d,0x00050083,0x00000006,0x00000a22,0x0000069c,0x000006a2,0x00050083,
+    0x00000006,0x00000a25,0x000006a2,0x00000692,0x0006000c,0x00000006,0x00000a27,0x00000001,
+    0x00000004,0x00000a22,0x0006000c,0x00000006,0x00000a29,0x00000001,0x00000004,0x00000a25,
+    0x0007000c,0x00000006,0x00000a2a,0x00000001,0x00000028,0x00000a27,0x00000a29,0x0004007c,
+    0x0000001b,0x00000a71,0x00000a2a,0x00050082,0x0000001b,0x00000a72,0x000000a3,0x00000a71,
+    0x0004007c,0x00000006,0x00000a73,0x00000a72,0x00050083,0x00000006,0x00000a2f,0x0000069c,
+    0x00000692,0x00050085,0x00000006,0x00000a32,0x00000a2f,0x000009e8,0x00050081,0x00000006,
+    0x00000a35,0x0000096d,0x00000a32,0x0006000c,0x00000006,0x00000a38,0x00000001,0x00000004,
+    0x00000a2f,0x00050085,0x00000006,0x00000a3a,0x00000a38,0x00000a73,0x0008000c,0x00000006,
+    0x00000a7e,0x00000001,0x0000002b,0x00000a3a,0x0000009b,0x00000093,0x00050085,0x00000006,
+    0x00000a3e,0x00000a7e,0x00000a7e,0x00050085,0x00000006,0x00000a41,0x00000a3e,0x000009e8,
+    0x00050081,0x00000006,0x00000a43,0x00000a1f,0x00000a41,0x00050085,0x00000006,0x00000ab7,
+    0x00000914,0x00000917,0x00050083,0x00000006,0x00000ac3,0x0000069c,0x00000696,0x00050083,
+    0x00000006,0x00000ac6,0x00000696,0x00000694,0x0006000c,0x00000006,0x00000ac8,0x00000001,
+    0x00000004,0x00000ac3,0x0006000c,0x00000006,0x00000aca,0x00000001,0x00000004,0x00000ac6,
+    0x0007000c,0x00000006,0x00000acb,0x00000001,0x00000028,0x00000ac8,0x00000aca,0x0004007c,
+    0x0000001b,0x00000b1d,0x00000acb,0x00050082,0x0000001b,0x00000b1e,0x000000a3,0x00000b1d,
+    0x0004007c,0x00000006,0x00000b1f,0x00000b1e,0x00050083,0x00000006,0x00000ad0,0x0000069c,
+    0x00000694,0x00050085,0x00000006,0x00000ad3,0x00000ad0,0x00000ab7,0x00050081,0x00000006,
+    0x00000ad6,0x00000a11,0x00000ad3,0x0006000c,0x00000006,0x00000ad9,0x00000001,0x00000004,
+    0x00000ad0,0x00050085,0x00000006,0x00000adb,0x00000ad9,0x00000b1f,0x0008000c,0x00000006,
+    0x00000b2a,0x00000001,0x0000002b,0x00000adb,0x0000009b,0x00000093,0x00050085,0x00000006,
+    0x00000adf,0x00000b2a,0x00000b2a,0x00050085,0x00000006,0x00000ae2,0x00000adf,0x00000ab7,
+    0x00050081,0x00000006,0x00000ae4,0x00000a43,0x00000ae2,0x00050083,0x00000006,0x00000ae7,
+    0x000006a6,0x00000696,0x0006000c,0x00000006,0x00000aec,0x00000001,0x00000004,0x00000ae7,
+    0x0007000c,0x00000006,0x00000aef,0x00000001,0x00000028,0x00000aec,0x00000962,0x0004007c,
+    0x0000001b,0x00000b36,0x00000aef,0x00050082,0x0000001b,0x00000b37,0x000000a3,0x00000b36,
+    0x0004007c,0x00000006,0x00000b38,0x00000b37,0x00050083,0x00000006,0x00000af4,0x000006a6,
+    0x00000698,0x00050085,0x00000006,0x00000af7,0x00000af4,0x00000ab7,0x00050081,0x00000006,
+    0x00000afa,0x00000a35,0x00000af7,0x0006000c,0x00000006,0x00000afd,0x00000001,0x00000004,
+    0x00000af4,0x00050085,0x00000006,0x00000aff,0x00000afd,0x00000b38,0x0008000c,0x00000006,
+    0x00000b43,0x00000001,0x0000002b,0x00000aff,0x0000009b,0x00000093,0x00050085,0x00000006,
+    0x00000b03,0x00000b43,0x00000b43,0x00050085,0x00000006,0x00000b06,0x00000b03,0x00000ab7,
+    0x00050081,0x00000006,0x00000b08,0x00000ae4,0x00000b06,0x00050085,0x00000006,0x00000b84,
+    0x00000913,0x00000917,0x00050083,0x00000006,0x00000b88,0x0000069e,0x0000069c,0x0006000c,
+    0x00000006,0x00000b8d,0x00000001,0x00000004,0x00000b88,0x0007000c,0x00000006,0x00000b90,
+    0x00000001,0x00000028,0x00000b8d,0x00000ac8,0x0004007c,0x0000001b,0x00000be2,0x00000b90,
+    0x00050082,0x0000001b,0x00000be3,0x000000a3,0x00000be2,0x0004007c,0x00000006,0x00000be4,
+    0x00000be3,0x00050083,0x00000006,0x00000b95,0x0000069e,0x00000696,0x00050085,0x00000006,
+    0x00000b98,0x00000b95,0x00000b84,0x00050081,0x00000006,0x00000b9b,0x00000ad6,0x00000b98,
+    0x00060052,0x0000000c,0x0000116f,0x00000b9b,0x0000129d,0x00000000,0x0006000c,0x00000006,
+    0x00000b9e,0x00000001,0x00000004,0x00000b95,0x00050085,0x00000006,0x00000ba0,0x00000b9e,
+    0x00000be4,0x0008000c,0x00000006,0x00000bef,0x00000001,0x0000002b,0x00000ba0,0x0000009b,
+    0x00000093,0x00050085,0x00000006,0x00000ba4,0x00000bef,0x00000bef,0x00050085,0x00000006,
+    0x00000ba7,0x00000ba4,0x00000b84,0x00050081,0x00000006,0x00000ba9,0x00000b08,0x00000ba7,
+    0x00050083,0x00000006,0x00000bac,0x000006a4,0x0000069c,0x0006000c,0x00000006,0x00000bb1,
+    0x00000001,0x00000004,0x00000bac,0x0007000c,0x00000006,0x00000bb4,0x00000001,0x00000028,
+    0x00000bb1,0x00000a27,0x0004007c,0x0000001b,0x00000bfb,0x00000bb4,0x00050082,0x0000001b,
+    0x00000bfc,0x000000a3,0x00000bfb,0x0004007c,0x00000006,0x00000bfd,0x00000bfc,0x00050083,
+    0x00000006,0x00000bb9,0x000006a4,0x000006a2,0x00050085,0x00000006,0x00000bbc,0x00000bb9,
+    0x00000b84,0x00050081,0x00000006,0x00000bbf,0x00000afa,0x00000bbc,0x00060052,0x0000000c,
+    0x00001172,0x00000bbf,0x0000116f,0x00000001,0x0006000c,0x00000006,0x00000bc2,0x00000001,
+    0x00000004,0x00000bb9,0x00050085,0x00000006,0x00000bc4,0x00000bc2,0x00000bfd,0x0008000c,
+    0x00000006,0x00000c08,0x00000001,0x0000002b,0x00000bc4,0x0000009b,0x00000093,0x00050085,
+    0x00000006,0x00000bc8,0x00000c08,0x00000c08,0x00050085,0x00000006,0x00000bcb,0x00000bc8,
+    0x00000b84,0x00050081,0x00000006,0x00000bcd,0x00000ba9,0x00000bcb,0x00050085,0x0000000c,
+    0x000006d7,0x00001172,0x00001172,0x00050051,0x00000006,0x000006d9,0x000006d7,0x00000000,
+    0x00050051,0x00000006,0x000006db,0x000006d7,0x00000001,0x00050081,0x00000006,0x000006dc,
+    0x000006d9,0x000006db,0x000500b8,0x0000004f,0x000006df,0x000006dc,0x000002f5,0x0004007c,
+    0x0000001b,0x00000c18,0x000006dc,0x000500c2,0x0000001b,0x00000c1a,0x00000c18,0x000000b1,
+    0x00050082,0x0000001b,0x00000c1b,0x000000ac,0x00000c1a,0x0004007c,0x00000006,0x00000c1c,
+    0x00000c1b,0x000200f9,0x000006e7,0x000200f8,0x000006e7,0x000600a9,0x00000006,0x0000129c,
+    0x000006df,0x00000093,0x00000c1c,0x000300f7,0x000006ef,0x00000000,0x000400fa,0x000006df,
+    0x000006ea,0x000006ec,0x000200f8,0x000006ec,0x000200f9,0x000006ef,0x000200f8,0x000006ea,
+    0x000200f9,0x000006ef,0x000200f8,0x000006ef,0x000700f5,0x00000006,0x0000127e,0x00000b9b,
+    0x000006ec,0x00000093,0x000006ea,0x00060052,0x0000000c,0x00001177,0x0000127e,0x00001172,
+    0x00000000,0x00050050,0x0000000c,0x00000c2d,0x0000129c,0x0000129c,0x00050085,0x0000000c,
+    0x000006f5,0x00001177,0x00000c2d,0x00050085,0x00000006,0x000006f8,0x00000bcd,0x00000230,
+    0x00050085,0x00000006,0x000006fb,0x000006f8,0x000006f8,0x00050051,0x00000006,0x000006fd,
+    0x000006f5,0x00000000,0x00050085,0x00000006,0x00000700,0x000006fd,0x000006fd,0x00050051,
+    0x00000006,0x00000702,0x000006f5,0x00000001,0x00050085,0x00000006,0x00000705,0x00000702,
+    0x00000702,0x00050081,0x00000006,0x00000706,0x00000700,0x00000705,0x0006000c,0x00000006,
+    0x00000709,0x00000001,0x00000004,0x000006fd,0x0006000c,0x00000006,0x0000070c,0x00000001,
+    0x00000004,0x00000702,0x0007000c,0x00000006,0x0000070d,0x00000001,0x00000028,0x00000709,
+    0x0000070c,0x0004007c,0x0000001b,0x00000c36,0x0000070d,0x00050082,0x0000001b,0x00000c37,
+    0x000000a3,0x00000c36,0x0004007c,0x00000006,0x00000c38,0x00000c37,0x00050085,0x00000006,
+    0x0000070f,0x00000706,0x00000c38,0x00050083,0x00000006,0x00000713,0x0000070f,0x00000093,
+    0x00050085,0x00000006,0x00000715,0x00000713,0x000006fb,0x00050081,0x00000006,0x00000716,
+    0x00000093,0x00000715,0x00050085,0x00000006,0x0000071a,0x0000033e,0x000006fb,0x00050081,
+    0x00000006,0x0000071b,0x00000093,0x0000071a,0x00050050,0x0000000c,0x0000071c,0x00000716,
+    0x0000071b,0x00050085,0x00000006,0x00000720,0x00000348,0x000006fb,0x00050081,0x00000006,
+    0x00000721,0x00000230,0x00000720,0x0004007c,0x0000001b,0x00000c53,0x00000721,0x00050082,
+    0x0000001b,0x00000c54,0x000000a3,0x00000c53,0x0004007c,0x00000006,0x00000c55,0x00000c54,
+    0x00050051,0x00000006,0x00000725,0x00000865,0x00000002,0x00050051,0x00000006,0x00000727,
+    0x0000086f,0x00000002,0x00050051,0x00000006,0x00000729,0x00000879,0x00000002,0x00060050,
+    0x00000011,0x0000072a,0x00000725,0x00000727,0x00000729,0x00050051,0x00000006,0x0000072c,
+    0x00000883,0x00000003,0x00050051,0x00000006,0x0000072e,0x0000088d,0x00000003,0x00050051,
+    0x00000006,0x00000730,0x00000897,0x00000003,0x00060050,0x00000011,0x00000731,0x0000072c,
+    0x0000072e,0x00000730,0x00050051,0x00000006,0x00000733,0x00000865,0x00000001,0x00050051,
+    0x00000006,0x00000735,0x0000086f,0x00000001,0x00050051,0x00000006,0x00000737,0x00000879,
+    0x00000001,0x00060050,0x00000011,0x00000738,0x00000733,0x00000735,0x00000737,0x0007000c,
+    0x00000011,0x00000c5e,0x00000001,0x00000025,0x00000731,0x00000738,0x0007000c,0x00000011,
+    0x00000c5f,0x00000001,0x00000025,0x0000072a,0x00000c5e,0x00050051,0x00000006,0x0000073b,
+    0x00000883,0x00000000,0x00050051,0x00000006,0x0000073d,0x0000088d,0x00000000,0x00050051,
+    0x00000006,0x0000073f,0x00000897,0x00000000,0x00060050,0x00000011,0x00000740,0x0000073b,
+    0x0000073d,0x0000073f,0x0007000c,0x00000011,0x00000741,0x00000001,0x00000025,0x00000c5f,
+    0x00000740,0x0007000c,0x00000011,0x00000c65,0x00000001,0x00000028,0x00000731,0x00000738,
+    0x0007000c,0x00000011,0x00000c66,0x00000001,0x00000028,0x0000072a,0x00000c65,0x0007000c,
+    0x00000011,0x0000075f,0x00000001,0x00000028,0x00000c66,0x00000740,0x00050083,0x0000000c,
+    0x00000763,0x0000039c,0x0000062b,0x00050051,0x00000006,0x00000765,0x00000847,0x00000000,
+    0x00050051,0x00000006,0x00000767,0x00000851,0x00000000,0x00050051,0x00000006,0x00000769,
+    0x0000085b,0x00000000,0x00060050,0x00000011,0x0000076a,0x00000765,0x00000767,0x00000769,
+    0x00050051,0x00000006,0x00000c7c,0x00000763,0x00000000,0x00050085,0x00000006,0x00000c7f,
+    0x00000c7c,0x000006fd,0x00050051,0x00000006,0x00000c81,0x00000763,0x00000001,0x00050085,
+    0x00000006,0x00000c84,0x00000c81,0x00000702,0x00050081,0x00000006,0x00000c85,0x00000c7f,
+    0x00000c84,0x00060052,0x0000000c,0x0000119e,0x00000c85,0x0000129d,0x00000000,0x0004007f,
+    0x00000006,0x00000c8b,0x00000702,0x00050085,0x00000006,0x00000c8c,0x00000c7c,0x00000c8b,
+    0x00050085,0x00000006,0x00000c91,0x00000c81,0x000006fd,0x00050081,0x00000006,0x00000c92,
+    0x00000c8c,0x00000c91,0x00060052,0x0000000c,0x000011a4,0x00000c92,0x0000119e,0x00000001,
+    0x00050085,0x0000000c,0x00000c96,0x000011a4,0x0000071c,0x00050051,0x00000006,0x00000c98,
+    0x00000c96,0x00000000,0x00050085,0x00000006,0x00000c9b,0x00000c98,0x00000c98,0x00050051,
+    0x00000006,0x00000c9d,0x00000c96,0x00000001,0x00050085,0x00000006,0x00000ca0,0x00000c9d,
+    0x00000c9d,0x00050081,0x00000006,0x00000ca1,0x00000c9b,0x00000ca0,0x0007000c,0x00000006,
+    0x00000ca4,0x00000001,0x00000025,0x00000ca1,0x00000c55,0x00050085,0x00000006,0x00000ca7,
+    0x0000010d,0x00000ca4,0x00050081,0x00000006,0x00000ca9,0x00000ca7,0x00000112,0x00050085,
+    0x00000006,0x00000cac,0x00000721,0x00000ca4,0x00050081,0x00000006,0x00000cae,0x00000cac,
+    0x00000112,0x00050085,0x00000006,0x00000cb1,0x00000ca9,0x00000ca9,0x00050085,0x00000006,
+    0x00000cb4,0x00000cae,0x00000cae,0x00050085,0x00000006,0x00000cb7,0x00000123,0x00000cb1,
+    0x00050081,0x00000006,0x00000cb9,0x00000cb7,0x00000128,0x00050085,0x00000006,0x00000cbc,
+    0x00000cb9,0x00000cb4,0x0005008e,0x00000011,0x00000cbf,0x0000076a,0x00000cbc,0x00050083,
+    0x0000000c,0x00000775,0x000003b7,0x0000062b,0x00050051,0x00000006,0x00000777,0x00000847,
+    0x00000001,0x00050051,0x00000006,0x00000779,0x00000851,0x00000001,0x00050051,0x00000006,
+    0x0000077b,0x0000085b,0x00000001,0x00060050,0x00000011,0x0000077c,0x00000777,0x00000779,
+    0x0000077b,0x00050051,0x00000006,0x00000ce0,0x00000775,0x00000000,0x00050085,0x00000006,
+    0x00000ce3,0x00000ce0,0x000006fd,0x00050051,0x00000006,0x00000ce5,0x00000775,0x00000001,
+    0x00050085,0x00000006,0x00000ce8,0x00000ce5,0x00000702,0x00050081,0x00000006,0x00000ce9,
+    0x00000ce3,0x00000ce8,0x00060052,0x0000000c,0x000011b1,0x00000ce9,0x0000129d,0x00000000,
+    0x00050085,0x00000006,0x00000cf0,0x00000ce0,0x00000c8b,0x00050085,0x00000006,0x00000cf5,
+    0x00000ce5,0x000006fd,0x00050081,0x00000006,0x00000cf6,0x00000cf0,0x00000cf5,0x00060052,
+    0x0000000c,0x000011b7,0x00000cf6,0x000011b1,0x00000001,0x00050085,0x0000000c,0x00000cfa,
+    0x000011b7,0x0000071c,0x00050051,0x00000006,0x00000cfc,0x00000cfa,0x00000000,0x00050085,
+    0x00000006,0x00000cff,0x00000cfc,0x00000cfc,0x00050051,0x00000006,0x00000d01,0x00000cfa,
+    0x00000001,0x00050085,0x00000006,0x00000d04,0x00000d01,0x00000d01,0x00050081,0x00000006,
+    0x00000d05,0x00000cff,0x00000d04,0x0007000c,0x00000006,0x00000d08,0x00000001,0x00000025,
+    0x00000d05,0x00000c55,0x00050085,0x00000006,0x00000d0b,0x0000010d,0x00000d08,0x00050081,
+    0x00000006,0x00000d0d,0x00000d0b,0x00000112,0x00050085,0x00000006,0x00000d10,0x00000721,
+    0x00000d08,0x00050081,0x00000006,0x00000d12,0x00000d10,0x00000112,0x00050085,0x00000006,
+    0x00000d15,0x00000d0d,0x00000d0d,0x00050085,0x00000006,0x00000d18,0x00000d12,0x00000d12,
+    0x00050085,0x00000006,0x00000d1b,0x00000123,0x00000d15,0x00050081,0x00000006,0x00000d1d,
+    0x00000d1b,0x00000128,0x00050085,0x00000006,0x00000d20,0x00000d1d,0x00000d18,0x0005008e,
+    0x00000011,0x00000d23,0x0000077c,0x00000d20,0x00050081,0x00000011,0x00000d25,0x00000cbf,
+    0x00000d23,0x00050081,0x00000006,0x00000d28,0x00000cbc,0x00000d20,0x00050083,0x0000000c,
+    0x00000787,0x000003d2,0x0000062b,0x00050051,0x00000006,0x00000789,0x00000865,0x00000000,
+    0x00050051,0x00000006,0x0000078b,0x0000086f,0x00000000,0x00050051,0x00000006,0x0000078d,
+    0x00000879,0x00000000,0x00060050,0x00000011,0x0000078e,0x00000789,0x0000078b,0x0000078d,
+    0x00050051,0x00000006,0x00000d44,0x00000787,0x00000000,0x00050085,0x00000006,0x00000d47,
+    0x00000d44,0x000006fd,0x00050051,0x00000006,0x00000d49,0x00000787,0x00000001,0x00050085,
+    0x00000006,0x00000d4c,0x00000d49,0x00000702,0x00050081,0x00000006,0x00000d4d,0x00000d47,
+    0x00000d4c,0x00060052,0x0000000c,0x000011c4,0x00000d4d,0x0000129d,0x00000000,0x00050085,
+    0x00000006,0x00000d54,0x00000d44,0x00000c8b,0x00050085,0x00000006,0x00000d59,0x00000d49,
+    0x000006fd,0x00050081,0x00000006,0x00000d5a,0x00000d54,0x00000d59,0x00060052,0x0000000c,
+    0x000011ca,0x00000d5a,0x000011c4,0x00000001,0x00050085,0x0000000c,0x00000d5e,0x000011ca,
+    0x0000071c,0x00050051,0x00000006,0x00000d60,0x00000d5e,0x00000000,0x00050085,0x00000006,
+    0x00000d63,0x00000d60,0x00000d60,0x00050051,0x00000006,0x00000d65,0x00000d5e,0x00000001,
+    0x00050085,0x00000006,0x00000d68,0x00000d65,0x00000d65,0x00050081,0x00000006,0x00000d69,
+    0x00000d63,0x00000d68,0x0007000c,0x00000006,0x00000d6c,0x00000001,0x00000025,0x00000d69,
+    0x00000c55,0x00050085,0x00000006,0x00000d6f,0x0000010d,0x00000d6c,0x00050081,0x00000006,
+    0x00000d71,0x00000d6f,0x00000112,0x00050085,0x00000006,0x00000d74,0x00000721,0x00000d6c,
+    0x00050081,0x00000006,0x00000d76,0x00000d74,0x00000112,0x00050085,0x00000006,0x00000d79,
+    0x00000d71,0x00000d71,0x00050085,0x00000006,0x00000d7c,0x00000d76,0x00000d76,0x00050085,
+    0x00000006,0x00000d7f,0x00000123,0x00000d79,0x00050081,0x00000006,0x00000d81,0x00000d7f,
+    0x00000128,0x00050085,0x00000006,0x00000d84,0x00000d81,0x00000d7c,0x0005008e,0x00000011,
+    0x00000d87,0x0000078e,0x00000d84,0x00050081,0x00000011,0x00000d89,0x00000d25,0x00000d87,
+    0x00050081,0x00000006,0x00000d8c,0x00000d28,0x00000d84,0x00050083,0x0000000c,0x00000799,
+    0x000003ed,0x0000062b,0x00050051,0x00000006,0x00000da8,0x00000799,0x00000000,0x00050085,
+    0x00000006,0x00000dab,0x00000da8,0x000006fd,0x00050051,0x00000006,0x00000dad,0x00000799,
+    0x00000001,0x00050085,0x00000006,0x00000db0,0x00000dad,0x00000702,0x00050081,0x00000006,
+    0x00000db1,0x00000dab,0x00000db0,0x00060052,0x0000000c,0x000011d7,0x00000db1,0x0000129d,
+    0x00000000,0x00050085,0x00000006,0x00000db8,0x00000da8,0x00000c8b,0x00050085,0x00000006,
+    0x00000dbd,0x00000dad,0x000006fd,0x00050081,0x00000006,0x00000dbe,0x00000db8,0x00000dbd,
+    0x00060052,0x0000000c,0x000011dd,0x00000dbe,0x000011d7,0x00000001,0x00050085,0x0000000c,
+    0x00000dc2,0x000011dd,0x0000071c,0x00050051,0x00000006,0x00000dc4,0x00000dc2,0x00000000,
+    0x00050085,0x00000006,0x00000dc7,0x00000dc4,0x00000dc4,0x00050051,0x00000006,0x00000dc9,
+    0x00000dc2,0x00000001,0x00050085,0x00000006,0x00000dcc,0x00000dc9,0x00000dc9,0x00050081,
+    0x00000006,0x00000dcd,0x00000dc7,0x00000dcc,0x0007000c,0x00000006,0x00000dd0,0x00000001,
+    0x00000025,0x00000dcd,0x00000c55,0x00050085,0x00000006,0x00000dd3,0x0000010d,0x00000dd0,
+    0x00050081,0x00000006,0x00000dd5,0x00000dd3,0x00000112,0x00050085,0x00000006,0x00000dd8,
+    0x00000721,0x00000dd0,0x00050081,0x00000006,0x00000dda,0x00000dd8,0x00000112,0x00050085,
+    0x00000006,0x00000ddd,0x00000dd5,0x00000dd5,0x00050085,0x00000006,0x00000de0,0x00000dda,
+    0x00000dda,0x00050085,0x00000006,0x00000de3,0x00000123,0x00000ddd,0x00050081,0x00000006,
+    0x00000de5,0x00000de3,0x00000128,0x00050085,0x00000006,0x00000de8,0x00000de5,0x00000de0,
+    0x0005008e,0x00000011,0x00000deb,0x00000738,0x00000de8,0x00050081,0x00000011,0x00000ded,
+    0x00000d89,0x00000deb,0x00050081,0x00000006,0x00000df0,0x00000d8c,0x00000de8,0x0004007f,
+    0x0000000c,0x000007ab,0x0000062b,0x00050051,0x00000006,0x00000e0c,0x000007ab,0x00000000,
+    0x00050085,0x00000006,0x00000e0f,0x00000e0c,0x000006fd,0x00050051,0x00000006,0x00000e11,
+    0x000007ab,0x00000001,0x00050085,0x00000006,0x00000e14,0x00000e11,0x00000702,0x00050081,
+    0x00000006,0x00000e15,0x00000e0f,0x00000e14,0x00060052,0x0000000c,0x000011ea,0x00000e15,
+    0x0000129d,0x00000000,0x00050085,0x00000006,0x00000e1c,0x00000e0c,0x00000c8b,0x00050085,
+    0x00000006,0x00000e21,0x00000e11,0x000006fd,0x00050081,0x00000006,0x00000e22,0x00000e1c,
+    0x00000e21,0x00060052,0x0000000c,0x000011f0,0x00000e22,0x000011ea,0x00000001,0x00050085,
+    0x0000000c,0x00000e26,0x000011f0,0x0000071c,0x00050051,0x00000006,0x00000e28,0x00000e26,
+    0x00000000,0x00050085,0x00000006,0x00000e2b,0x00000e28,0x00000e28,0x00050051,0x00000006,
+    0x00000e2d,0x00000e26,0x00000001,0x00050085,0x00000006,0x00000e30,0x00000e2d,0x00000e2d,
+    0x00050081,0x00000006,0x00000e31,0x00000e2b,0x00000e30,0x0007000c,0x00000006,0x00000e34,
+    0x00000001,0x00000025,0x00000e31,0x00000c55,0x00050085,0x00000006,0x00000e37,0x0000010d,
+    0x00000e34,0x00050081,0x00000006,0x00000e39,0x00000e37,0x00000112,0x00050085,0x00000006,
+    0x00000e3c,0x00000721,0x00000e34,0x00050081,0x00000006,0x00000e3e,0x00000e3c,0x00000112,
+    0x00050085,0x00000006,0x00000e41,0x00000e39,0x00000e39,0x00050085,0x00000006,0x00000e44,
+    0x00000e3e,0x00000e3e,0x00050085,0x00000006,0x00000e47,0x00000123,0x00000e41,0x00050081,
+    0x00000006,0x00000e49,0x00000e47,0x00000128,0x00050085,0x00000006,0x00000e4c,0x00000e49,
+    0x00000e44,0x0005008e,0x00000011,0x00000e4f,0x0000072a,0x00000e4c,0x00050081,0x00000011,
+    0x00000e51,0x00000ded,0x00000e4f,0x00050081,0x00000006,0x00000e54,0x00000df0,0x00000e4c,
+    0x00050083,0x0000000c,0x000007bd,0x00000423,0x0000062b,0x00050051,0x00000006,0x000007bf,
+    0x00000865,0x00000003,0x00050051,0x00000006,0x000007c1,0x0000086f,0x00000003,0x00050051,
+    0x00000006,0x000007c3,0x00000879,0x00000003,0x00060050,0x00000011,0x000007c4,0x000007bf,
+    0x000007c1,0x000007c3,0x00050051,0x00000006,0x00000e70,0x000007bd,0x00000000,0x00050085,
+    0x00000006,0x00000e73,0x00000e70,0x000006fd,0x00050051,0x00000006,0x00000e75,0x000007bd,
+    0x00000001,0x00050085,0x00000006,0x00000e78,0x00000e75,0x00000702,0x00050081,0x00000006,
+    0x00000e79,0x00000e73,0x00000e78,0x00060052,0x0000000c,0x000011fd,0x00000e79,0x0000129d,
+    0x00000000,0x00050085,0x00000006,0x00000e80,0x00000e70,0x00000c8b,0x00050085,0x00000006,
+    0x00000e85,0x00000e75,0x000006fd,0x00050081,0x00000006,0x00000e86,0x00000e80,0x00000e85,
+    0x00060052,0x0000000c,0x00001203,0x00000e86,0x000011fd,0x00000001,0x00050085,0x0000000c,
+    0x00000e8a,0x00001203,0x0000071c,0x00050051,0x00000006,0x00000e8c,0x00000e8a,0x00000000,
+    0x00050085,0x00000006,0x00000e8f,0x00000e8c,0x00000e8c,0x00050051,0x00000006,0x00000e91,
+    0x00000e8a,0x00000001,0x00050085,0x00000006,0x00000e94,0x00000e91,0x00000e91,0x00050081,
+    0x00000006,0x00000e95,0x00000e8f,0x00000e94,0x0007000c,0x00000006,0x00000e98,0x00000001,
+    0x00000025,0x00000e95,0x00000c55,0x00050085,0x00000006,0x00000e9b,0x0000010d,0x00000e98,
+    0x00050081,0x00000006,0x00000e9d,0x00000e9b,0x00000112,0x00050085,0x00000006,0x00000ea0,
+    0x00000721,0x00000e98,0x00050081,0x00000006,0x00000ea2,0x00000ea0,0x00000112,0x00050085,
+    0x00000006,0x00000ea5,0x00000e9d,0x00000e9d,0x00050085,0x00000006,0x00000ea8,0x00000ea2,
+    0x00000ea2,0x00050085,0x00000006,0x00000eab,0x00000123,0x00000ea5,0x00050081,0x00000006,
+    0x00000ead,0x00000eab,0x00000128,0x00050085,0x00000006,0x00000eb0,0x00000ead,0x00000ea8,
+    0x0005008e,0x00000011,0x00000eb3,0x000007c4,0x00000eb0,0x00050081,0x00000011,0x00000eb5,
+    0x00000e51,0x00000eb3,0x00050081,0x00000006,0x00000eb8,0x00000e54,0x00000eb0,0x00050083,
+    0x0000000c,0x000007cf,0x0000043e,0x0000062b,0x00050051,0x00000006,0x00000ed4,0x000007cf,
+    0x00000000,0x00050085,0x00000006,0x00000ed7,0x00000ed4,0x000006fd,0x00050051,0x00000006,
+    0x00000ed9,0x000007cf,0x00000001,0x00050085,0x00000006,0x00000edc,0x00000ed9,0x00000702,
+    0x00050081,0x00000006,0x00000edd,0x00000ed7,0x00000edc,0x00060052,0x0000000c,0x00001210,
+    0x00000edd,0x0000129d,0x00000000,0x00050085,0x00000006,0x00000ee4,0x00000ed4,0x00000c8b,
+    0x00050085,0x00000006,0x00000ee9,0x00000ed9,0x000006fd,0x00050081,0x00000006,0x00000eea,
+    0x00000ee4,0x00000ee9,0x00060052,0x0000000c,0x00001216,0x00000eea,0x00001210,0x00000001,
+    0x00050085,0x0000000c,0x00000eee,0x00001216,0x0000071c,0x00050051,0x00000006,0x00000ef0,
+    0x00000eee,0x00000000,0x00050085,0x00000006,0x00000ef3,0x00000ef0,0x00000ef0,0x00050051,
+    0x00000006,0x00000ef5,0x00000eee,0x00000001,0x00050085,0x00000006,0x00000ef8,0x00000ef5,
+    0x00000ef5,0x00050081,0x00000006,0x00000ef9,0x00000ef3,0x00000ef8,0x0007000c,0x00000006,
+    0x00000efc,0x00000001,0x00000025,0x00000ef9,0x00000c55,0x00050085,0x00000006,0x00000eff,
+    0x0000010d,0x00000efc,0x00050081,0x00000006,0x00000f01,0x00000eff,0x00000112,0x00050085,
+    0x00000006,0x00000f04,0x00000721,0x00000efc,0x00050081,0x00000006,0x00000f06,0x00000f04,
+    0x00000112,0x00050085,0x00000006,0x00000f09,0x00000f01,0x00000f01,0x00050085,0x00000006,
+    0x00000f0c,0x00000f06,0x00000f06,0x00050085,0x00000006,0x00000f0f,0x00000123,0x00000f09,
+    0x00050081,0x00000006,0x00000f11,0x00000f0f,0x00000128,0x00050085,0x00000006,0x00000f14,
+    0x00000f11,0x00000f0c,0x0005008e,0x00000011,0x00000f17,0x00000740,0x00000f14,0x00050081,
+    0x00000011,0x00000f19,0x00000eb5,0x00000f17,0x00050081,0x00000006,0x00000f1c,0x00000eb8,
+    0x00000f14,0x00050083,0x0000000c,0x000007e1,0x0000045a,0x0000062b,0x00050051,0x00000006,
+    0x000007e3,0x00000883,0x00000001,0x00050051,0x00000006,0x000007e5,0x0000088d,0x00000001,
+    0x00050051,0x00000006,0x000007e7,0x00000897,0x00000001,0x00060050,0x00000011,0x000007e8,
+    0x000007e3,0x000007e5,0x000007e7,0x00050051,0x00000006,0x00000f38,0x000007e1,0x00000000,
+    0x00050085,0x00000006,0x00000f3b,0x00000f38,0x000006fd,0x00050051,0x00000006,0x00000f3d,
+    0x000007e1,0x00000001,0x00050085,0x00000006,0x00000f40,0x00000f3d,0x00000702,0x00050081,
+    0x00000006,0x00000f41,0x00000f3b,0x00000f40,0x00060052,0x0000000c,0x00001223,0x00000f41,
+    0x0000129d,0x00000000,0x00050085,0x00000006,0x00000f48,0x00000f38,0x00000c8b,0x00050085,
+    0x00000006,0x00000f4d,0x00000f3d,0x000006fd,0x00050081,0x00000006,0x00000f4e,0x00000f48,
+    0x00000f4d,0x00060052,0x0000000c,0x00001229,0x00000f4e,0x00001223,0x00000001,0x00050085,
+    0x0000000c,0x00000f52,0x00001229,0x0000071c,0x00050051,0x00000006,0x00000f54,0x00000f52,
+    0x00000000,0x00050085,0x00000006,0x00000f57,0x00000f54,0x00000f54,0x00050051,0x00000006,
+    0x00000f59,0x00000f52,0x00000001,0x00050085,0x00000006,0x00000f5c,0x00000f59,0x00000f59,
+    0x00050081,0x00000006,0x00000f5d,0x00000f57,0x00000f5c,0x0007000c,0x00000006,0x00000f60,
+    0x00000001,0x00000025,0x00000f5d,0x00000c55,0x00050085,0x00000006,0x00000f63,0x0000010d,
+    0x00000f60,0x00050081,0x00000006,0x00000f65,0x00000f63,0x00000112,0x00050085,0x00000006,
+    0x00000f68,0x00000721,0x00000f60,0x00050081,0x00000006,0x00000f6a,0x00000f68,0x00000112,
+    0x00050085,0x00000006,0x00000f6d,0x00000f65,0x00000f65,0x00050085,0x00000006,0x00000f70,
+    0x00000f6a,0x00000f6a,0x00050085,0x00000006,0x00000f73,0x00000123,0x00000f6d,0x00050081,
+    0x00000006,0x00000f75,0x00000f73,0x00000128,0x00050085,0x00000006,0x00000f78,0x00000f75,
+    0x00000f70,0x0005008e,0x00000011,0x00000f7b,0x000007e8,0x00000f78,0x00050081,0x00000011,
+    0x00000f7d,0x00000f19,0x00000f7b,0x00050081,0x00000006,0x00000f80,0x00000f1c,0x00000f78,
+    0x00050083,0x0000000c,0x000007f3,0x00000475,0x0000062b,0x00050051,0x00000006,0x000007f5,
+    0x00000883,0x00000002,0x00050051,0x00000006,0x000007f7,0x0000088d,0x00000002,0x00050051,
+    0x00000006,0x000007f9,0x00000897,0x00000002,0x00060050,0x00000011,0x000007fa,0x000007f5,
+    0x000007f7,0x000007f9,0x00050051,0x00000006,0x00000f9c,0x000007f3,0x00000000,0x00050085,
+    0x00000006,0x00000f9f,0x00000f9c,0x000006fd,0x00050051,0x00000006,0x00000fa1,0x000007f3,
+    0x00000001,0x00050085,0x00000006,0x00000fa4,0x00000fa1,0x00000702,0x00050081,0x00000006,
+    0x00000fa5,0x00000f9f,0x00000fa4,0x00060052,0x0000000c,0x00001236,0x00000fa5,0x0000129d,
+    0x00000000,0x00050085,0x00000006,0x00000fac,0x00000f9c,0x00000c8b,0x00050085,0x00000006,
+    0x00000fb1,0x00000fa1,0x000006fd,0x00050081,0x00000006,0x00000fb2,0x00000fac,0x00000fb1,
+    0x00060052,0x0000000c,0x0000123c,0x00000fb2,0x00001236,0x00000001,0x00050085,0x0000000c,
+    0x00000fb6,0x0000123c,0x0000071c,0x00050051,0x00000006,0x00000fb8,0x00000fb6,0x00000000,
+    0x00050085,0x00000006,0x00000fbb,0x00000fb8,0x00000fb8,0x00050051,0x00000006,0x00000fbd,
+    0x00000fb6,0x00000001,0x00050085,0x00000006,0x00000fc0,0x00000fbd,0x00000fbd,0x00050081,
+    0x00000006,0x00000fc1,0x00000fbb,0x00000fc0,0x0007000c,0x00000006,0x00000fc4,0x00000001,
+    0x00000025,0x00000fc1,0x00000c55,0x00050085,0x00000006,0x00000fc7,0x0000010d,0x00000fc4,
+    0x00050081,0x00000006,0x00000fc9,0x00000fc7,0x00000112,0x00050085,0x00000006,0x00000fcc,
+    0x00000721,0x00000fc4,0x00050081,0x00000006,0x00000fce,0x00000fcc,0x00000112,0x00050085,
+    0x00000006,0x00000fd1,0x00000fc9,0x00000fc9,0x00050085,0x00000006,0x00000fd4,0x00000fce,
+    0x00000fce,0x00050085,0x00000006,0x00000fd7,0x00000123,0x00000fd1,0x00050081,0x00000006,
+    0x00000fd9,0x00000fd7,0x00000128,0x00050085,0x00000006,0x00000fdc,0x00000fd9,0x00000fd4,
+    0x0005008e,0x00000011,0x00000fdf,0x000007fa,0x00000fdc,0x00050081,0x00000011,0x00000fe1,
+    0x00000f7d,0x00000fdf,0x00050081,0x00000006,0x00000fe4,0x00000f80,0x00000fdc,0x00050083,
+    0x0000000c,0x00000805,0x00000490,0x0000062b,0x00050051,0x00000006,0x00001000,0x00000805,
+    0x00000000,0x00050085,0x00000006,0x00001003,0x00001000,0x000006fd,0x00050051,0x00000006,
+    0x00001005,0x00000805,0x00000001,0x00050085,0x00000006,0x00001008,0x00001005,0x00000702,
+    0x00050081,0x00000006,0x00001009,0x00001003,0x00001008,0x00060052,0x0000000c,0x00001249,
+    0x00001009,0x0000129d,0x00000000,0x00050085,0x00000006,0x00001010,0x00001000,0x00000c8b,
+    0x00050085,0x00000006,0x00001015,0x00001005,0x000006fd,0x00050081,0x00000006,0x00001016,
+    0x00001010,0x00001015,0x00060052,0x0000000c,0x0000124f,0x00001016,0x00001249,0x00000001,
+    0x00050085,0x0000000c,0x0000101a,0x0000124f,0x0000071c,0x00050051,0x00000006,0x0000101c,
+    0x0000101a,0x00000000,0x00050085,0x00000006,0x0000101f,0x0000101c,0x0000101c,0x00050051,
+    0x00000006,0x00001021,0x0000101a,0x00000001,0x00050085,0x00000006,0x00001024,0x00001021,
+    0x00001021,0x00050081,0x00000006,0x00001025,0x0000101f,0x00001024,0x0007000c,0x00000006,
+    0x00001028,0x00000001,0x00000025,0x00001025,0x00000c55,0x00050085,0x00000006,0x0000102b,
+    0x0000010d,0x00001028,0x00050081,0x00000006,0x0000102d,0x0000102b,0x00000112,0x00050085,
+    0x00000006,0x00001030,0x00000721,0x00001028,0x00050081,0x00000006,0x00001032,0x00001030,
+    0x00000112,0x00050085,0x00000006,0x00001035,0x0000102d,0x0000102d,0x00050085,0x00000006,
+    0x00001038,0x00001032,0x00001032,0x00050085,0x00000006,0x0000103b,0x00000123,0x00001035,
+    0x00050081,0x00000006,0x0000103d,0x0000103b,0x00000128,0x00050085,0x00000006,0x00001040,
+    0x0000103d,0x00001038,0x0005008e,0x00000011,0x00001043,0x00000731,0x00001040,0x00050081,
+    0x00000011,0x00001045,0x00000fe1,0x00001043,0x00050081,0x00000006,0x00001048,0x00000fe4,
+    0x00001040,0x00050083,0x0000000c,0x00000817,0x000004ab,0x0000062b,0x00050051,0x00000006,
+    0x00000819,0x000008a1,0x00000002,0x00050051,0x00000006,0x0000081b,0x000008ab,0x00000002,
+    0x00050051,0x00000006,0x0000081d,0x000008b5,0x00000002,0x00060050,0x00000011,0x0000081e,
+    0x00000819,0x0000081b,0x0000081d,0x00050051,0x00000006,0x00001064,0x00000817,0x00000000,
+    0x00050085,0x00000006,0x00001067,0x00001064,0x000006fd,0x00050051,0x00000006,0x00001069,
+    0x00000817,0x00000001,0x00050085,0x00000006,0x0000106c,0x00001069,0x00000702,0x00050081,
+    0x00000006,0x0000106d,0x00001067,0x0000106c,0x00060052,0x0000000c,0x0000125c,0x0000106d,
+    0x0000129d,0x00000000,0x00050085,0x00000006,0x00001074,0x00001064,0x00000c8b,0x00050085,
+    0x00000006,0x00001079,0x00001069,0x000006fd,0x00050081,0x00000006,0x0000107a,0x00001074,
+    0x00001079,0x00060052,0x0000000c,0x00001262,0x0000107a,0x0000125c,0x00000001,0x00050085,
+    0x0000000c,0x0000107e,0x00001262,0x0000071c,0x00050051,0x00000006,0x00001080,0x0000107e,
+    0x00000000,0x00050085,0x00000006,0x00001083,0x00001080,0x00001080,0x00050051,0x00000006,
+    0x00001085,0x0000107e,0x00000001,0x00050085,0x00000006,0x00001088,0x00001085,0x00001085,
+    0x00050081,0x00000006,0x00001089,0x00001083,0x00001088,0x0007000c,0x00000006,0x0000108c,
+    0x00000001,0x00000025,0x00001089,0x00000c55,0x00050085,0x00000006,0x0000108f,0x0000010d,
+    0x0000108c,0x00050081,0x00000006,0x00001091,0x0000108f,0x00000112,0x00050085,0x00000006,
+    0x00001094,0x00000721,0x0000108c,0x00050081,0x00000006,0x00001096,0x00001094,0x00000112,
+    0x00050085,0x00000006,0x00001099,0x00001091,0x00001091,0x00050085,0x00000006,0x0000109c,
+    0x00001096,0x00001096,0x00050085,0x00000006,0x0000109f,0x00000123,0x00001099,0x00050081,
+    0x00000006,0x000010a1,0x0000109f,0x00000128,0x00050085,0x00000006,0x000010a4,0x000010a1,
+    0x0000109c,0x0005008e,0x00000011,0x000010a7,0x0000081e,0x000010a4,0x00050081,0x00000011,
+    0x000010a9,0x00001045,0x000010a7,0x00050081,0x00000006,0x000010ac,0x00001048,0x000010a4,
+    0x00050083,0x0000000c,0x00000829,0x000004c6,0x0000062b,0x00050051,0x00000006,0x0000082b,
+    0x000008a1,0x00000003,0x00050051,0x00000006,0x0000082d,0x000008ab,0x00000003,0x00050051,
+    0x00000006,0x0000082f,0x000008b5,0x00000003,0x00060050,0x00000011,0x00000830,0x0000082b,
+    0x0000082d,0x0000082f,0x00050051,0x00000006,0x000010c8,0x00000829,0x00000000,0x00050085,
+    0x00000006,0x000010cb,0x000010c8,0x000006fd,0x00050051,0x00000006,0x000010cd,0x00000829,
+    0x00000001,0x00050085,0x00000006,0x000010d0,0x000010cd,0x00000702,0x00050081,0x00000006,
+    0x000010d1,0x000010cb,0x000010d0,0x00060052,0x0000000c,0x0000126f,0x000010d1,0x0000129d,
+    0x00000000,0x00050085,0x00000006,0x000010d8,0x000010c8,0x00000c8b,0x00050085,0x00000006,
+    0x000010dd,0x000010cd,0x000006fd,0x00050081,0x00000006,0x000010de,0x000010d8,0x000010dd,
+    0x00060052,0x0000000c,0x00001275,0x000010de,0x0000126f,0x00000001,0x00050085,0x0000000c,
+    0x000010e2,0x00001275,0x0000071c,0x00050051,0x00000006,0x000010e4,0x000010e2,0x00000000,
+    0x00050085,0x00000006,0x000010e7,0x000010e4,0x000010e4,0x00050051,0x00000006,0x000010e9,
+    0x000010e2,0x00000001,0x00050085,0x00000006,0x000010ec,0x000010e9,0x000010e9,0x00050081,
+    0x00000006,0x000010ed,0x000010e7,0x000010ec,0x0007000c,0x00000006,0x000010f0,0x00000001,
+    0x00000025,0x000010ed,0x00000c55,0x00050085,0x00000006,0x000010f3,0x0000010d,0x000010f0,
+    0x00050081,0x00000006,0x000010f5,0x000010f3,0x00000112,0x00050085,0x00000006,0x000010f8,
+    0x00000721,0x000010f0,0x00050081,0x00000006,0x000010fa,0x000010f8,0x00000112,0x00050085,
+    0x00000006,0x000010fd,0x000010f5,0x000010f5,0x00050085,0x00000006,0x00001100,0x000010fa,
+    0x000010fa,0x00050085,0x00000006,0x00001103,0x00000123,0x000010fd,0x00050081,0x00000006,
+    0x00001105,0x00001103,0x00000128,0x00050085,0x00000006,0x00001108,0x00001105,0x00001100,
+    0x0005008e,0x00000011,0x0000110b,0x00000830,0x00001108,0x00050081,0x00000011,0x0000110d,
+    0x000010a9,0x0000110b,0x00050081,0x00000006,0x00001110,0x000010ac,0x00001108,0x00050088,
+    0x00000006,0x00001125,0x00000093,0x00001110,0x00060050,0x00000011,0x0000112e,0x00001125,
+    0x00001125,0x00001125,0x00050085,0x00000011,0x00000840,0x0000110d,0x0000112e,0x0007000c,
+    0x00000011,0x00000841,0x00000001,0x00000028,0x00000741,0x00000840,0x0007000c,0x00000011,
+    0x00000842,0x00000001,0x00000025,0x0000075f,0x00000841,0x0004003d,0x00000515,0x00000518,
+    0x00000517,0x0004007c,0x0000051b,0x0000051c,0x000004f0,0x00050051,0x00000006,0x0000051e,
+    0x00000842,0x00000000,0x00050051,0x00000006,0x0000051f,0x00000842,0x00000001,0x00050051,
+    0x00000006,0x00000520,0x00000842,0x00000002,0x00070050,0x00000016,0x00000521,0x0000051e,
+    0x0000051f,0x00000520,0x00000093,0x00040063,0x00000518,0x0000051c,0x00000521,0x000200f9,
+    0x00000524,0x000200f8,0x00000524,0x000100fd,0x00010038
+};
+
+/*
+#version 460
+#extension GL_GOOGLE_include_directive: require
+
+layout(local_size_x=8, local_size_y=8, local_size_z=1) in;
+
+layout(binding = 0) uniform sampler2D texSampler;
+layout(binding = 1) uniform writeonly image2D outImage;
+
+layout(push_constant) uniform pushConstants {
+    uvec2 c1;
+    ivec2 extent;
+    ivec4 viewport;
+};
+
+#define A_GPU 1
+#define A_GLSL 1
+//#include "ffx_a.h"
+#define FSR_RCAS_F 1
+vec4 FsrRcasLoadF(ivec2 p) { return texelFetch(texSampler, clamp(p, ivec2(0), extent), 0); }
+void FsrRcasInputF(inout float r, inout float g, inout float b) {}
+//#include "ffx_fsr1.h"
+
+
+void main()
+{
+    vec3 color;
+
+    if (any(lessThan(gl_GlobalInvocationID.xy, uvec2(viewport.xy))) ||
+        any(greaterThan(gl_GlobalInvocationID.xy, uvec2(viewport.zw))))
+    {
+        color = vec3(0.0, 0.0, 0.0);
+    }
+    else
+    {
+        FsrRcasF(color.r, color.g, color.b, uvec2(gl_GlobalInvocationID.xy - viewport.xy), c1.xyxx);
+    }
+
+    imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), vec4(color, 1.0));
+}
+*/
+const uint32_t fsr_rcas_comp_spv[] = {
+    0x07230203,0x00010000,0x0008000a,0x0000061e,0x00000000,0x00020011,0x00000001,0x00020011,
+    0x00000038,0x0006000b,0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,
+    0x00000000,0x00000001,0x0006000f,0x00000005,0x00000004,0x6e69616d,0x00000000,0x00000287,
+    0x00060010,0x00000004,0x00000011,0x00000008,0x00000008,0x00000001,0x00030003,0x00000002,
+    0x000001cc,0x000a0004,0x475f4c47,0x4c474f4f,0x70635f45,0x74735f70,0x5f656c79,0x656e696c,
+    0x7269645f,0x69746365,0x00006576,0x00080004,0x475f4c47,0x4c474f4f,0x6e695f45,0x64756c63,
+    0x69645f65,0x74636572,0x00657669,0x00040005,0x00000004,0x6e69616d,0x00000000,0x00050005,
+    0x0000007b,0x53786574,0x6c706d61,0x00007265,0x00060005,0x00000081,0x68737570,0x736e6f43,
+    0x746e6174,0x00000073,0x00040006,0x00000081,0x00000000,0x00003163,0x00050006,0x00000081,
+    0x00000001,0x65747865,0x0000746e,0x00060006,0x00000081,0x00000002,0x77656976,0x74726f70,
+    0x00000000,0x00030005,0x00000083,0x00000000,0x00080005,0x00000287,0x475f6c67,0x61626f6c,
+    0x766e496c,0x7461636f,0x496e6f69,0x00000044,0x00050005,0x000002c0,0x4974756f,0x6567616d,
+    0x00000000,0x00040047,0x0000007b,0x00000022,0x00000000,0x00040047,0x0000007b,0x00000021,
+    0x00000000,0x00050048,0x00000081,0x00000000,0x00000023,0x00000000,0x00050048,0x00000081,
+    0x00000001,0x00000023,0x00000008,0x00050048,0x00000081,0x00000002,0x00000023,0x00000010,
+    0x00030047,0x00000081,0x00000002,0x00040047,0x00000287,0x0000000b,0x0000001c,0x00040047,
+    0x000002c0,0x00000022,0x00000000,0x00040047,0x000002c0,0x00000021,0x00000001,0x00030047,
+    0x000002c0,0x00000019,0x00040047,0x000002cb,0x0000000b,0x00000019,0x00020013,0x00000002,
+    0x00030021,0x00000003,0x00000002,0x00030016,0x00000006,0x00000020,0x00040015,0x0000000c,
+    0x00000020,0x00000000,0x00040015,0x00000026,0x00000020,0x00000001,0x00040017,0x00000027,
+    0x00000026,0x00000002,0x00040017,0x00000029,0x00000006,0x00000004,0x00040017,0x00000034,
+    0x0000000c,0x00000002,0x0004002b,0x00000006,0x00000054,0x3f800000,0x0004002b,0x00000006,
+    0x0000005c,0x00000000,0x0004002b,0x0000000c,0x00000065,0x7ef19fff,0x0004002b,0x00000006,
+    0x00000071,0x40000000,0x00090019,0x00000078,0x00000006,0x00000001,0x00000000,0x00000000,
+    0x00000000,0x00000001,0x00000000,0x0003001b,0x00000079,0x00000078,0x00040020,0x0000007a,
+    0x00000000,0x00000079,0x0004003b,0x0000007a,0x0000007b,0x00000000,0x0004002b,0x00000026,
+    0x0000007e,0x00000000,0x0005002c,0x00000027,0x0000007f,0x0000007e,0x0000007e,0x00040017,
+    0x00000080,0x00000026,0x00000004,0x0005001e,0x00000081,0x00000034,0x00000027,0x00000080,
+    0x00040020,0x00000082,0x00000009,0x00000081,0x0004003b,0x00000082,0x00000083,0x00000009,
+    0x0004002b,0x00000026,0x00000084,0x00000001,0x00040020,0x00000085,0x00000009,0x00000027,
+    0x00040017,0x00000090,0x00000006,0x00000003,0x0004002b,0x00000026,0x00000094,0xffffffff,
+    0x0005002c,0x00000027,0x00000095,0x0000007e,0x00000094,0x0005002c,0x00000027,0x0000009c,
+    0x00000094,0x0000007e,0x0005002c,0x00000027,0x000000a8,0x00000084,0x0000007e,0x0005002c,
+    0x00000027,0x000000af,0x0000007e,0x00000084,0x0004002b,0x0000000c,0x000000b9,0x00000001,
+    0x0004002b,0x00000006,0x00000154,0x3e800000,0x0004002b,0x00000006,0x000001d3,0xc0800000,
+    0x0004002b,0x00000006,0x000001d7,0x40800000,0x0004002b,0x00000006,0x0000022e,0xbe400000,
+    0x00020014,0x00000284,0x00040017,0x00000285,0x0000000c,0x00000003,0x00040020,0x00000286,
+    0x00000001,0x00000285,0x0004003b,0x00000286,0x00000287,0x00000001,0x0004002b,0x00000026,
+    0x0000028a,0x00000002,0x00040020,0x0000028b,0x00000009,0x00000080,0x00040017,0x00000290,
+    0x00000284,0x00000002,0x0006002c,0x00000090,0x000002a2,0x0000005c,0x0000005c,0x0000005c,
+    0x00040020,0x000002b3,0x00000009,0x00000034,0x00090019,0x000002be,0x00000006,0x00000001,
+    0x00000000,0x00000000,0x00000000,0x00000002,0x00000000,0x00040020,0x000002bf,0x00000000,
+    0x000002be,0x0004003b,0x000002bf,0x000002c0,0x00000000,0x0004002b,0x0000000c,0x000002ca,
+    0x00000008,0x0006002c,0x00000285,0x000002cb,0x000002ca,0x000002ca,0x000000b9,0x00030001,
+    0x00000090,0x0000061d,0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,0x000200f8,
+    0x00000005,0x0004003d,0x00000285,0x00000288,0x00000287,0x0007004f,0x00000034,0x00000289,
+    0x00000288,0x00000288,0x00000000,0x00000001,0x00050041,0x0000028b,0x0000028c,0x00000083,
+    0x0000028a,0x0004003d,0x00000080,0x0000028d,0x0000028c,0x0007004f,0x00000027,0x0000028e,
+    0x0000028d,0x0000028d,0x00000000,0x00000001,0x0004007c,0x00000034,0x0000028f,0x0000028e,
+    0x000500b0,0x00000290,0x00000291,0x00000289,0x0000028f,0x0004009a,0x00000284,0x00000292,
+    0x00000291,0x000400a8,0x00000284,0x00000293,0x00000292,0x000300f7,0x00000295,0x00000000,
+    0x000400fa,0x00000293,0x00000294,0x00000295,0x000200f8,0x00000294,0x0007004f,0x00000027,
+    0x0000029a,0x0000028d,0x0000028d,0x00000002,0x00000003,0x0004007c,0x00000034,0x0000029b,
+    0x0000029a,0x000500ac,0x00000290,0x0000029c,0x00000289,0x0000029b,0x0004009a,0x00000284,
+    0x0000029d,0x0000029c,0x000200f9,0x00000295,0x000200f8,0x00000295,0x000700f5,0x00000284,
+    0x0000029e,0x00000292,0x00000005,0x0000029d,0x00000294,0x000300f7,0x000002a0,0x00000000,
+    0x000400fa,0x0000029e,0x0000029f,0x000002a3,0x000200f8,0x0000029f,0x000200f9,0x000002a0,
+    0x000200f8,0x000002a3,0x00050082,0x00000034,0x000002aa,0x00000289,0x0000028f,0x00050041,
+    0x000002b3,0x000002b4,0x00000083,0x0000007e,0x0004003d,0x00000034,0x000002b5,0x000002b4,
+    0x0004007c,0x00000027,0x00000353,0x000002aa,0x00050080,0x00000027,0x00000355,0x00000353,
+    0x00000095,0x0004003d,0x00000079,0x000004b3,0x0000007b,0x00050041,0x00000085,0x000004b5,
+    0x00000083,0x00000084,0x0004003d,0x00000027,0x000004b6,0x000004b5,0x0008000c,0x00000027,
+    0x000004b7,0x00000001,0x0000002d,0x00000355,0x0000007f,0x000004b6,0x00040064,0x00000078,
+    0x000004b8,0x000004b3,0x0007005f,0x00000029,0x000004b9,0x000004b8,0x000004b7,0x00000002,
+    0x0000007e,0x00050080,0x00000027,0x00000359,0x00000353,0x0000009c,0x0008000c,0x00000027,
+    0x000004c0,0x00000001,0x0000002d,0x00000359,0x0000007f,0x000004b6,0x00040064,0x00000078,
+    0x000004c1,0x000004b3,0x0007005f,0x00000029,0x000004c2,0x000004c1,0x000004c0,0x00000002,
+    0x0000007e,0x0008000c,0x00000027,0x000004c9,0x00000001,0x0000002d,0x00000353,0x0000007f,
+    0x000004b6,0x00040064,0x00000078,0x000004ca,0x000004b3,0x0007005f,0x00000029,0x000004cb,
+    0x000004ca,0x000004c9,0x00000002,0x0000007e,0x00050080,0x00000027,0x00000360,0x00000353,
+    0x000000a8,0x0008000c,0x00000027,0x000004d2,0x00000001,0x0000002d,0x00000360,0x0000007f,
+    0x000004b6,0x00040064,0x00000078,0x000004d3,0x000004b3,0x0007005f,0x00000029,0x000004d4,
+    0x000004d3,0x000004d2,0x00000002,0x0000007e,0x00050080,0x00000027,0x00000364,0x00000353,
+    0x000000af,0x0008000c,0x00000027,0x000004db,0x00000001,0x0000002d,0x00000364,0x0000007f,
+    0x000004b6,0x00040064,0x00000078,0x000004dc,0x000004b3,0x0007005f,0x00000029,0x000004dd,
+    0x000004dc,0x000004db,0x00000002,0x0000007e,0x00050051,0x00000006,0x00000368,0x000004b9,
+    0x00000000,0x00050051,0x00000006,0x0000036a,0x000004b9,0x00000001,0x00050051,0x00000006,
+    0x0000036c,0x000004b9,0x00000002,0x00050051,0x00000006,0x0000036e,0x000004c2,0x00000000,
+    0x00050051,0x00000006,0x00000370,0x000004c2,0x00000001,0x00050051,0x00000006,0x00000372,
+    0x000004c2,0x00000002,0x00050051,0x00000006,0x00000374,0x000004cb,0x00000000,0x00050051,
+    0x00000006,0x00000376,0x000004cb,0x00000001,0x00050051,0x00000006,0x00000378,0x000004cb,
+    0x00000002,0x00050051,0x00000006,0x0000037a,0x000004d4,0x00000000,0x00050051,0x00000006,
+    0x0000037c,0x000004d4,0x00000001,0x00050051,0x00000006,0x0000037e,0x000004d4,0x00000002,
+    0x00050051,0x00000006,0x00000380,0x000004dd,0x00000000,0x00050051,0x00000006,0x00000382,
+    0x000004dd,0x00000001,0x00050051,0x00000006,0x00000384,0x000004dd,0x00000002,0x0007000c,
+    0x00000006,0x0000055a,0x00000001,0x00000025,0x0000036e,0x0000037a,0x0007000c,0x00000006,
+    0x0000055b,0x00000001,0x00000025,0x00000368,0x0000055a,0x0007000c,0x00000006,0x00000404,
+    0x00000001,0x00000025,0x0000055b,0x00000380,0x0007000c,0x00000006,0x00000561,0x00000001,
+    0x00000025,0x00000370,0x0000037c,0x0007000c,0x00000006,0x00000562,0x00000001,0x00000025,
+    0x0000036a,0x00000561,0x0007000c,0x00000006,0x0000040a,0x00000001,0x00000025,0x00000562,
+    0x00000382,0x0007000c,0x00000006,0x00000568,0x00000001,0x00000025,0x00000372,0x0000037e,
+    0x0007000c,0x00000006,0x00000569,0x00000001,0x00000025,0x0000036c,0x00000568,0x0007000c,
+    0x00000006,0x00000410,0x00000001,0x00000025,0x00000569,0x00000384,0x0007000c,0x00000006,
+    0x0000056f,0x00000001,0x00000028,0x0000036e,0x0000037a,0x0007000c,0x00000006,0x00000570,
+    0x00000001,0x00000028,0x00000368,0x0000056f,0x0007000c,0x00000006,0x00000416,0x00000001,
+    0x00000028,0x00000570,0x00000380,0x0007000c,0x00000006,0x00000576,0x00000001,0x00000028,
+    0x00000370,0x0000037c,0x0007000c,0x00000006,0x00000577,0x00000001,0x00000028,0x0000036a,
+    0x00000576,0x0007000c,0x00000006,0x0000041c,0x00000001,0x00000028,0x00000577,0x00000382,
+    0x0007000c,0x00000006,0x0000057d,0x00000001,0x00000028,0x00000372,0x0000037e,0x0007000c,
+    0x00000006,0x0000057e,0x00000001,0x00000028,0x0000036c,0x0000057d,0x0007000c,0x00000006,
+    0x00000422,0x00000001,0x00000028,0x0000057e,0x00000384,0x00050088,0x00000006,0x00000587,
+    0x00000154,0x00000416,0x00050085,0x00000006,0x00000428,0x00000404,0x00000587,0x00050088,
+    0x00000006,0x00000593,0x00000154,0x0000041c,0x00050085,0x00000006,0x0000042e,0x0000040a,
+    0x00000593,0x00050088,0x00000006,0x0000059f,0x00000154,0x00000422,0x00050085,0x00000006,
+    0x00000434,0x00000410,0x0000059f,0x00050083,0x00000006,0x00000438,0x00000054,0x00000416,
+    0x00050085,0x00000006,0x0000043b,0x000001d7,0x00000404,0x00050081,0x00000006,0x0000043e,
+    0x0000043b,0x000001d3,0x00050088,0x00000006,0x000005ab,0x00000054,0x0000043e,0x00050085,
+    0x00000006,0x00000440,0x00000438,0x000005ab,0x00050083,0x00000006,0x00000444,0x00000054,
+    0x0000041c,0x00050085,0x00000006,0x00000447,0x000001d7,0x0000040a,0x00050081,0x00000006,
+    0x0000044a,0x00000447,0x000001d3,0x00050088,0x00000006,0x000005b7,0x00000054,0x0000044a,
+    0x00050085,0x00000006,0x0000044c,0x00000444,0x000005b7,0x00050083,0x00000006,0x00000450,
+    0x00000054,0x00000422,0x00050085,0x00000006,0x00000453,0x000001d7,0x00000410,0x00050081,
+    0x00000006,0x00000456,0x00000453,0x000001d3,0x00050088,0x00000006,0x000005c3,0x00000054,
+    0x00000456,0x00050085,0x00000006,0x00000458,0x00000450,0x000005c3,0x0004007f,0x00000006,
+    0x0000045a,0x00000428,0x0007000c,0x00000006,0x0000045c,0x00000001,0x00000028,0x0000045a,
+    0x00000440,0x0004007f,0x00000006,0x0000045e,0x0000042e,0x0007000c,0x00000006,0x00000460,
+    0x00000001,0x00000028,0x0000045e,0x0000044c,0x0004007f,0x00000006,0x00000462,0x00000434,
+    0x0007000c,0x00000006,0x00000464,0x00000001,0x00000028,0x00000462,0x00000458,0x0007000c,
+    0x00000006,0x000005cf,0x00000001,0x00000028,0x00000460,0x00000464,0x0007000c,0x00000006,
+    0x000005d0,0x00000001,0x00000028,0x0000045c,0x000005cf,0x0007000c,0x00000006,0x0000046b,
+    0x00000001,0x00000025,0x000005d0,0x0000005c,0x0007000c,0x00000006,0x0000046c,0x00000001,
+    0x00000028,0x0000022e,0x0000046b,0x00050051,0x0000000c,0x0000046e,0x000002b5,0x00000000,
+    0x0004007c,0x00000006,0x0000046f,0x0000046e,0x00050085,0x00000006,0x00000470,0x0000046c,
+    0x0000046f,0x00050085,0x00000006,0x00000473,0x000001d7,0x00000470,0x00050081,0x00000006,
+    0x00000475,0x00000473,0x00000054,0x0004007c,0x0000000c,0x000005e1,0x00000475,0x00050082,
+    0x0000000c,0x000005e2,0x00000065,0x000005e1,0x0004007c,0x00000006,0x000005e3,0x000005e2,
+    0x0004007f,0x00000006,0x000005e6,0x000005e3,0x00050085,0x00000006,0x000005e8,0x000005e6,
+    0x00000475,0x00050081,0x00000006,0x000005ea,0x000005e8,0x00000071,0x00050085,0x00000006,
+    0x000005eb,0x000005e3,0x000005ea,0x00050081,0x00000006,0x00000611,0x00000368,0x0000036e,
+    0x00050081,0x00000006,0x00000612,0x00000611,0x00000380,0x00050081,0x00000006,0x00000613,
+    0x00000612,0x0000037a,0x00050085,0x00000006,0x00000485,0x00000470,0x00000613,0x00050081,
+    0x00000006,0x00000487,0x00000485,0x00000374,0x00050085,0x00000006,0x00000489,0x00000487,
+    0x000005eb,0x00050081,0x00000006,0x00000614,0x0000036a,0x00000370,0x00050081,0x00000006,
+    0x00000615,0x00000614,0x00000382,0x00050081,0x00000006,0x00000616,0x00000615,0x0000037c,
+    0x00050085,0x00000006,0x00000498,0x00000470,0x00000616,0x00050081,0x00000006,0x0000049a,
+    0x00000498,0x00000376,0x00050085,0x00000006,0x0000049c,0x0000049a,0x000005eb,0x00050081,
+    0x00000006,0x00000617,0x0000036c,0x00000372,0x00050081,0x00000006,0x00000618,0x00000617,
+    0x00000384,0x00050081,0x00000006,0x00000619,0x00000618,0x0000037e,0x00050085,0x00000006,
+    0x000004ab,0x00000470,0x00000619,0x00050081,0x00000006,0x000004ad,0x000004ab,0x00000378,
+    0x00050085,0x00000006,0x000004af,0x000004ad,0x000005eb,0x00060052,0x00000090,0x00000609,
+    0x00000489,0x0000061d,0x00000000,0x00060052,0x00000090,0x0000060b,0x0000049c,0x00000609,
+    0x00000001,0x00060052,0x00000090,0x0000060d,0x000004af,0x0000060b,0x00000002,0x000200f9,
+    0x000002a0,0x000200f8,0x000002a0,0x000700f5,0x00000090,0x0000061c,0x000002a2,0x0000029f,
+    0x0000060d,0x000002a3,0x0004003d,0x000002be,0x000002c1,0x000002c0,0x0004007c,0x00000027,
+    0x000002c4,0x00000289,0x00050051,0x00000006,0x000002c6,0x0000061c,0x00000000,0x00050051,
+    0x00000006,0x000002c7,0x0000061c,0x00000001,0x00050051,0x00000006,0x000002c8,0x0000061c,
+    0x00000002,0x00070050,0x00000029,0x000002c9,0x000002c6,0x000002c7,0x000002c8,0x00000054,
+    0x00040063,0x000002c1,0x000002c4,0x000002c9,0x000100fd,0x00010038
+};
+
+#endif /* __FSR_SPV_H */
diff --git a/dlls/win32u/sysparams.c b/dlls/win32u/sysparams.c
index 29b4dcb6c41..efd1aa32995 100644
--- a/dlls/win32u/sysparams.c
+++ b/dlls/win32u/sysparams.c
@@ -1659,6 +1659,109 @@ static void add_monitor( const struct gdi_monitor *gdi_monitor, void *param )
     }
 }
 
+/* Return whether fsr should be used */
+BOOL fs_hack_is_fsr(void)
+{
+    static int is_fsr = -1;
+    if (is_fsr < 0)
+    {
+        const char *e = getenv("WINE_FULLSCREEN_FSR");
+        is_fsr = e && strcmp(e, "0");
+    }
+    TRACE("is_fsr: %s\n", is_fsr ? "TRUE" : "FALSE");
+    return is_fsr;
+}
+
+static BOOL get_fsr_single_mode( UINT *mode )
+{
+    static int cached = -1;
+    const char *e;
+    if ( cached != -1 )
+    {
+        *mode = cached;
+        return TRUE;
+    }
+
+    if ( (e = getenv("WINE_FULLSCREEN_FSR_MODE")) )
+    {
+        /* If empty or zero don't apply a mode */
+        if (*e == '\0' || *e == '0')
+            return FALSE;
+        /* The 'mode' values should be in sync with the order in 'fsr_ratios' */
+        if ( !strcmp(e, "Ultra") || !strcmp(e, "ultra") )                   cached = 3;
+        else if ( !strcmp(e, "Quality") || !strcmp(e, "quality") )          cached = 2;
+        else if ( !strcmp(e, "Balanced") || !strcmp(e, "balanced") )        cached = 1;
+        else if ( !strcmp(e, "Performance") || !strcmp(e, "performance") )  cached = 0;
+        /* If the user mistyped the mode, return 'balanced' */
+        else cached = 1;
+        *mode = cached;
+        TRACE("found single mode: %d\n", cached);
+        return TRUE;
+    }
+    return FALSE;
+}
+
+static BOOL get_fsr_custom_mode( SIZE *size )
+{
+    static LONG width = 0, height = 0;
+    const char *e;
+    if ( width && height )
+    {
+        size->cx = width;
+        size->cy = height;
+        return TRUE;
+    }
+    if ( (e = getenv("WINE_FULLSCREEN_FSR_CUSTOM_MODE")) )
+    {
+        const int n = sscanf(e, "%ux%u", &width, &height);
+        if ( n == 2 )
+        {
+            size->cx = width;
+            size->cy = height;
+            TRACE("found custom size: %dx%d\n", size->cx, size->cy);
+            return TRUE;
+        }
+    }
+    return FALSE;
+}
+
+static float get_fsr_h_ratio(SIZE devmode)
+{
+    float h_ratio = 0.0f;
+    if (devmode.cx / 16.0f == devmode.cy / 9.0f)        h_ratio = 9.0f;                     /* 16:9 resolutions */
+    else if ((DWORD)(devmode.cx / 210.0f) == (DWORD)(devmode.cy / 90.0f)) h_ratio = 9.0f;   /* 21:9 ultra-wide resolutions */
+    else if (devmode.cx / 32.0f == devmode.cy / 9.0f)   h_ratio = 9.0f;                     /* 32:9 "duper-ultra-wide" resolutions */
+    else if (devmode.cx / 8.0f == devmode.cy / 5.0f)    h_ratio = 10.0f;                    /* 16:10 resolutions */
+    else if (devmode.cx / 12.0f == devmode.cy / 5.0f)   h_ratio = 10.0f;                    /* 24:10 resolutions */
+    else h_ratio = 1.0f;    /* In case of unknown ratio, naively create FSR resolutions */
+    return h_ratio;
+}
+
+static SIZE get_fsr_size(SIZE devmode, float factor)
+{
+    float h_ratio, real_w_ratio;
+    SIZE fsr_size;
+
+    h_ratio = get_fsr_h_ratio(devmode);
+    real_w_ratio = devmode.cx / (devmode.cy / h_ratio);
+    if (h_ratio == 1.0f)
+    {
+        /* Naive generation (matches AMD mode documentation but not sample code) */
+        /* AMD's sample rounds down, which doesn't match their published list of resolutions */
+        fsr_size.cy = (LONG)(devmode.cy / factor + 0.5f);
+        fsr_size.cx = (LONG)(fsr_size.cy * ((float)devmode.cx / (float)devmode.cy) + 0.5f);
+    }
+    else
+    {
+        /* Round to nearest integer (our way) */
+        float h_factor = (LONG) ((devmode.cy / h_ratio) / factor + 0.5f);
+        fsr_size.cx = (LONG)(real_w_ratio * h_factor + 0.5f);
+        fsr_size.cy = (LONG)(h_ratio * h_factor + 0.5f);
+    }
+    TRACE("calculated size: %ux%u, ratio: %1.1f\n", fsr_size.cx, fsr_size.cy, factor);
+    return fsr_size;
+}
+
 static UINT add_screen_size( SIZE *sizes, UINT count, SIZE size )
 {
     UINT i = 0;
@@ -1692,6 +1795,7 @@ static SIZE *get_screen_sizes( const DEVMODEW *maximum, const DEVMODEW *modes, U
         {2880, 1620},
         {3200, 1800},
         /* 16:10 */
+        {1280,  800},
         {1440,  900},
         {1680, 1050},
         {1920, 1200},
@@ -1715,13 +1819,37 @@ static SIZE *get_screen_sizes( const DEVMODEW *maximum, const DEVMODEW *modes, U
 
     const char *env;
 
+    static SIZE fsr_sizes[4] = {0};
+    SIZE fsr_custom_size = {0, 0};
+    UINT fsr_single_mode;
+    const BOOL is_fsr = fs_hack_is_fsr();
+    const BOOL is_custom_mode = get_fsr_custom_mode( &fsr_custom_size );
+    const BOOL is_single_mode = get_fsr_single_mode( &fsr_single_mode );
+
     count = 1 + ARRAY_SIZE(default_sizes) + ARRAY_SIZE(lowres_sizes) + modes_count;
+    count += ARRAY_SIZE(fsr_sizes);
     if (!(sizes = malloc( count * sizeof(*sizes) ))) return NULL;
 
     count = add_screen_size( sizes, 0, max_size );
+
+    if ( is_fsr )
+    {
+        if ( !fsr_sizes[0].cx || !fsr_sizes[0].cy )
+        {
+            fsr_sizes[0] = get_fsr_size(max_size, 2.0f);   /* FSR Performance */
+            fsr_sizes[1] = get_fsr_size(max_size, 1.7f);   /* FSR Balanced */
+            fsr_sizes[2] = get_fsr_size(max_size, 1.5f);   /* FSR Quality */
+            fsr_sizes[3] = get_fsr_size(max_size, 1.3f);   /* FSR Ultra Quality */
+        }
+        if ( !is_custom_mode && is_single_mode ) fsr_custom_size = fsr_sizes[fsr_single_mode];
+    }
+
     for (i = 0; i < ARRAY_SIZE(default_sizes); i++)
     {
         if (default_sizes[i].cx > max_size.cx || default_sizes[i].cy > max_size.cy) continue;
+        /* Don't report modes larger than the requested FSR single mode or custom size */
+        if (fsr_custom_size.cx && default_sizes[i].cx > fsr_custom_size.cx) continue;
+        if (fsr_custom_size.cy && default_sizes[i].cy > fsr_custom_size.cy) continue;
         count += add_screen_size( sizes, count, default_sizes[i] );
     }
 
@@ -1732,12 +1860,33 @@ static SIZE *get_screen_sizes( const DEVMODEW *maximum, const DEVMODEW *modes, U
         count += ARRAY_SIZE(lowres_sizes);
     }
 
+    if ( is_fsr )
+    {
+        if ( is_custom_mode || is_single_mode )
+        {
+            if ( enable_lowres || (fsr_custom_size.cx > 800 && fsr_custom_size.cy > 600) )
+                count += add_screen_size( sizes, count, fsr_custom_size );
+        }
+        else
+        {
+            for (i = 0; i < ARRAY_SIZE(fsr_sizes); i++)
+            {
+                if ( fsr_sizes[i].cx < 800 && !enable_lowres ) continue;;
+                if ( fsr_sizes[i].cy < 600 && !enable_lowres ) continue;;
+                count += add_screen_size( sizes, count, fsr_sizes[i] );
+            }
+        }
+    }
+
     for (mode = modes; mode && modes_count; mode = NEXT_DEVMODEW(mode), modes_count--)
     {
         UINT width = devmode_get( mode, DM_PELSWIDTH ), height = devmode_get( mode, DM_PELSHEIGHT );
         SIZE size = {.cx = max( width, height ), .cy = min( width, height )};
         if (!size.cx || (size.cx < 800 && !enable_lowres) || size.cx > max_size.cx) continue;
         if (!size.cy || (size.cy < 600 && !enable_lowres) || size.cy > max_size.cy) continue;
+        /* Don't report modes larger than the requested FSR single mode or custom size */
+        if (fsr_custom_size.cx && default_sizes[i].cx > fsr_custom_size.cx) continue;
+        if (fsr_custom_size.cy && default_sizes[i].cy > fsr_custom_size.cy) continue;
         count += add_screen_size( sizes, count, size );
     }
 
diff --git a/dlls/win32u/vulkan.c b/dlls/win32u/vulkan.c
index 1bf8c5e404e..3b6f981e014 100644
--- a/dlls/win32u/vulkan.c
+++ b/dlls/win32u/vulkan.c
@@ -33,6 +33,8 @@
 #include "win32u_private.h"
 #include "ntuser_private.h"
 
+#include "fsr_spv.h"
+
 WINE_DEFAULT_DEBUG_CHANNEL(vulkan);
 
 PFN_vkGetDeviceProcAddr p_vkGetDeviceProcAddr = NULL;
@@ -78,15 +80,37 @@ static BOOL fs_hack_is_integer(void)
     return is_int;
 }
 
+static float fs_hack_fsr_sharpness(void)
+{
+    static float sharpness = -1.0f;
+    if (sharpness < 0.0f)
+    {
+        int value = 2;
+        const char *e = getenv("WINE_FULLSCREEN_FSR_STRENGTH");
+        if (e) value = atoi(e);
+        sharpness = (float) value / 10.0f;
+    }
+    TRACE("using sharpness: %2.4f\n", sharpness);
+    return sharpness;
+}
+
 struct fs_hack_image
 {
     uint32_t cmd_queue_idx;
     VkCommandBuffer cmd;
     VkImage swapchain_image;
+    VkImage fsr_image;
     VkImage user_image;
     VkSemaphore blit_finished;
-    VkImageView user_view, blit_view;
-    VkDescriptorSet descriptor_set;
+    VkImageView user_view, swapchain_view, fsr_view;
+    VkDescriptorSet descriptor_set, fsr_set;
+};
+
+struct fs_comp_pipeline
+{
+    VkPipelineLayout pipeline_layout;
+    VkPipeline pipeline;
+    uint32_t push_size;
 };
 
 static const char *debugstr_vkextent2d( const VkExtent2D *ext )
@@ -106,14 +130,19 @@ struct swapchain
     uint32_t raw_monitor_dpi;
     VkExtent2D host_extents;
     VkCommandPool *cmd_pools; /* VkCommandPool[device->queue_count] */
-    VkDeviceMemory user_image_memory;
+    VkDeviceMemory user_image_memory, fsr_image_memory;
     uint32_t n_images;
     struct fs_hack_image *fs_hack_images; /* struct fs_hack_image[n_images] */
     VkSampler sampler;
     VkDescriptorPool descriptor_pool;
     VkDescriptorSetLayout descriptor_set_layout;
-    VkPipelineLayout pipeline_layout;
-    VkPipeline pipeline;
+    VkFormat format;
+    BOOL fsr;
+    float sharpness;
+
+    struct fs_comp_pipeline blit_pipeline;
+    struct fs_comp_pipeline fsr_easu_pipeline;
+    struct fs_comp_pipeline fsr_rcas_pipeline;
 };
 
 static struct swapchain *swapchain_from_handle( VkSwapchainKHR handle )
@@ -448,28 +477,75 @@ const uint32_t blit_comp_spv[] =
     0x0000005b, 0x00000021, 0x00040063, 0x00000056, 0x0000005a, 0x0000005b, 0x000100fd, 0x00010038,
 };
 
-static VkResult create_pipeline( struct vulkan_device *device, struct swapchain *swapchain, VkShaderModule shaderModule )
+static void destroy_pipeline(struct vulkan_device *device, struct fs_comp_pipeline *pipeline)
+{
+    device->p_vkDestroyPipeline(device->host.device, pipeline->pipeline, NULL);
+    pipeline->pipeline = VK_NULL_HANDLE;
+
+    device->p_vkDestroyPipelineLayout(device->host.device, pipeline->pipeline_layout, NULL);
+    pipeline->pipeline_layout = VK_NULL_HANDLE;
+}
+
+static VkResult create_pipeline( struct vulkan_device *device, struct swapchain *swapchain, const uint32_t *code, uint32_t code_size, uint32_t push_size, struct fs_comp_pipeline *pipeline )
 {
     VkComputePipelineCreateInfo pipelineInfo = {0};
+    VkPipelineLayoutCreateInfo pipelineLayoutInfo = {0};
+    VkShaderModuleCreateInfo shaderInfo = {0};
+    VkPushConstantRange pushConstants;
+    VkShaderModule shaderModule = 0;
     VkResult res;
 
+    pipeline->push_size = push_size;
+
+    pushConstants.stageFlags = VK_SHADER_STAGE_COMPUTE_BIT;
+    pushConstants.offset = 0;
+    pushConstants.size = push_size;
+
+    pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
+    pipelineLayoutInfo.setLayoutCount = 1;
+    pipelineLayoutInfo.pSetLayouts = &swapchain->descriptor_set_layout;
+    pipelineLayoutInfo.pushConstantRangeCount = 1;
+    pipelineLayoutInfo.pPushConstantRanges = &pushConstants;
+
+    if ((res = device->p_vkCreatePipelineLayout(device->host.device, &pipelineLayoutInfo, NULL, &pipeline->pipeline_layout)))
+    {
+        ERR("vkCreatePipelineLayout: %d\n", res);
+        goto fail;
+    }
+
+    shaderInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
+    shaderInfo.codeSize = code_size;
+    shaderInfo.pCode = code;
+
+    if ((res = device->p_vkCreateShaderModule(device->host.device, &shaderInfo, NULL, &shaderModule)))
+    {
+        ERR("vkCreateShaderModule: %d\n", res);
+        goto fail;
+    }
+
     pipelineInfo.sType = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO;
     pipelineInfo.stage.sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
     pipelineInfo.stage.stage = VK_SHADER_STAGE_COMPUTE_BIT;
     pipelineInfo.stage.module = shaderModule;
     pipelineInfo.stage.pName = "main";
-    pipelineInfo.layout = swapchain->pipeline_layout;
+    pipelineInfo.layout = pipeline->pipeline_layout;
     pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
     pipelineInfo.basePipelineIndex = -1;
 
     if ((res = device->p_vkCreateComputePipelines( device->host.device, VK_NULL_HANDLE, 1,
-                                                   &pipelineInfo, NULL, &swapchain->pipeline )))
+                                                   &pipelineInfo, NULL, &pipeline->pipeline )))
     {
         ERR( "vkCreateComputePipelines: %d\n", res );
-        return res;
+        goto fail;
     }
+    else goto out;
 
-    return VK_SUCCESS;
+fail:
+    destroy_pipeline(device, pipeline);
+
+out:
+    device->p_vkDestroyShaderModule(device->host.device, shaderModule, NULL);
+    return res;
 }
 
 static VkResult create_descriptor_set( struct vulkan_device *device, struct swapchain *swapchain, struct fs_hack_image *hack )
@@ -495,7 +571,7 @@ static VkResult create_descriptor_set( struct vulkan_device *device, struct swap
     userDescriptorImageInfo.sampler = swapchain->sampler;
 
     realDescriptorImageInfo.imageLayout = VK_IMAGE_LAYOUT_GENERAL;
-    realDescriptorImageInfo.imageView = hack->blit_view;
+    realDescriptorImageInfo.imageView = swapchain->fsr ? hack->fsr_view : hack->swapchain_view;
 
     descriptorWrites[0].sType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;
     descriptorWrites[0].dstSet = hack->descriptor_set;
@@ -514,10 +590,47 @@ static VkResult create_descriptor_set( struct vulkan_device *device, struct swap
     descriptorWrites[1].pImageInfo = &realDescriptorImageInfo;
 
     device->p_vkUpdateDescriptorSets( device->host.device, 2, descriptorWrites, 0, NULL );
+
+    if (swapchain->fsr)
+    {
+        if ((res = device->p_vkAllocateDescriptorSets(device->host.device, &descriptorAllocInfo, &hack->fsr_set)))
+        {
+            ERR("vkAllocateDescriptorSets: %d\n", res);
+            return res;
+        }
+
+        userDescriptorImageInfo.imageView = hack->fsr_view;
+
+        realDescriptorImageInfo.imageView = hack->swapchain_view;
+
+        descriptorWrites[0].dstSet = hack->fsr_set;
+        descriptorWrites[1].dstSet = hack->fsr_set;
+
+        device->p_vkUpdateDescriptorSets(device->host.device, 2, descriptorWrites, 0, NULL);
+    }
+
     return VK_SUCCESS;
 }
 
-static VkResult init_blit_images( struct vulkan_device *device, struct swapchain *swapchain )
+static VkFormat srgb_to_unorm(VkFormat format)
+{
+    switch (format)
+    {
+        case VK_FORMAT_R8G8B8A8_SRGB: return VK_FORMAT_R8G8B8A8_UNORM;
+        case VK_FORMAT_B8G8R8A8_SRGB: return VK_FORMAT_B8G8R8A8_UNORM;
+        case VK_FORMAT_R8G8B8_SRGB: return VK_FORMAT_R8G8B8_UNORM;
+        case VK_FORMAT_B8G8R8_SRGB: return VK_FORMAT_B8G8R8_UNORM;
+        case VK_FORMAT_A8B8G8R8_SRGB_PACK32: return VK_FORMAT_A8B8G8R8_UNORM_PACK32;
+        default: return format;
+    }
+}
+
+static BOOL is_srgb(VkFormat format)
+{
+    return format != srgb_to_unorm(format);
+}
+
+static VkResult init_compute_state( struct vulkan_device *device, struct swapchain *swapchain )
 {
     VkResult res;
     VkSamplerCreateInfo samplerInfo = {0};
@@ -525,18 +638,20 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
     VkDescriptorPoolCreateInfo poolInfo = {0};
     VkDescriptorSetLayoutBinding layoutBindings[2] = {{0}, {0}};
     VkDescriptorSetLayoutCreateInfo descriptorLayoutInfo = {0};
-    VkPipelineLayoutCreateInfo pipelineLayoutInfo = {0};
-    VkPushConstantRange pushConstants;
-    VkShaderModuleCreateInfo shaderInfo = {0};
-    VkShaderModule shaderModule = 0;
+    VkDeviceSize fsrMemTotal = 0, offs;
+    VkImageCreateInfo imageInfo = {0};
+    VkMemoryRequirements fsrMemReq;
+    VkMemoryAllocateInfo allocInfo = {0};
+    VkPhysicalDeviceMemoryProperties memProperties;
     VkImageViewCreateInfo viewInfo = {0};
     uint32_t i;
+    uint32_t fsr_memory_type = -1;
 
     samplerInfo.sType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO;
     samplerInfo.magFilter = samplerInfo.minFilter = fs_hack_is_integer() ? VK_FILTER_NEAREST : VK_FILTER_LINEAR;
-    samplerInfo.addressModeU = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
-    samplerInfo.addressModeV = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
-    samplerInfo.addressModeW = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
+    samplerInfo.addressModeU = swapchain->fsr ? VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE : VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
+    samplerInfo.addressModeV = swapchain->fsr ? VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE : VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
+    samplerInfo.addressModeW = swapchain->fsr ? VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE : VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER;
     samplerInfo.anisotropyEnable = VK_FALSE;
     samplerInfo.maxAnisotropy = 1;
     samplerInfo.borderColor = VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK;
@@ -564,6 +679,13 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
     poolInfo.pPoolSizes = poolSizes;
     poolInfo.maxSets = swapchain->n_images;
 
+    if (swapchain->fsr)
+    {
+        poolSizes[0].descriptorCount *= 2;
+        poolSizes[1].descriptorCount *= 2;
+        poolInfo.maxSets *= 2;
+    }
+
     if ((res = device->p_vkCreateDescriptorPool( device->host.device, &poolInfo, NULL, &swapchain->descriptor_pool )))
     {
         ERR( "vkCreateDescriptorPool: %d\n", res );
@@ -593,36 +715,125 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
         goto fail;
     }
 
-    pushConstants.stageFlags = VK_SHADER_STAGE_COMPUTE_BIT;
-    pushConstants.offset = 0;
-    pushConstants.size = 4 * sizeof(float); /* 2 * vec2 */
-
-    pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
-    pipelineLayoutInfo.setLayoutCount = 1;
-    pipelineLayoutInfo.pSetLayouts = &swapchain->descriptor_set_layout;
-    pipelineLayoutInfo.pushConstantRangeCount = 1;
-    pipelineLayoutInfo.pPushConstantRanges = &pushConstants;
+    if ((res = create_pipeline( device, swapchain, blit_comp_spv, sizeof(blit_comp_spv),
+                                4 * sizeof(float) /* 2 * vec2 */, &swapchain->blit_pipeline )))
+        goto fail;
 
-    if ((res = device->p_vkCreatePipelineLayout( device->host.device, &pipelineLayoutInfo, NULL,
-                                                 &swapchain->pipeline_layout )))
+    if (swapchain->fsr)
     {
-        ERR( "vkCreatePipelineLayout: %d\n", res );
-        goto fail;
-    }
+        if ((res = create_pipeline( device, swapchain, fsr_easu_comp_spv, sizeof(fsr_easu_comp_spv),
+                                    16 * sizeof(uint32_t) /* 4 * uvec4 */, &swapchain->fsr_easu_pipeline )))
+            goto fail;
+        if ((res = create_pipeline( device, swapchain, fsr_rcas_comp_spv, sizeof(fsr_rcas_comp_spv),
+                                    8 * sizeof(uint32_t) /* uvec4 + ivec4 */, &swapchain->fsr_rcas_pipeline )))
+            goto fail;
 
-    shaderInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
-    shaderInfo.codeSize = sizeof(blit_comp_spv);
-    shaderInfo.pCode = blit_comp_spv;
+        /* create intermediate fsr images */
+        for (i = 0; i < swapchain->n_images; ++i)
+        {
+            struct fs_hack_image *hack = &swapchain->fs_hack_images[i];
+
+            imageInfo.sType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO;
+            imageInfo.imageType = VK_IMAGE_TYPE_2D;
+            imageInfo.extent.width = swapchain->host_extents.width;
+            imageInfo.extent.height = swapchain->host_extents.height;
+            imageInfo.extent.depth = 1;
+            imageInfo.mipLevels = 1;
+            imageInfo.arrayLayers = 1;
+            imageInfo.format = VK_FORMAT_A2B10G10R10_UNORM_PACK32;
+            imageInfo.tiling = VK_IMAGE_TILING_OPTIMAL;
+            imageInfo.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
+            imageInfo.usage = VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_SAMPLED_BIT;
+            imageInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
+            imageInfo.samples = VK_SAMPLE_COUNT_1_BIT;
+            if ((res = device->p_vkCreateImage( device->host.device, &imageInfo, NULL, &hack->fsr_image )))
+            {
+                ERR("vkCreateImage failed: %d\n", res);
+                goto fail;
+            }
 
-    if ((res = device->p_vkCreateShaderModule( device->host.device, &shaderInfo, NULL, &shaderModule )))
-    {
-        ERR( "vkCreateShaderModule: %d\n", res );
-        goto fail;
-    }
+            device->p_vkGetImageMemoryRequirements(device->host.device, hack->fsr_image, &fsrMemReq);
+
+            offs = fsrMemTotal % fsrMemReq.alignment;
+            if(offs) fsrMemTotal += fsrMemReq.alignment - offs;
+
+            fsrMemTotal += fsrMemReq.size;
+        }
+
+        /* allocate backing memory */
+        device->physical_device->instance->p_vkGetPhysicalDeviceMemoryProperties(device->physical_device->host.physical_device, &memProperties);
+
+        for (i = 0; i < memProperties.memoryTypeCount; i++)
+        {
+            if ((memProperties.memoryTypes[i].propertyFlags & VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT) == VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
+            {
+                if (fsrMemReq.memoryTypeBits & (1 << i))
+                {
+                    fsr_memory_type = i;
+                    break;
+                }
+            }
+        }
+
+        if (fsr_memory_type == -1)
+        {
+            ERR("unable to find suitable memory type\n");
+            res = VK_ERROR_OUT_OF_HOST_MEMORY;
+            goto fail;
+        }
+
+        allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
+        allocInfo.allocationSize = fsrMemTotal;
+        allocInfo.memoryTypeIndex = fsr_memory_type;
+
+        if ((res = device->p_vkAllocateMemory( device->host.device, &allocInfo, NULL, &swapchain->fsr_image_memory )))
+        {
+            ERR("vkAllocateMemory: %d\n", res);
+            goto fail;
+        }
+
+        /* bind backing memory and create imageviews */
+        fsrMemTotal = 0;
+        for (i = 0; i < swapchain->n_images; ++i)
+        {
+            struct fs_hack_image *hack = &swapchain->fs_hack_images[i];
+
+            device->p_vkGetImageMemoryRequirements(device->host.device, hack->fsr_image, &fsrMemReq);
 
-    if ((res = create_pipeline( device, swapchain, shaderModule ))) goto fail;
+            offs = fsrMemTotal % fsrMemReq.alignment;
+            if(offs) fsrMemTotal += fsrMemReq.alignment - offs;
+
+            if ((res = device->p_vkBindImageMemory( device->host.device, hack->fsr_image, swapchain->fsr_image_memory, fsrMemTotal )))
+            {
+                ERR("vkBindImageMemory: %d\n", res);
+                goto fail;
+            }
 
-    device->p_vkDestroyShaderModule( device->host.device, shaderModule, NULL );
+            fsrMemTotal += fsrMemReq.size;
+        }
+
+        /* create imageviews */
+        for (i = 0; i < swapchain->n_images; ++i)
+        {
+            struct fs_hack_image *hack = &swapchain->fs_hack_images[i];
+
+            viewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
+            viewInfo.image = hack->fsr_image;
+            viewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
+            viewInfo.format = VK_FORMAT_A2B10G10R10_UNORM_PACK32;
+            viewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
+            viewInfo.subresourceRange.baseMipLevel = 0;
+            viewInfo.subresourceRange.levelCount = 1;
+            viewInfo.subresourceRange.baseArrayLayer = 0;
+            viewInfo.subresourceRange.layerCount = 1;
+
+            if ((res = device->p_vkCreateImageView( device->host.device, &viewInfo, NULL, &hack->fsr_view )))
+            {
+                ERR("vkCreateImageView(blit): %d\n", res);
+                goto fail;
+            }
+        }
+    }
 
     for (i = 0; i < swapchain->n_images; ++i)
     {
@@ -631,14 +842,14 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
         viewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
         viewInfo.image = hack->swapchain_image;
         viewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
-        viewInfo.format = VK_FORMAT_B8G8R8A8_UNORM;
+        viewInfo.format = swapchain->fsr ? srgb_to_unorm(swapchain->format) : VK_FORMAT_B8G8R8A8_UNORM;
         viewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
         viewInfo.subresourceRange.baseMipLevel = 0;
         viewInfo.subresourceRange.levelCount = 1;
         viewInfo.subresourceRange.baseArrayLayer = 0;
         viewInfo.subresourceRange.layerCount = 1;
 
-        if ((res = device->p_vkCreateImageView( device->host.device, &viewInfo, NULL, &hack->blit_view )))
+        if ((res = device->p_vkCreateImageView( device->host.device, &viewInfo, NULL, &hack->swapchain_view )))
         {
             ERR( "vkCreateImageView(blit): %d\n", res );
             goto fail;
@@ -654,17 +865,19 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
     {
         struct fs_hack_image *hack = &swapchain->fs_hack_images[i];
 
-        device->p_vkDestroyImageView( device->host.device, hack->blit_view, NULL );
-        hack->blit_view = VK_NULL_HANDLE;
-    }
+        device->p_vkDestroyImageView(device->host.device, hack->fsr_view, NULL);
+        hack->fsr_view = VK_NULL_HANDLE;
 
-    device->p_vkDestroyShaderModule( device->host.device, shaderModule, NULL );
+        device->p_vkDestroyImageView(device->host.device, hack->swapchain_view, NULL);
+        hack->swapchain_view = VK_NULL_HANDLE;
 
-    device->p_vkDestroyPipeline( device->host.device, swapchain->pipeline, NULL );
-    swapchain->pipeline = VK_NULL_HANDLE;
+        device->p_vkDestroyImage(device->host.device, hack->fsr_image, NULL);
+        hack->fsr_image = VK_NULL_HANDLE;
+    }
 
-    device->p_vkDestroyPipelineLayout( device->host.device, swapchain->pipeline_layout, NULL );
-    swapchain->pipeline_layout = VK_NULL_HANDLE;
+    destroy_pipeline(device, &swapchain->blit_pipeline);
+    destroy_pipeline(device, &swapchain->fsr_easu_pipeline);
+    destroy_pipeline(device, &swapchain->fsr_rcas_pipeline);
 
     device->p_vkDestroyDescriptorSetLayout( device->host.device, swapchain->descriptor_set_layout, NULL );
     swapchain->descriptor_set_layout = VK_NULL_HANDLE;
@@ -672,6 +885,9 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
     device->p_vkDestroyDescriptorPool( device->host.device, swapchain->descriptor_pool, NULL );
     swapchain->descriptor_pool = VK_NULL_HANDLE;
 
+    device->p_vkFreeMemory( device->host.device, swapchain->fsr_image_memory, NULL );
+    swapchain->fsr_image_memory = VK_NULL_HANDLE;
+
     device->p_vkDestroySampler( device->host.device, swapchain->sampler, NULL );
     swapchain->sampler = VK_NULL_HANDLE;
 
@@ -681,8 +897,10 @@ static VkResult init_blit_images( struct vulkan_device *device, struct swapchain
 static void destroy_fs_hack_image( struct vulkan_device *device, struct swapchain *swapchain, struct fs_hack_image *hack )
 {
     device->p_vkDestroyImageView( device->host.device, hack->user_view, NULL );
-    device->p_vkDestroyImageView( device->host.device, hack->blit_view, NULL );
+    device->p_vkDestroyImageView(device->host.device, hack->swapchain_view, NULL);
+    device->p_vkDestroyImageView(device->host.device, hack->fsr_view, NULL);
     device->p_vkDestroyImage( device->host.device, hack->user_image, NULL );
+    device->p_vkDestroyImage(device->host.device, hack->fsr_image, NULL);
     if (hack->cmd) device->p_vkFreeCommandBuffers( device->host.device, swapchain->cmd_pools[hack->cmd_queue_idx], 1, &hack->cmd );
     device->p_vkDestroySemaphore( device->host.device, hack->blit_finished, NULL );
 }
@@ -750,6 +968,9 @@ static VkResult init_fs_hack_images( struct vulkan_device *device, struct swapch
         imageInfo.queueFamilyIndexCount = createinfo->queueFamilyIndexCount;
         imageInfo.pQueueFamilyIndices = createinfo->pQueueFamilyIndices;
 
+        if (is_srgb(createinfo->imageFormat))
+            imageInfo.flags |= VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT;
+
         if (createinfo->flags & VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR)
             imageInfo.flags |= VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT | VK_IMAGE_CREATE_EXTENDED_USAGE_BIT;
         else if (createinfo->imageFormat != VK_FORMAT_B8G8R8A8_SRGB)
@@ -825,7 +1046,7 @@ static VkResult init_fs_hack_images( struct vulkan_device *device, struct swapch
         viewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
         viewInfo.image = swapchain->fs_hack_images[i].user_image;
         viewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
-        viewInfo.format = VK_FORMAT_B8G8R8A8_SRGB;
+        viewInfo.format = swapchain->fsr ? srgb_to_unorm(createinfo->imageFormat) : VK_FORMAT_B8G8R8A8_SRGB;
         viewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
         viewInfo.subresourceRange.baseMipLevel = 0;
         viewInfo.subresourceRange.levelCount = 1;
@@ -919,11 +1140,21 @@ static VkResult win32u_vkCreateSwapchainKHR( VkDevice client_device, const VkSwa
         if (!(caps.supportedUsageFlags & VK_IMAGE_USAGE_STORAGE_BIT))
             FIXME( "Swapchain does not support required VK_IMAGE_USAGE_STORAGE_BIT\n" );
 
+        swapchain->fsr = fs_hack_is_fsr();
+        swapchain->sharpness = fs_hack_fsr_sharpness();
         swapchain->host_extents = capabilities.minImageExtent;
         create_info_host.imageExtent = capabilities.minImageExtent;
-        create_info_host.imageFormat = VK_FORMAT_B8G8R8A8_UNORM;
+        create_info_host.imageFormat = swapchain->fsr ? VK_FORMAT_B8G8R8A8_SRGB: VK_FORMAT_B8G8R8A8_UNORM;
         create_info_host.imageUsage = VK_IMAGE_USAGE_STORAGE_BIT;
 
+        swapchain->format = create_info_host.imageFormat;
+
+        if (swapchain->fsr) {
+            swapchain->format = srgb_to_unorm(swapchain->format);
+            create_info_host.imageFormat = srgb_to_unorm(create_info_host.imageFormat);
+            create_info_host.imageUsage |= VK_IMAGE_USAGE_TRANSFER_DST_BIT; /* XXX: check if supported by surface */
+        }
+
         if (create_info->imageFormat != VK_FORMAT_B8G8R8A8_UNORM && create_info->imageFormat != VK_FORMAT_B8G8R8A8_SRGB)
             FIXME( "swapchain image format is not BGRA8 UNORM/SRGB. Things may go badly. %d\n",
                    create_info_host.imageFormat );
@@ -951,7 +1182,7 @@ static VkResult win32u_vkCreateSwapchainKHR( VkDevice client_device, const VkSwa
             return res;
         }
 
-        if ((res = init_blit_images( device, swapchain )))
+        if ((res = init_compute_state(device, swapchain)))
         {
             ERR( "creating blit images failed: %d\n", res );
             device->p_vkDestroySwapchainKHR( device->host.device, swapchain->obj.host.swapchain, NULL );
@@ -990,12 +1221,14 @@ void win32u_vkDestroySwapchainKHR( VkDevice client_device, VkSwapchainKHR client
             device->p_vkDestroyCommandPool( device->host.device, swapchain->cmd_pools[i], NULL );
         }
 
-        device->p_vkDestroyPipeline( device->host.device, swapchain->pipeline, NULL );
-        device->p_vkDestroyPipelineLayout( device->host.device, swapchain->pipeline_layout, NULL );
+        destroy_pipeline(device, &swapchain->blit_pipeline);
+        destroy_pipeline(device, &swapchain->fsr_easu_pipeline);
+        destroy_pipeline(device, &swapchain->fsr_rcas_pipeline);
         device->p_vkDestroyDescriptorSetLayout( device->host.device, swapchain->descriptor_set_layout, NULL );
         device->p_vkDestroyDescriptorPool( device->host.device, swapchain->descriptor_pool, NULL );
         device->p_vkDestroySampler( device->host.device, swapchain->sampler, NULL );
         device->p_vkFreeMemory( device->host.device, swapchain->user_image_memory, NULL );
+        device->p_vkFreeMemory(device->host.device, swapchain->fsr_image_memory, NULL);
         free( swapchain->cmd_pools );
         free( swapchain->fs_hack_images );
     }
@@ -1128,6 +1361,31 @@ static VkCommandBuffer create_hack_cmd( struct vulkan_queue *queue, struct swapc
     return cmd;
 }
 
+static void bind_pipeline( struct vulkan_device *device, VkCommandBuffer cmd, struct fs_comp_pipeline *pipeline,
+                           VkDescriptorSet set, void *push_data )
+{
+    device->p_vkCmdBindPipeline(cmd, VK_PIPELINE_BIND_POINT_COMPUTE, pipeline->pipeline);
+
+    device->p_vkCmdBindDescriptorSets(cmd, VK_PIPELINE_BIND_POINT_COMPUTE,
+                                            pipeline->pipeline_layout, 0, 1, &set, 0, NULL);
+
+    device->p_vkCmdPushConstants(cmd, pipeline->pipeline_layout,
+                                       VK_SHADER_STAGE_COMPUTE_BIT, 0, pipeline->push_size, push_data);
+}
+
+static void init_barrier(VkImageMemoryBarrier *barrier)
+{
+    barrier->sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;
+    barrier->pNext = NULL;
+    barrier->srcQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
+    barrier->dstQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
+    barrier->subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
+    barrier->subresourceRange.baseMipLevel = 0;
+    barrier->subresourceRange.levelCount = 1;
+    barrier->subresourceRange.baseArrayLayer = 0;
+    barrier->subresourceRange.layerCount = 1;
+}
+
 static VkResult record_compute_cmd( struct vulkan_device *device, struct swapchain *swapchain, struct fs_hack_image *hack )
 {
     VkResult res;
@@ -1137,6 +1395,9 @@ static VkResult record_compute_cmd( struct vulkan_device *device, struct swapcha
 
     TRACE( "recording compute command\n" );
 
+    init_barrier(&barriers[0]);
+    init_barrier(&barriers[1]);
+
     beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
     beginInfo.flags = VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT;
 
@@ -1144,45 +1405,23 @@ static VkResult record_compute_cmd( struct vulkan_device *device, struct swapcha
 
     /* for the cs we run... */
     /* transition user image from PRESENT_SRC to SHADER_READ */
-    barriers[0].sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;
     barriers[0].oldLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
     barriers[0].newLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
-    barriers[0].srcQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
-    barriers[0].dstQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
     barriers[0].image = hack->user_image;
-    barriers[0].subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
-    barriers[0].subresourceRange.baseMipLevel = 0;
-    barriers[0].subresourceRange.levelCount = 1;
-    barriers[0].subresourceRange.baseArrayLayer = 0;
-    barriers[0].subresourceRange.layerCount = 1;
     barriers[0].srcAccessMask = 0;
     barriers[0].dstAccessMask = VK_ACCESS_SHADER_READ_BIT;
 
     /* storage image... */
     /* transition swapchain image from whatever to GENERAL */
-    barriers[1].sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;
     barriers[1].oldLayout = VK_IMAGE_LAYOUT_UNDEFINED;
     barriers[1].newLayout = VK_IMAGE_LAYOUT_GENERAL;
-    barriers[1].srcQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
-    barriers[1].dstQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
     barriers[1].image = hack->swapchain_image;
-    barriers[1].subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
-    barriers[1].subresourceRange.baseMipLevel = 0;
-    barriers[1].subresourceRange.levelCount = 1;
-    barriers[1].subresourceRange.baseArrayLayer = 0;
-    barriers[1].subresourceRange.layerCount = 1;
     barriers[1].srcAccessMask = 0;
     barriers[1].dstAccessMask = VK_ACCESS_SHADER_WRITE_BIT;
 
     device->p_vkCmdPipelineBarrier( hack->cmd, VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT, VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
                                     0, 0, NULL, 0, NULL, 2, barriers );
 
-    /* perform blit shader */
-    device->p_vkCmdBindPipeline( hack->cmd, VK_PIPELINE_BIND_POINT_COMPUTE, swapchain->pipeline );
-
-    device->p_vkCmdBindDescriptorSets( hack->cmd, VK_PIPELINE_BIND_POINT_COMPUTE,
-                                       swapchain->pipeline_layout, 0, 1, &hack->descriptor_set, 0, NULL );
-
     /* vec2: blit dst offset in real coords */
     constants[0] = 0;
     constants[1] = 0;
@@ -1194,40 +1433,23 @@ static VkResult record_compute_cmd( struct vulkan_device *device, struct swapcha
     /* vec2: blit dst extents in real coords */
     constants[2] = swapchain->host_extents.width;
     constants[3] = swapchain->host_extents.height;
-    device->p_vkCmdPushConstants( hack->cmd, swapchain->pipeline_layout,
-                                  VK_SHADER_STAGE_COMPUTE_BIT, 0, sizeof(constants), constants );
+    bind_pipeline(device, hack->cmd, &swapchain->blit_pipeline, hack->descriptor_set, constants);
 
     /* local sizes in shader are 8 */
     device->p_vkCmdDispatch( hack->cmd, ceil( swapchain->host_extents.width / 8. ),
                              ceil( swapchain->host_extents.height / 8. ), 1 );
 
     /* transition user image from SHADER_READ back to PRESENT_SRC */
-    barriers[0].sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;
     barriers[0].oldLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
     barriers[0].newLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
-    barriers[0].srcQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
-    barriers[0].dstQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
     barriers[0].image = hack->user_image;
-    barriers[0].subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
-    barriers[0].subresourceRange.baseMipLevel = 0;
-    barriers[0].subresourceRange.levelCount = 1;
-    barriers[0].subresourceRange.baseArrayLayer = 0;
-    barriers[0].subresourceRange.layerCount = 1;
     barriers[0].srcAccessMask = VK_ACCESS_SHADER_READ_BIT;
     barriers[0].dstAccessMask = 0;
 
     /* transition swapchain image from GENERAL to PRESENT_SRC */
-    barriers[1].sType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;
     barriers[1].oldLayout = VK_IMAGE_LAYOUT_GENERAL;
     barriers[1].newLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
-    barriers[1].srcQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
-    barriers[1].dstQueueFamilyIndex = VK_QUEUE_FAMILY_IGNORED;
     barriers[1].image = hack->swapchain_image;
-    barriers[1].subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
-    barriers[1].subresourceRange.baseMipLevel = 0;
-    barriers[1].subresourceRange.levelCount = 1;
-    barriers[1].subresourceRange.baseArrayLayer = 0;
-    barriers[1].subresourceRange.layerCount = 1;
     barriers[1].srcAccessMask = VK_ACCESS_SHADER_WRITE_BIT;
     barriers[1].dstAccessMask = 0;
 
@@ -1243,6 +1465,148 @@ static VkResult record_compute_cmd( struct vulkan_device *device, struct swapcha
     return VK_SUCCESS;
 }
 
+static VkResult record_fsr_cmd(struct vulkan_device *device, struct swapchain *swapchain, struct fs_hack_image *hack)
+{
+    VkImageMemoryBarrier barriers[3] = {{0}};
+    VkCommandBufferBeginInfo beginInfo = {0};
+    union
+    {
+        uint32_t uint[16];
+        float    fp[16];
+    } c;
+    VkResult result;
+
+    TRACE("recording compute command\n");
+
+    init_barrier(&barriers[0]);
+    init_barrier(&barriers[1]);
+    init_barrier(&barriers[2]);
+
+    beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
+    beginInfo.flags = VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT;
+
+    device->p_vkBeginCommandBuffer(hack->cmd, &beginInfo);
+
+    /* 1st pass (easu) */
+    /* transition user image from PRESENT_SRC to SHADER_READ */
+    barriers[0].oldLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
+    barriers[0].newLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
+    barriers[0].image = hack->user_image;
+    barriers[0].srcAccessMask = 0;
+    barriers[0].dstAccessMask = VK_ACCESS_SHADER_READ_BIT;
+
+    /* storage image... */
+    /* transition fsr image from whatever to GENERAL */
+    barriers[1].oldLayout = VK_IMAGE_LAYOUT_UNDEFINED;
+    barriers[1].newLayout = VK_IMAGE_LAYOUT_GENERAL;
+    barriers[1].image = hack->swapchain_image;
+    barriers[1].srcAccessMask = 0;
+    barriers[1].dstAccessMask = 0;
+
+    device->p_vkCmdPipelineBarrier( hack->cmd, VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT,
+                                    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT, 0, 0, NULL, 0, NULL, 2, barriers );
+
+    /* perform easu shader */
+
+    c.fp[0] = swapchain->extents.width * (1.0f / swapchain->host_extents.width);
+    c.fp[1] = swapchain->extents.height * (1.0f / swapchain->host_extents.height);
+    c.fp[2] = 0.5f * c.fp[0] - 0.5f;
+    c.fp[3] = 0.5f * c.fp[1] - 0.5f;
+    // Viewport pixel position to normalized image space.
+    // This is used to get upper-left of 'F' tap.
+    c.fp[4] = 1.0f / swapchain->extents.width;
+    c.fp[5] = 1.0f / swapchain->extents.height;
+    // Centers of gather4, first offset from upper-left of 'F'.
+    //      +---+---+
+    //      |   |   |
+    //      +--(0)--+
+    //      | b | c |
+    //  +---F---+---+---+
+    //  | e | f | g | h |
+    //  +--(1)--+--(2)--+
+    //  | i | j | k | l |
+    //  +---+---+---+---+
+    //      | n | o |
+    //      +--(3)--+
+    //      |   |   |
+    //      +---+---+
+    c.fp[6] =  1.0f * c.fp[4];
+    c.fp[7] = -1.0f * c.fp[5];
+    // These are from (0) instead of 'F'.
+    c.fp[8] = -1.0f * c.fp[4];
+    c.fp[9] =  2.0f * c.fp[5];
+    c.fp[10] =  1.0f * c.fp[4];
+    c.fp[11] =  2.0f * c.fp[5];
+    c.fp[12] =  0.0f * c.fp[4];
+    c.fp[13] =  4.0f * c.fp[5];
+    c.uint[14] = swapchain->host_extents.width;
+    c.uint[15] = swapchain->host_extents.height;
+
+    bind_pipeline(device, hack->cmd, &swapchain->fsr_easu_pipeline, hack->descriptor_set, c.uint);
+
+    /* local sizes in shader are 8 */
+    device->p_vkCmdDispatch(hack->cmd, ceil(swapchain->host_extents.width / 8.),
+            ceil(swapchain->host_extents.height / 8.), 1);
+
+    /* transition user image from SHADER_READ back to PRESENT_SRC */
+    barriers[0].oldLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
+    barriers[0].newLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
+    barriers[0].image = hack->user_image;
+    barriers[0].srcAccessMask = 0;
+    barriers[0].dstAccessMask = 0;
+
+    /* transition fsr image from GENERAL to SHADER_READ */
+    barriers[1].oldLayout = VK_IMAGE_LAYOUT_GENERAL;
+    barriers[1].newLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
+    barriers[1].image = hack->swapchain_image;
+    barriers[1].srcAccessMask = VK_ACCESS_SHADER_WRITE_BIT;
+    barriers[1].dstAccessMask = VK_ACCESS_SHADER_READ_BIT;
+
+    /* transition swapchain image from whatever to GENERAL */
+    barriers[2].oldLayout = VK_IMAGE_LAYOUT_UNDEFINED;
+    barriers[2].newLayout = VK_IMAGE_LAYOUT_GENERAL;
+    barriers[2].image = hack->swapchain_image;
+    barriers[2].srcAccessMask = 0;
+    barriers[2].dstAccessMask = 0;
+
+    device->p_vkCmdPipelineBarrier(hack->cmd, VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
+                                         VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT, 0, 0, NULL, 0, NULL, 3, barriers);
+
+    /* 2nd pass (rcas) */
+
+    c.fp[0] = exp2f(-swapchain->sharpness);
+    c.uint[2] = swapchain->host_extents.width;
+    c.uint[3] = swapchain->host_extents.height;
+    c.uint[4] = 0;
+    c.uint[5] = 0;
+    c.uint[6] = 0 + swapchain->host_extents.width;
+    c.uint[7] = 0 + swapchain->host_extents.height;
+
+    bind_pipeline(device, hack->cmd, &swapchain->fsr_rcas_pipeline, hack->fsr_set, c.uint);
+
+    /* local sizes in shader are 8 */
+    device->p_vkCmdDispatch(hack->cmd, ceil(swapchain->host_extents.width / 8.),
+            ceil(swapchain->host_extents.height / 8.), 1);
+
+    /* transition swapchain image from GENERAL to PRESENT_SRC */
+    barriers[0].oldLayout = VK_IMAGE_LAYOUT_GENERAL;
+    barriers[0].newLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;
+    barriers[0].image = hack->swapchain_image;
+    barriers[0].srcAccessMask = VK_ACCESS_SHADER_WRITE_BIT;
+    barriers[0].dstAccessMask = 0;
+
+    device->p_vkCmdPipelineBarrier(hack->cmd, VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
+                                         VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT, 0, 0, NULL, 0, NULL, 1, barriers);
+
+    result = device->p_vkEndCommandBuffer(hack->cmd);
+    if (result != VK_SUCCESS)
+    {
+        ERR("vkEndCommandBuffer: %d\n", result);
+        return result;
+    }
+
+    return VK_SUCCESS;
+}
 
 #define win32u_vk_find_struct(s, t) win32u_vk_find_struct_((void *)s, VK_STRUCTURE_TYPE_##t)
 static void *win32u_vk_find_struct_(void *s, VkStructureType t)
@@ -1341,7 +1705,7 @@ static VkResult win32u_vkQueuePresentKHR( VkQueue client_queue, const VkPresentI
                 }
 
                 if (queue->device->queue_props[queue_idx].queueFlags & VK_QUEUE_COMPUTE_BIT) /* TODO */
-                    res = record_compute_cmd( queue->device, swapchain, hack );
+                    res = swapchain->fsr ? record_fsr_cmd(queue->device, swapchain, hack) : record_compute_cmd(queue->device, swapchain, hack);
                 else
                 {
                     ERR( "Present queue does not support compute!\n" );
diff --git a/dlls/win32u/win32u_private.h b/dlls/win32u/win32u_private.h
index f9b812ff70c..a613f1d39a9 100644
--- a/dlls/win32u/win32u_private.h
+++ b/dlls/win32u/win32u_private.h
@@ -201,6 +201,7 @@ extern void reset_monitor_update_serial(void);
 extern void user_lock(void);
 extern void user_unlock(void);
 extern void user_check_not_lock(void);
+extern BOOL fs_hack_is_fsr(void);
 
 struct vulkan_gpu
 {

From a6d478b55343eb35e9d6412a8e06d4b737c97abc Mon Sep 17 00:00:00 2001
From: Stelios Tsampas <loathingkernel@gmail.com>
Date: Thu, 8 May 2025 13:28:58 +0300
Subject: [PATCH 16/21] Revert "win32u: [GAMEFIX] Fix xinput support for Dragon
 Age Inquisition"

This reverts commit 0d5e3fabcf67e90e879a48fbb2b35ec07f12555b.
---
 dlls/win32u/input.c | 58 +--------------------------------------------
 1 file changed, 1 insertion(+), 57 deletions(-)

diff --git a/dlls/win32u/input.c b/dlls/win32u/input.c
index 24f2d40e31d..97e651a7ce5 100644
--- a/dlls/win32u/input.c
+++ b/dlls/win32u/input.c
@@ -30,8 +30,6 @@
 #pragma makedep unix
 #endif
 
-#include <sys/prctl.h>
-#include <string.h>
 #include "ntstatus.h"
 #define WIN32_NO_STATUS
 #include "win32u_private.h"
@@ -583,32 +581,12 @@ HWND get_capture(void)
     return NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndCapture : 0;
 }
 
-static int is_DragonAgeInquis = -1;
-
 /* see GetFocus */
 HWND get_focus(void)
 {
     GUITHREADINFO info;
-    HWND retValueWindow;
-    static HWND prev = 0;
-    const char *sgi;
-    
     info.cbSize = sizeof(info);
-    retValueWindow = NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndFocus : 0;
-
-    if (is_DragonAgeInquis)
-    {
-        if ((is_DragonAgeInquis == 1) ||
-            (is_DragonAgeInquis = ((sgi = getenv("SteamGameId")) && !strcmp(sgi, "1222690"))))
-        {
-            if (retValueWindow == 0 && prev != 0)
-                NtUserAttachThreadInput(0, 0, 1);
-            else
-                prev = retValueWindow;
-        }
-    }
-
-    return retValueWindow;
+    return NtUserGetGUIThreadInfo( GetCurrentThreadId(), &info ) ? info.hwndFocus : 0;
 }
 
 /**********************************************************************
@@ -617,40 +595,6 @@ HWND get_focus(void)
 BOOL WINAPI NtUserAttachThreadInput( DWORD from, DWORD to, BOOL attach )
 {
     BOOL ret;
-    static int visited = 0;
-    static DWORD fromThreadForHack = 0;
-    static DWORD toThreadForHack = 0;
-    static char processNameForHack[16];
-    static const char* DAIprocessName = "DragonAgeInquis";
-    static const char* DAIGameLoopName = "GameLoop";
-    const char *sgi;
-
-    if (is_DragonAgeInquis)
-    {
-        if ((is_DragonAgeInquis == 1) ||
-            (is_DragonAgeInquis = ((sgi = getenv("SteamGameId")) && !strcmp(sgi, "1222690"))))
-        {
-            prctl(PR_GET_NAME, processNameForHack);
-            TRACE("Process Name: %s\n", processNameForHack);
-            if (strncmp(DAIprocessName, processNameForHack, 15) == 0 || strncmp(DAIGameLoopName, processNameForHack, 8) == 0)
-            {
-                if (!visited)
-                {
-                    TRACE("First Visit Process Name: %s\n", processNameForHack);
-                    fromThreadForHack = from;
-                    toThreadForHack = to;
-                    visited = 1;
-                }
-
-                if (from == 0 && to == 0 && visited)
-                {
-                    TRACE("00 Process Name: %s\n", processNameForHack);
-                    from = fromThreadForHack;
-                    to = toThreadForHack;
-                }
-            }
-        }
-    }
 
     SERVER_START_REQ( attach_thread_input )
     {

From 0b0987f20abb205ff1c9ca74cc2a0a37ba2a93b5 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Fri, 9 May 2025 08:38:26 -0400
Subject: [PATCH 17/21] amdxc64: Add amdxc implementation

---
 configure.ac                      |   1 +
 dlls/amdxc64/Makefile.in          |  10 +
 dlls/amdxc64/amdxc64.spec         | 315 +++++++++++++++++++++++++++++
 dlls/amdxc64/amdxc_interfaces.idl |  96 +++++++++
 dlls/amdxc64/dxvk_interfaces.idl  | 153 ++++++++++++++
 dlls/amdxc64/main.c               | 319 ++++++++++++++++++++++++++++++
 6 files changed, 894 insertions(+)
 create mode 100644 dlls/amdxc64/Makefile.in
 create mode 100644 dlls/amdxc64/amdxc64.spec
 create mode 100644 dlls/amdxc64/amdxc_interfaces.idl
 create mode 100644 dlls/amdxc64/dxvk_interfaces.idl
 create mode 100644 dlls/amdxc64/main.c

diff --git a/configure.ac b/configure.ac
index b3a7c6cace2..5bfe0aaa80a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2456,6 +2456,7 @@ WINE_CONFIG_MAKEFILE(dlls/advpack)
 WINE_CONFIG_MAKEFILE(dlls/advpack/tests)
 WINE_CONFIG_MAKEFILE(dlls/amsi)
 WINE_CONFIG_MAKEFILE(dlls/amd_ags_x64)
+WINE_CONFIG_MAKEFILE(dlls/amdxc64)
 WINE_CONFIG_MAKEFILE(dlls/amstream)
 WINE_CONFIG_MAKEFILE(dlls/amstream/tests)
 WINE_CONFIG_MAKEFILE(dlls/apisetschema)
diff --git a/dlls/amdxc64/Makefile.in b/dlls/amdxc64/Makefile.in
new file mode 100644
index 00000000000..999a7d043e1
--- /dev/null
+++ b/dlls/amdxc64/Makefile.in
@@ -0,0 +1,10 @@
+MODULE = amdxc64.dll
+IMPORTS = version vulkan-1 user32 gdi32
+IMPORTLIB = amdxc64
+
+EXTRADLLFLAGS = -mno-cygwin
+
+SOURCES = \
+	main.c \
+	dxvk_interfaces.idl \
+	amdxc_interfaces.idl \
diff --git a/dlls/amdxc64/amdxc64.spec b/dlls/amdxc64/amdxc64.spec
new file mode 100644
index 00000000000..2daa1ddbc94
--- /dev/null
+++ b/dlls/amdxc64/amdxc64.spec
@@ -0,0 +1,315 @@
+1 stub ??0?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@boost@@QEAA@XZ
+2 stub ??0?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@boost@@QEAA@XZ
+3 stub ??0?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@boost@@QEAA@XZ
+4 stub ??0?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@boost@@QEAA@XZ
+5 stub ??0?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@boost@@QEAA@XZ
+6 stub ??0?$oserializer@Vsc_xml_oarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@boost@@QEAA@XZ
+7 stub ??0?$oserializer@Vsc_xml_oarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@boost@@QEAA@XZ
+8 stub ??0?$oserializer@Vsc_xml_oarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@boost@@QEAA@XZ
+9 stub ??0?$oserializer@Vsc_xml_oarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@boost@@QEAA@XZ
+10 stub ??0?$oserializer@Vsc_xml_oarchive@@USC_INPUT@@@detail@archive@boost@@QEAA@XZ
+11 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@boost@@QEAA@XZ
+12 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@boost@@QEAA@XZ
+13 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@boost@@QEAA@XZ
+14 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@boost@@QEAA@XZ
+15 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@boost@@QEAA@XZ
+16 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CBCONSTVALUES@@@detail@archive@boost@@QEAA@XZ
+17 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@boost@@QEAA@XZ
+18 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@boost@@QEAA@XZ
+19 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@boost@@QEAA@XZ
+20 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_CPS_CONFIG@@@detail@archive@boost@@QEAA@XZ
+21 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_FLOAT_CONST@@@detail@archive@boost@@QEAA@XZ
+22 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_INT_CONST@@@detail@archive@boost@@QEAA@XZ
+23 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@boost@@QEAA@XZ
+24 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@boost@@QEAA@XZ
+25 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@boost@@QEAA@XZ
+26 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@boost@@QEAA@XZ
+27 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SHADERSTATE@@@detail@archive@boost@@QEAA@XZ
+28 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@boost@@QEAA@XZ
+29 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@boost@@QEAA@XZ
+30 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@boost@@QEAA@XZ
+31 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@boost@@QEAA@XZ
+32 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@boost@@QEAA@XZ
+33 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@QEAA@XZ
+34 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@boost@@QEAA@XZ
+35 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@boost@@QEAA@XZ
+36 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@QEAA@XZ
+37 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@QEAA@XZ
+38 stub ??0?$oserializer@Vsc_xml_oarchive@@U_SC_TXCONSTVALUES@@@detail@archive@boost@@QEAA@XZ
+39 stub ??0?$oserializer@Vsc_xml_oarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@QEAA@XZ
+40 stub ??0?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+41 stub ??0?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+42 stub ??0?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_NPI_DISABLE@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+43 stub ??0?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+44 stub ??0?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+45 stub ??0?$singleton@V?$extended_type_info_typeid@T_SC_COMPILE_FLAGS@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+46 stub ??0?$singleton@V?$extended_type_info_typeid@T_SC_LAUNCH_MODE_FLAGS@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+47 stub ??0?$singleton@V?$extended_type_info_typeid@T_SC_SI_GLC_CONTROL@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+48 stub ??0?$singleton@V?$extended_type_info_typeid@T_SC_SI_SLC_CONTROL@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+49 stub ??0?$singleton@V?$extended_type_info_typeid@USC_INPUT@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+50 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY@serialization@boost@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+51 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_ATOMIC@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+52 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_CONTROL@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+53 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_READ@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+54 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_WRITE@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+55 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CBCONSTVALUES@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+56 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CBRCONSTVALUES@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+57 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CI_TRANSFORM_SHADER_DESC@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+58 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CONSTANTUSAGE@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+59 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_CPS_CONFIG@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+60 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_FLOAT_CONST@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+61 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_INT_CONST@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+62 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+63 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_PRIMSHADER_CONTROL_FLAGS@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+64 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+65 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_PS_EXPORT_INFO@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+66 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SHADERSTATE@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+67 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_DATA_IN_OUT@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+68 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_DESCRIPTOR_VALUES@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+69 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_OPTIMIZATIONS@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+70 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_PSSHADERDCL_IN@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+71 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_PS_ATTR_CH_ENTRY@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+72 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_SHADERSTATE@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+73 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_STREAMIODCL_OUT@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+74 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SI_USER_DATA_ELEMENT@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+75 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SRCSHADER@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+76 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_SRC_PIPELINE@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+77 stub ??0?$singleton@V?$extended_type_info_typeid@U_SC_TXCONSTVALUES@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+78 stub ??0?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@IEAA@XZ
+79 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@23@XZ
+80 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@23@XZ
+81 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_NPI_DISABLE@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_E_SC_SI_OPT_NPI_DISABLE@@@23@XZ
+82 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@23@XZ
+83 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@23@XZ
+84 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_SC_COMPILE_FLAGS@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_SC_COMPILE_FLAGS@@@23@XZ
+85 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_SC_LAUNCH_MODE_FLAGS@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_SC_LAUNCH_MODE_FLAGS@@@23@XZ
+86 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_SC_SI_GLC_CONTROL@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_SC_SI_GLC_CONTROL@@@23@XZ
+87 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@T_SC_SI_SLC_CONTROL@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@T_SC_SI_SLC_CONTROL@@@23@XZ
+88 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@USC_INPUT@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@USC_INPUT@@@23@XZ
+89 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY@serialization@boost@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CACHE_POLICY@serialization@boost@@@23@XZ
+90 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_ATOMIC@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CACHE_POLICY_ATOMIC@@@23@XZ
+91 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_CONTROL@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CACHE_POLICY_CONTROL@@@23@XZ
+92 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_READ@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CACHE_POLICY_READ@@@23@XZ
+93 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CACHE_POLICY_WRITE@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CACHE_POLICY_WRITE@@@23@XZ
+94 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CBCONSTVALUES@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CBCONSTVALUES@@@23@XZ
+95 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CBRCONSTVALUES@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CBRCONSTVALUES@@@23@XZ
+96 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CI_TRANSFORM_SHADER_DESC@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CI_TRANSFORM_SHADER_DESC@@@23@XZ
+97 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CONSTANTUSAGE@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CONSTANTUSAGE@@@23@XZ
+98 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_CPS_CONFIG@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_CPS_CONFIG@@@23@XZ
+99 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_FLOAT_CONST@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_FLOAT_CONST@@@23@XZ
+100 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_INT_CONST@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_INT_CONST@@@23@XZ
+101 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@23@XZ
+102 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_PRIMSHADER_CONTROL_FLAGS@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_PRIMSHADER_CONTROL_FLAGS@@@23@XZ
+103 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@23@XZ
+104 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_PS_EXPORT_INFO@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_PS_EXPORT_INFO@@@23@XZ
+105 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SHADERSTATE@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SHADERSTATE@@@23@XZ
+106 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_DATA_IN_OUT@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_DATA_IN_OUT@@@23@XZ
+107 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_DESCRIPTOR_VALUES@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_DESCRIPTOR_VALUES@@@23@XZ
+108 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_OPTIMIZATIONS@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_OPTIMIZATIONS@@@23@XZ
+109 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_PSSHADERDCL_IN@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_PSSHADERDCL_IN@@@23@XZ
+110 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_PS_ATTR_CH_ENTRY@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_PS_ATTR_CH_ENTRY@@@23@XZ
+111 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_SHADERSTATE@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_SHADERSTATE@@@23@XZ
+112 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_STREAMIODCL_OUT@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_STREAMIODCL_OUT@@@23@XZ
+113 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SI_USER_DATA_ELEMENT@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SI_USER_DATA_ELEMENT@@@23@XZ
+114 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SRCSHADER@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SRCSHADER@@@23@XZ
+115 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_SRC_PIPELINE@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_SRC_PIPELINE@@@23@XZ
+116 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@U_SC_TXCONSTVALUES@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@U_SC_TXCONSTVALUES@@@23@XZ
+117 stub ?get_const_instance@?$singleton@V?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@serialization@boost@@@serialization@boost@@SAAEBV?$extended_type_info_typeid@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@23@XZ
+118 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@3@XZ
+119 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@3@XZ
+120 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@3@XZ
+121 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@3@XZ
+122 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@3@XZ
+123 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@3@XZ
+124 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@3@XZ
+125 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@3@XZ
+126 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@3@XZ
+127 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@USC_INPUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@USC_INPUT@@@detail@archive@3@XZ
+128 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@3@XZ
+129 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@3@XZ
+130 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@3@XZ
+131 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@3@XZ
+132 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@3@XZ
+133 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CBCONSTVALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CBCONSTVALUES@@@detail@archive@3@XZ
+134 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@3@XZ
+135 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@3@XZ
+136 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@3@XZ
+137 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_CPS_CONFIG@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_CPS_CONFIG@@@detail@archive@3@XZ
+138 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_FLOAT_CONST@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_FLOAT_CONST@@@detail@archive@3@XZ
+139 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_INT_CONST@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_INT_CONST@@@detail@archive@3@XZ
+140 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@3@XZ
+141 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@3@XZ
+142 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@3@XZ
+143 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@3@XZ
+144 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SHADERSTATE@@@detail@archive@3@XZ
+145 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@3@XZ
+146 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@3@XZ
+147 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@3@XZ
+148 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@3@XZ
+149 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@3@XZ
+150 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@3@XZ
+151 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@3@XZ
+152 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@3@XZ
+153 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@3@XZ
+154 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@3@XZ
+155 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_TXCONSTVALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@U_SC_TXCONSTVALUES@@@detail@archive@3@XZ
+156 stub ?get_const_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$iserializer@Vsc_xml_iarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
+157 stub ?get_const_instance@?$singleton@V?$map@Vsc_xml_iarchive@@@extra_detail@detail@archive@boost@@@serialization@boost@@SAAEBV?$map@Vsc_xml_iarchive@@@extra_detail@detail@archive@3@XZ
+158 stub ?get_const_instance@?$singleton@V?$multiset@PEBVextended_type_info@serialization@boost@@Ukey_compare@detail@23@V?$allocator@PEBVextended_type_info@serialization@boost@@@std@@@std@@@serialization@boost@@SAAEBV?$multiset@PEBVextended_type_info@serialization@boost@@Ukey_compare@detail@23@V?$allocator@PEBVextended_type_info@serialization@boost@@@std@@@std@@XZ
+159 stub ?get_const_instance@?$singleton@V?$multiset@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@Utype_compare@234@V?$allocator@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@@std@@@std@@@serialization@boost@@SAAEBV?$multiset@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@Utype_compare@234@V?$allocator@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@@std@@@std@@XZ
+160 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@3@XZ
+161 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@3@XZ
+162 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@3@XZ
+163 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@3@XZ
+164 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@3@XZ
+165 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@3@XZ
+166 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@3@XZ
+167 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@3@XZ
+168 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@3@XZ
+169 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@USC_INPUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@USC_INPUT@@@detail@archive@3@XZ
+170 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@3@XZ
+171 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@3@XZ
+172 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@3@XZ
+173 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@3@XZ
+174 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@3@XZ
+175 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CBCONSTVALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CBCONSTVALUES@@@detail@archive@3@XZ
+176 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@3@XZ
+177 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@3@XZ
+178 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@3@XZ
+179 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_CPS_CONFIG@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_CPS_CONFIG@@@detail@archive@3@XZ
+180 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_FLOAT_CONST@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_FLOAT_CONST@@@detail@archive@3@XZ
+181 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_INT_CONST@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_INT_CONST@@@detail@archive@3@XZ
+182 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@3@XZ
+183 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@3@XZ
+184 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@3@XZ
+185 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@3@XZ
+186 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SHADERSTATE@@@detail@archive@3@XZ
+187 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@3@XZ
+188 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@3@XZ
+189 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@3@XZ
+190 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@3@XZ
+191 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@3@XZ
+192 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@3@XZ
+193 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@3@XZ
+194 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@3@XZ
+195 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@3@XZ
+196 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@3@XZ
+197 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_TXCONSTVALUES@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@U_SC_TXCONSTVALUES@@@detail@archive@3@XZ
+198 stub ?get_const_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$oserializer@Vsc_xml_oarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@3@XZ
+199 stub ?get_const_instance@?$singleton@V?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@3@XZ
+200 stub ?get_const_instance@?$singleton@V?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@3@XZ
+201 stub ?get_const_instance@?$singleton@V?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@3@XZ
+202 stub ?get_const_instance@?$singleton@V?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@3@XZ
+203 stub ?get_const_instance@?$singleton@V?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@3@XZ
+204 stub ?get_const_instance@?$singleton@V?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@@serialization@boost@@SAAEBV?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@3@XZ
+205 stub ?get_const_instance@?$singleton@V?$set@PEBVvoid_caster@void_cast_detail@serialization@boost@@Uvoid_caster_compare@234@V?$allocator@PEBVvoid_caster@void_cast_detail@serialization@boost@@@std@@@std@@@serialization@boost@@SAAEBV?$set@PEBVvoid_caster@void_cast_detail@serialization@boost@@Uvoid_caster_compare@234@V?$allocator@PEBVvoid_caster@void_cast_detail@serialization@boost@@@std@@@std@@XZ
+206 stub ?get_lock@singleton_module@serialization@boost@@AEAAAEA_NXZ
+207 stub ?get_mutable_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEAV?$iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@3@XZ
+208 stub ?get_mutable_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@@serialization@boost@@SAAEAV?$iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@3@XZ
+209 stub ?get_mutable_instance@?$singleton@V?$iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@@serialization@boost@@SAAEAV?$iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@3@XZ
+210 stub ?get_mutable_instance@?$singleton@V?$map@Vsc_xml_iarchive@@@extra_detail@detail@archive@boost@@@serialization@boost@@SAAEAV?$map@Vsc_xml_iarchive@@@extra_detail@detail@archive@3@XZ
+211 stub ?get_mutable_instance@?$singleton@V?$map@Vsc_xml_oarchive@@@extra_detail@detail@archive@boost@@@serialization@boost@@SAAEAV?$map@Vsc_xml_oarchive@@@extra_detail@detail@archive@3@XZ
+212 stub ?get_mutable_instance@?$singleton@V?$multiset@PEBVextended_type_info@serialization@boost@@Ukey_compare@detail@23@V?$allocator@PEBVextended_type_info@serialization@boost@@@std@@@std@@@serialization@boost@@SAAEAV?$multiset@PEBVextended_type_info@serialization@boost@@Ukey_compare@detail@23@V?$allocator@PEBVextended_type_info@serialization@boost@@@std@@@std@@XZ
+213 stub ?get_mutable_instance@?$singleton@V?$multiset@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@Utype_compare@234@V?$allocator@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@@std@@@std@@@serialization@boost@@SAAEAV?$multiset@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@Utype_compare@234@V?$allocator@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@@std@@@std@@XZ
+214 stub ?get_mutable_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@@serialization@boost@@SAAEAV?$oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@3@XZ
+215 stub ?get_mutable_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@@serialization@boost@@SAAEAV?$oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@3@XZ
+216 stub ?get_mutable_instance@?$singleton@V?$oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@@serialization@boost@@SAAEAV?$oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@3@XZ
+217 stub ?get_mutable_instance@?$singleton@V?$set@PEBVvoid_caster@void_cast_detail@serialization@boost@@Uvoid_caster_compare@234@V?$allocator@PEBVvoid_caster@void_cast_detail@serialization@boost@@@std@@@std@@@serialization@boost@@SAAEAV?$set@PEBVvoid_caster@void_cast_detail@serialization@boost@@Uvoid_caster_compare@234@V?$allocator@PEBVvoid_caster@void_cast_detail@serialization@boost@@@std@@@std@@XZ
+218 stub ?is_destroyed@?$singleton@V?$map@Vsc_xml_iarchive@@@extra_detail@detail@archive@boost@@@serialization@boost@@SA_NXZ
+219 stub ?is_destroyed@?$singleton@V?$map@Vsc_xml_oarchive@@@extra_detail@detail@archive@boost@@@serialization@boost@@SA_NXZ
+220 stub ?is_destroyed@?$singleton@V?$multiset@PEBVextended_type_info@serialization@boost@@Ukey_compare@detail@23@V?$allocator@PEBVextended_type_info@serialization@boost@@@std@@@std@@@serialization@boost@@SA_NXZ
+221 stub ?is_destroyed@?$singleton@V?$multiset@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@Utype_compare@234@V?$allocator@PEBVextended_type_info_typeid_0@typeid_system@serialization@boost@@@std@@@std@@@serialization@boost@@SA_NXZ
+222 stub ?is_destroyed@?$singleton@V?$set@PEBVvoid_caster@void_cast_detail@serialization@boost@@Uvoid_caster_compare@234@V?$allocator@PEBVvoid_caster@void_cast_detail@serialization@boost@@@std@@@std@@@serialization@boost@@SA_NXZ
+223 stub ?is_locked@singleton_module@serialization@boost@@QEAA_NXZ
+224 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+225 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+226 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+227 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+228 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+229 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+230 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+231 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+232 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+233 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@USC_INPUT@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+234 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+235 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+236 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+237 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+238 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+239 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CBCONSTVALUES@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+240 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+241 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+242 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+243 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_CPS_CONFIG@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+244 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_FLOAT_CONST@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+245 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_INT_CONST@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+246 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+247 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+248 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+249 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+250 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SHADERSTATE@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+251 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+252 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+253 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+254 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+255 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+256 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+257 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+258 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+259 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+260 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+261 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@U_SC_TXCONSTVALUES@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+262 stub ?load_object_data@?$iserializer@Vsc_xml_iarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UEBAXAEAVbasic_iarchive@234@PEAXI@Z
+263 stub ?load_object_ptr@?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@EEBAXAEAVbasic_iarchive@234@PEAXI@Z
+264 stub ?load_object_ptr@?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@EEBAXAEAVbasic_iarchive@234@PEAXI@Z
+265 stub ?load_object_ptr@?$pointer_iserializer@Vsc_xml_iarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@EEBAXAEAVbasic_iarchive@234@PEAXI@Z
+266 stub ?lock@?1??get_lock@singleton_module@serialization@boost@@AEAAAEA_NXZ@4_NA
+267 stub ?lock@singleton_module@serialization@boost@@QEAAXXZ
+268 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_IR_MODE_SELECTOR@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+269 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_MINIMIZE_VGPRS_STRATEGY@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+270 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_NPI_DISABLE@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+271 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_THREAD_LATENCY_STRATEGY@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+272 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_E_SC_SI_OPT_USE_MORE_D16_SELECTOR@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+273 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_SC_COMPILE_FLAGS@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+274 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_SC_LAUNCH_MODE_FLAGS@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+275 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_SC_SI_GLC_CONTROL@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+276 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@T_SC_SI_SLC_CONTROL@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+277 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@USC_INPUT@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+278 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY@serialization@boost@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+279 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_ATOMIC@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+280 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_CONTROL@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+281 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_READ@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+282 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CACHE_POLICY_WRITE@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+283 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CBCONSTVALUES@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+284 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CBRCONSTVALUES@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+285 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CI_TRANSFORM_SHADER_DESC@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+286 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CONSTANTUSAGE@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+287 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_CPS_CONFIG@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+288 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_FLOAT_CONST@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+289 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_INT_CONST@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+290 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CB_OFFSET_LUT@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+291 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_CONTROL_FLAGS@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+292 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_PRIMSHADER_VPORT_CONTROLS_LUT@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+293 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_PS_EXPORT_INFO@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+294 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SHADERSTATE@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+295 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DATA_IN_OUT@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+296 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_DESCRIPTOR_VALUES@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+297 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_OPTIMIZATIONS@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+298 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PSSHADERDCL_IN@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+299 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_PS_ATTR_CH_ENTRY@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+300 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+301 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_STREAMIODCL_OUT@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+302 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SI_USER_DATA_ELEMENT@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+303 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+304 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+305 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@U_SC_TXCONSTVALUES@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+306 stub ?save_object_data@?$oserializer@Vsc_xml_oarchive@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@detail@archive@boost@@UEBAXAEAVbasic_oarchive@234@PEBX@Z
+307 stub ?save_object_ptr@?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SI_SHADERSTATE@@@detail@archive@boost@@EEBAXAEAVbasic_oarchive@234@PEBX@Z
+308 stub ?save_object_ptr@?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SRCSHADER@@@detail@archive@boost@@EEBAXAEAVbasic_oarchive@234@PEBX@Z
+309 stub ?save_object_ptr@?$pointer_oserializer@Vsc_xml_oarchive@@U_SC_SRC_PIPELINE@@@detail@archive@boost@@EEBAXAEAVbasic_oarchive@234@PEBX@Z
+310 stub ?unlock@singleton_module@serialization@boost@@QEAAXXZ
+@ cdecl AmdExtD3DCreateInterface(ptr ptr ptr)
+@ stdcall AmdGetDxcModuleHandle()
+313 stub GetSettingsBlobsAll
+314 stub OpenAdapter12
+315 stub OpenShimInterface
diff --git a/dlls/amdxc64/amdxc_interfaces.idl b/dlls/amdxc64/amdxc_interfaces.idl
new file mode 100644
index 00000000000..2c2f568df37
--- /dev/null
+++ b/dlls/amdxc64/amdxc_interfaces.idl
@@ -0,0 +1,96 @@
+/*
+ * Copyright 2025 Etaash Mathamsetty
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+#pragma makedep register
+
+import "wtypes.idl";
+import "unknwn.idl";
+
+/* Structure version 1 for Anti-Lag 2.0: */
+struct APIData_v1
+{
+    unsigned int    uiSize;
+    unsigned int    uiVersion;
+    unsigned int    eMode;
+    const char*     sControlStr;
+    unsigned int    uiControlStrLength;
+    unsigned int    maxFPS;
+};
+
+/* Structure version 2 for Anti-Lag 2.0: */
+struct APIData_v2
+{
+    unsigned int    uiSize;
+    unsigned int    uiVersion;
+    struct Flags
+    {
+        unsigned int unused0               : 1;
+        unsigned int unused1               : 1;
+
+        unsigned int signalFgFrameType     : 1;
+        unsigned int isInterpolatedFrame   : 1;
+
+        unsigned int signalGetUserInputIdx : 1;
+        unsigned int signalEndOfFrameIdx   : 1;
+
+        unsigned int reserved              :26;
+    }               flags;
+    unsigned __int64    iiFrameIdx;
+    unsigned __int64    uiiReserved[19];
+};
+
+[
+    object,
+    uuid(b58d6601-7401-4234-8180-6febfc0e484c),
+    local
+]
+interface IAmdExtFfxApi : IUnknown
+{
+    HRESULT UpdateFfxApiProvider([in, out] void* pData, [in] unsigned int dataSizeInBytes);
+}
+
+[
+    object,
+    uuid(44085fbe-e839-40c5-bf38-0ebc5ab4d0a6),
+    local
+]
+interface IAmdExtAntiLagApi : IUnknown
+{
+    HRESULT UpdateAntiLagState([in, out] void* pData);
+}
+
+[
+    object,
+    uuid(014937ec-9288-446f-a9ac-d75a8e3a984f),
+    local
+]
+interface IAmdExtStub1 : IUnknown
+{
+    HRESULT QueryInterface2([in, out] void* unk, [in] REFIID iid, [in, out] void** out);
+}
+
+[
+    object,
+    uuid(ba019d53-ccab-4cbd-b56a-7230ed4330ad),
+    local
+]
+interface IAmdExtStub2 : IUnknown
+{
+    void stub();
+    void stub2([in] unsigned int unk);
+    void stub3();
+}
diff --git a/dlls/amdxc64/dxvk_interfaces.idl b/dlls/amdxc64/dxvk_interfaces.idl
new file mode 100644
index 00000000000..9e405a32a06
--- /dev/null
+++ b/dlls/amdxc64/dxvk_interfaces.idl
@@ -0,0 +1,153 @@
+/*
+ * Copyright 2023      Paul Gofman for CodeWeavers
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#pragma makedep register
+
+import "d3d11.idl";
+import "dxgi1_6.idl";
+
+typedef struct VkInstance_T *VkInstance;
+typedef void (__stdcall *PFN_vkVoidFunction)(void);
+typedef PFN_vkVoidFunction (__stdcall *PFN_vkGetInstanceProcAddr)(VkInstance instance, const char* pName);
+
+typedef enum D3D11_VK_EXTENSION
+{
+    D3D11_VK_EXT_MULTI_DRAW_INDIRECT,
+    D3D11_VK_EXT_MULTI_DRAW_INDIRECT_COUNT,
+    D3D11_VK_EXT_DEPTH_BOUNDS,
+    D3D11_VK_EXT_BARRIER_CONTROL,
+    D3D11_VK_NVX_BINARY_IMPORT,
+    D3D11_VK_NVX_IMAGE_VIEW_HANDLE,
+} D3D11_VK_EXTENSION;
+
+typedef enum D3D11_VK_BARRIER_CONTROL
+{
+    D3D11_VK_BARRIER_CONTROL_IGNORE_WRITE_AFTER_WRITE = 0x1,
+    D3D11_VK_BARRIER_CONTROL_IGNORE_GRAPHICS_UAV = 0x2,
+} D3D11_VK_BARRIER_CONTROL;
+
+[
+    object,
+    uuid(bb8a4fb9-3935-4762-b44b-35189a26414a),
+    local,
+    pointer_default(unique)
+]
+interface ID3D11VkExtShader : IUnknown
+{
+    HRESULT GetSpirvCode([in, out] SIZE_T *code_size, [out] void *code);
+}
+
+[
+    object,
+    uuid(8a6e3c42-f74c-45b7-8265-a231b677ca17),
+    local,
+    pointer_default(unique)
+]
+interface ID3D11VkExtDevice : IUnknown
+{
+    BOOL GetExtensionSupport([in] D3D11_VK_EXTENSION extension);
+}
+
+[
+    object,
+    uuid(cfcf64ef-9586-46d0-bca4-97cf2ca61b06),
+    local,
+    pointer_default(unique)
+]
+interface ID3D11VkExtDevice1 : ID3D11VkExtDevice
+{
+    BOOL GetResourceHandleGPUVirtualAddressAndSizeNVX([in] void *object, [out] UINT64 *gpu_va_start,
+            [out] UINT64 *gpu_va_size);
+    BOOL CreateUnorderedAccessViewAndGetDriverHandleNVX([in] ID3D11Resource *resource,
+            [in] const D3D11_UNORDERED_ACCESS_VIEW_DESC *desc, [out] ID3D11UnorderedAccessView **uav,
+            UINT32 *driver_handle);
+    BOOL CreateShaderResourceViewAndGetDriverHandleNVX([in] ID3D11Resource *resource,
+            [in] const D3D11_SHADER_RESOURCE_VIEW_DESC* desc, [out] ID3D11ShaderResourceView **srv,
+            UINT32 *dirver_handle);
+    BOOL CreateSamplerStateAndGetDriverHandleNVX([in] const D3D11_SAMPLER_DESC *sample_desc,
+            [out] ID3D11SamplerState **sample_state, UINT32 *driver_handle);
+    BOOL CreateCubinComputeShaderWithNameNVX([in] const void *cubin, [in] UINT32 size, [in] UINT32 block_x,
+            [in] UINT32 block_y, [in] UINT32 block_z, [in] const char *shader_name, [out] IUnknown **shader);
+    BOOL GetCudaTextureObjectNVX([in] UINT32 srv_driver_hadnle, [in] UINT32 sample_driver_handle,
+            [out] UINT32 *cuda_texture_handle);
+}
+
+[
+    object,
+    uuid(fd0bca13-5cb6-4c3a-987e-4750de2ca791),
+    local,
+    pointer_default(unique)
+]
+interface ID3D11VkExtContext : IUnknown
+{
+    void MultiDrawIndirect([in] UINT draw_count, [in] ID3D11Buffer *buffer_for_args, [in] UINT byte_offset_for_args,
+            [in] UINT byte_stride_for_args);
+    void MultiDrawIndexedIndirect([in] UINT draw_count, [in] ID3D11Buffer *buffer_for_args,
+            [in] UINT byte_offset_for_args, [in] UINT byte_stride_for_args);
+    void MultiDrawIndirectCount([in] UINT max_draw_count, [in] ID3D11Buffer *buffer_for_count,
+            [in] UINT byte_offset_for_count, [in] ID3D11Buffer *buffer_for_args,
+            [in] UINT byte_offset_for_args, [in] UINT byte_stride_for_args);
+    void MultiDrawIndexedIndirectCount([in] UINT max_draw_count, [in] ID3D11Buffer *buffer_for_count,
+            [in] UINT byte_offset_for_count, [in] ID3D11Buffer *buffer_for_args,
+            [in] UINT byte_offset_for_args, [in] UINT byte_stride_for_args);
+    void SetDepthBoundsTest([in] BOOL enable, [in] FLOAT min_depth_bounds, [in] FLOAT max_depth_bounds);
+    void SetBarrierControl([in] UINT control_flags);
+}
+
+[
+    object,
+    uuid(874b09b2-ae0b-41d8-8476-5f3b7a0e879d),
+    local,
+    pointer_default(unique)
+]
+interface ID3D11VkExtContext1 : ID3D11VkExtContext
+{
+    BOOL LaunchCubinShaderNVX([in] IUnknown *shader,[in] UINT32 grid_x, [in] UINT32 grid_y, [in] UINT32 grid_z,
+            [in] const void *params, [in] UINT32 param_size, [in] void * const *read_resources,
+            [in] UINT32 read_resource_count, [in] void* const *write_resources, [in] UINT32 write_resources_count);
+}
+
+[
+    object,
+    uuid(4c5e1b0d-b0c8-4131-bfd8-9b2476f7f408),
+    local,
+    pointer_default(unique)
+]
+interface IDXGIVkInteropFactory : IUnknown
+{
+    void GetVulkanInstance(
+          [out] VkInstance *pInstance,
+          [out] PFN_vkGetInstanceProcAddr *ppfnVkGetInstanceProcAddr);
+}
+
+[
+    object,
+    uuid(2a289dbd-2d0a-4a51-89f7-f2adce465cd6),
+    local,
+    pointer_default(unique)
+]
+interface IDXGIVkInteropFactory1 : IDXGIVkInteropFactory
+{
+  HRESULT GetGlobalHDRState(
+          [out] DXGI_COLOR_SPACE_TYPE   *pOutColorSpace,
+          [out] DXGI_HDR_METADATA_HDR10 *ppOutMetadata) = 0;
+
+  HRESULT SetGlobalHDRState(
+          [in] DXGI_COLOR_SPACE_TYPE    ColorSpace,
+    [in] const DXGI_HDR_METADATA_HDR10 *pMetadata) = 0;
+}
diff --git a/dlls/amdxc64/main.c b/dlls/amdxc64/main.c
new file mode 100644
index 00000000000..d4dd071b0e0
--- /dev/null
+++ b/dlls/amdxc64/main.c
@@ -0,0 +1,319 @@
+/*
+ * amdxc implementation
+ *
+ * Copyright 2023 Etaash Mathamsetty
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#include <stdarg.h>
+
+#include "ntstatus.h"
+#include "winerror.h"
+#define WIN32_NO_STATUS
+#include "windef.h"
+#include "winbase.h"
+#include "winternl.h"
+#include "wine/debug.h"
+#include "wine/heap.h"
+
+#include "wine/vulkan.h"
+#include "wine/asm.h"
+
+#define COBJMACROS
+#include "initguid.h"
+#include "d3d11.h"
+#include "d3d12.h"
+
+#include "dxgi1_6.h"
+
+#include "dxvk_interfaces.h"
+#include "amdxc_interfaces.h"
+
+#include <wingdi.h>
+
+WINE_DEFAULT_DEBUG_CHANNEL(amdxc);
+
+struct AMDFSR4FFX
+{
+    IAmdExtFfxApi IAmdExtFfxApi_iface;
+    LONG ref;
+};
+
+static struct AMDFSR4FFX* impl_from_IAmdExtFfxApi(IAmdExtFfxApi* iface)
+{
+    return CONTAINING_RECORD(iface, struct AMDFSR4FFX, IAmdExtFfxApi_iface);
+}
+
+ULONG STDMETHODCALLTYPE AMDFSR4FFX_AddRef(IAmdExtFfxApi *iface)
+{
+    struct AMDFSR4FFX* data = impl_from_IAmdExtFfxApi(iface);
+    return InterlockedIncrement(&data->ref);
+}
+
+ULONG STDMETHODCALLTYPE AMDFSR4FFX_Release(IAmdExtFfxApi *iface)
+{
+    struct AMDFSR4FFX* data = impl_from_IAmdExtFfxApi(iface);
+    ULONG ret = InterlockedDecrement(&data->ref);
+    if (!ret) free(data);
+    return ret;
+}
+
+HRESULT STDMETHODCALLTYPE AMDFSR4FFX_QueryInterface(IAmdExtFfxApi *iface, REFIID iid, void **obj)
+{
+    FIXME("%p %s %p", iface, debugstr_guid(iid), obj);
+
+    return E_NOINTERFACE;
+}
+
+typedef HRESULT (__stdcall *updateffxapi_pfn)(void*, unsigned int);
+
+HRESULT STDMETHODCALLTYPE AMDFSR4FFX_UpdateFfxApiProvider(IAmdExtFfxApi *iface, void* data, unsigned int size)
+{
+    const char *env;
+    updateffxapi_pfn pfn;
+    HMODULE amdffx = LoadLibraryA("amdxcffx64");
+
+    TRACE("%p %p %u\n", iface, data, size);
+
+    if (!amdffx)
+    {
+        ERR("Failed to load FSR4 dll (amdxcffx)!\n");
+        return E_NOINTERFACE;
+    }
+
+    pfn = (updateffxapi_pfn)GetProcAddress(amdffx, "UpdateFfxApiProvider");
+    env = getenv("FSR4_UPGRADE");
+
+    if(pfn && env && env[0] != '0')
+    {
+        FIXME("Replaced FSR3 with FSR4!\n");
+        return pfn(data, size);
+    }
+
+    return E_NOINTERFACE;
+}
+
+static const struct IAmdExtFfxApiVtbl AMDFSR4FFX_vtable = {
+    AMDFSR4FFX_QueryInterface,
+    AMDFSR4FFX_AddRef,
+    AMDFSR4FFX_Release,
+    AMDFSR4FFX_UpdateFfxApiProvider
+};
+
+struct AMDAntiLag2
+{
+    IAmdExtAntiLagApi IAmdExtAntiLagApi_iface;
+    LONG ref;
+};
+
+static struct AMDAntiLag2* impl_from_IAmdExtAntiLagApi(IAmdExtAntiLagApi *iface)
+{
+    return CONTAINING_RECORD(iface, struct AMDAntiLag2, IAmdExtAntiLagApi_iface);
+}
+
+ULONG STDMETHODCALLTYPE AMDAntiLag2_AddRef(IAmdExtAntiLagApi *iface)
+{
+    struct AMDAntiLag2 *data = impl_from_IAmdExtAntiLagApi(iface);
+    return InterlockedIncrement(&data->ref);
+}
+
+ULONG STDMETHODCALLTYPE AMDAntiLag2_Release(IAmdExtAntiLagApi *iface)
+{
+    struct AMDAntiLag2 *data = impl_from_IAmdExtAntiLagApi(iface);
+    ULONG ret = InterlockedDecrement(&data->ref);
+    if (!ret) free(data);
+    return ret;
+}
+
+HRESULT STDMETHODCALLTYPE AMDAntiLag2_QueryInterface(IAmdExtAntiLagApi *iface, REFIID iid, void **out)
+{
+    FIXME("(%p %s %p) stub!\n", iface, debugstr_guid(iid), out);
+    return E_NOINTERFACE;
+}
+
+HRESULT STDMETHODCALLTYPE AMDAntiLag2_UpdateAntiLagState(IAmdExtAntiLagApi *iface, void* data)
+{
+    union {
+        struct APIData_v1 *v1;
+        struct APIData_v2 *v2;
+    } apidata = {data};
+    TRACE("(%p %p)!\n", iface, data);
+
+    if (!data) {
+        /* perform sleep */
+    } else if(apidata.v1->uiVersion == 1) {
+        /* access apidata v1 */
+        if(apidata.v1->uiSize != sizeof(struct APIData_v1)) return E_INVALIDARG;
+    } else if(apidata.v1->uiVersion == 2) {
+        /* access apidata v2 */
+        if(apidata.v2->uiSize != sizeof(struct APIData_v2)) return E_INVALIDARG;
+    }
+
+    return E_NOTIMPL;
+}
+
+static const struct IAmdExtAntiLagApiVtbl AMDANTILAG_vtable = {
+    AMDAntiLag2_QueryInterface,
+    AMDAntiLag2_AddRef,
+    AMDAntiLag2_Release,
+    AMDAntiLag2_UpdateAntiLagState
+};
+
+struct AMDExtStub2
+{
+    IAmdExtStub2 IAmdExtStub2_iface;
+    LONG ref;
+};
+
+struct AMDExtStub2* impl_from_IAMDExtStub2(IAmdExtStub2 *iface)
+{
+    return CONTAINING_RECORD(iface, struct AMDExtStub2, IAmdExtStub2_iface);
+}
+
+ULONG STDMETHODCALLTYPE AMDExtStub2_AddRef(IAmdExtStub2 *iface)
+{
+    struct AMDExtStub2 *this = impl_from_IAMDExtStub2(iface);
+    return InterlockedIncrement(&this->ref);
+}
+
+ULONG STDMETHODCALLTYPE AMDExtStub2_Release(IAmdExtStub2 *iface)
+{
+    struct AMDExtStub2 *this = impl_from_IAMDExtStub2(iface);
+    ULONG ret = InterlockedDecrement(&this->ref);
+    if (!ret) free(this);
+    return ret;
+}
+
+HRESULT STDMETHODCALLTYPE AMDExtStub2_QueryInterface(IAmdExtStub2 *iface, REFIID iid, void **out)
+{
+    FIXME("%p %s %p stub!\n", iface, debugstr_guid(iid), out);
+    return E_NOINTERFACE;
+}
+
+void STDMETHODCALLTYPE AMDExtStub2_stub1(IAmdExtStub2 *iface)
+{
+    FIXME("%p stub!\n", iface);
+}
+
+void STDMETHODCALLTYPE AMDExtStub2_stub2(IAmdExtStub2 *iface, unsigned int unk)
+{
+    FIXME("%p %u stub!\n", iface, unk);
+}
+
+void STDMETHODCALLTYPE AMDExtStub2_stub3(IAmdExtStub2 *iface)
+{
+    FIXME("%p stub!\n", iface);
+}
+
+const static struct IAmdExtStub2Vtbl AMDSTUB2_vtable = {
+    AMDExtStub2_QueryInterface,
+    AMDExtStub2_AddRef,
+    AMDExtStub2_Release,
+    AMDExtStub2_stub1,
+    AMDExtStub2_stub2,
+    AMDExtStub2_stub3
+};
+
+struct AMDExtStub1
+{
+    IAmdExtStub1 IAmdExtStub1_iface;
+    LONG ref;
+};
+
+struct AMDExtStub1* impl_from_IAMDExtStub1(IAmdExtStub1 *iface)
+{
+    return CONTAINING_RECORD(iface, struct AMDExtStub1, IAmdExtStub1_iface);
+}
+
+ULONG STDMETHODCALLTYPE AMDExtStub1_AddRef(IAmdExtStub1 *iface)
+{
+    struct AMDExtStub1 *this = impl_from_IAMDExtStub1(iface);
+    return InterlockedIncrement(&this->ref);
+}
+
+ULONG STDMETHODCALLTYPE AMDExtStub1_Release(IAmdExtStub1 *iface)
+{
+    struct AMDExtStub1 *this = impl_from_IAMDExtStub1(iface);
+    ULONG ret = InterlockedDecrement(&this->ref);
+    if (!ret) free(this);
+    return ret;
+}
+
+HRESULT STDMETHODCALLTYPE AmdExtStub1_QueryInterface2(IAmdExtStub1 *iface, void* unk, REFIID iid, void **out)
+{
+    TRACE("%p %p %s %p\n", iface, unk, debugstr_guid(iid), out);
+
+    if(IsEqualGUID(iid, &IID_IAmdExtStub2))
+    {
+        struct AMDExtStub2 *this = calloc(1, sizeof(struct AMDExtStub2));
+
+        this->IAmdExtStub2_iface.lpVtbl = &AMDSTUB2_vtable;
+        this->ref = 1;
+        *out = &this->IAmdExtStub2_iface;
+        return S_OK;
+    } else {
+        FIXME("unknown guid %s\n", debugstr_guid(iid));
+    }
+
+    return E_NOINTERFACE;
+}
+
+HRESULT STDMETHODCALLTYPE AmdExtStub1_QueryInterface(IAmdExtStub1 *iface, REFIID iid, void **out)
+{
+    return AmdExtStub1_QueryInterface2(iface, NULL, iid, out);
+}
+
+static const struct IAmdExtStub1Vtbl AMDSTUB1_vtable = {
+    AmdExtStub1_QueryInterface,
+    AMDExtStub1_AddRef,
+    AMDExtStub1_Release,
+    AmdExtStub1_QueryInterface2
+};
+
+HRESULT CDECL AmdExtD3DCreateInterface(IUnknown *outer, REFIID iid, void **obj)
+{
+    TRACE("outer %p, iid %s, obj %p\n", outer, debugstr_guid(iid), obj);
+
+    if (IsEqualGUID(iid, &IID_IAmdExtFfxApi))
+    {
+        struct AMDFSR4FFX* ffx = calloc(1, sizeof(struct AMDFSR4FFX));
+        ffx->IAmdExtFfxApi_iface.lpVtbl = &AMDFSR4FFX_vtable;
+        ffx->ref = 1;
+        *obj = &ffx->IAmdExtFfxApi_iface;
+        return S_OK;
+    } else if (IsEqualGUID(iid, &IID_IAmdExtAntiLagApi)) {
+        struct AMDAntiLag2 *out = calloc(1, sizeof(struct AMDAntiLag2));
+        out->IAmdExtAntiLagApi_iface.lpVtbl = &AMDANTILAG_vtable;
+        out->ref = 1;
+        *obj = &out->IAmdExtAntiLagApi_iface;
+        return S_OK;
+    } else if(IsEqualGUID(iid, &IID_IAmdExtStub1)) {
+        struct AMDExtStub1 *this = calloc(1, sizeof(struct AMDExtStub1));
+        this->IAmdExtStub1_iface.lpVtbl = &AMDSTUB1_vtable;
+        this->ref = 1;
+        *obj = &this->IAmdExtStub1_iface;
+        return S_OK;
+    } else {
+        FIXME("unknown guid: %s\n", debugstr_guid(iid));
+    }
+
+    return E_NOINTERFACE;
+}
+
+HMODULE WINAPI AmdGetDxcModuleHandle(void)
+{
+    return GetModuleHandleA(NULL);
+}

From a7e32de6ef52357db2660f68e010e1775f122e41 Mon Sep 17 00:00:00 2001
From: Harald Sitter <sitter@kde.org>
Date: Sun, 19 Jan 2025 15:05:15 +0100
Subject: [PATCH 18/21] mmdevapi: correctly read and write containerid as clsid
 blob

ContainerId on Windows is a bit special. It actually gets stored in the
registry as a blob of data that starts with the variant type and ends
with the GUID. The bits inbetween have no immediately obvious meaning
and aren't used for the time being.
---
 dlls/mmdevapi/devenum.c | 43 ++++++++++++++++++++++++++++++++---------
 1 file changed, 34 insertions(+), 9 deletions(-)

diff --git a/dlls/mmdevapi/devenum.c b/dlls/mmdevapi/devenum.c
index c32e85ea5e8..b1e7e2e7eaa 100644
--- a/dlls/mmdevapi/devenum.c
+++ b/dlls/mmdevapi/devenum.c
@@ -47,6 +47,13 @@ DEFINE_GUID(GUID_NULL,0,0,0,0,0,0,0,0,0,0,0);
 static HKEY key_render;
 static HKEY key_capture;
 
+struct clsid_blob {
+    BYTE vt;
+    BYTE wReserved0[3]; // Unknown metadata, maybe flags?
+    DWORD wReserved1; // Possibly a version of some sort?
+    GUID puuid;
+};
+
 typedef struct MMDevPropStoreImpl
 {
     IPropertyStore IPropertyStore_iface;
@@ -196,15 +203,28 @@ static HRESULT MMDevice_GetPropValue(const GUID *devguid, DWORD flow, REFPROPERT
             RegGetValueW(regkey, NULL, buffer, RRF_RT_REG_DWORD, NULL, (BYTE*)&pv->ulVal, &size);
             break;
         }
-        case REG_BINARY:
-        {
-            pv->vt = VT_BLOB;
-            pv->blob.cbSize = size;
-            pv->blob.pBlobData = CoTaskMemAlloc(size);
-            if (!pv->blob.pBlobData)
-                hr = E_OUTOFMEMORY;
-            else
-                RegGetValueW(regkey, NULL, buffer, RRF_RT_REG_BINARY, NULL, (BYTE*)pv->blob.pBlobData, &size);
+        case REG_BINARY: {
+            if (IsEqualPropertyKey(*key, DEVPKEY_Device_ContainerId)) {
+                struct clsid_blob blob;
+                DWORD size = sizeof(blob);
+
+                RegGetValueW(regkey, NULL, buffer, RRF_RT_REG_BINARY, NULL, (BYTE *)&blob, &size);
+
+                pv->vt = VT_CLSID;
+                pv->puuid = CoTaskMemAlloc(sizeof(GUID));
+                if (!pv->puuid)
+                    hr = E_OUTOFMEMORY;
+                else
+                    *pv->puuid = blob.puuid;
+            } else {
+                pv->vt = VT_BLOB;
+                pv->blob.cbSize = size;
+                pv->blob.pBlobData = CoTaskMemAlloc(size);
+                if (!pv->blob.pBlobData)
+                    hr = E_OUTOFMEMORY;
+                else
+                    RegGetValueW(regkey, NULL, buffer, RRF_RT_REG_BINARY, NULL, (BYTE *)pv->blob.pBlobData, &size);
+            }
             break;
         }
         default:
@@ -249,6 +269,11 @@ static HRESULT MMDevice_SetPropValue(const GUID *devguid, DWORD flow, REFPROPERT
             ret = RegSetValueExW(regkey, buffer, 0, REG_SZ, (const BYTE*)pv->pwszVal, sizeof(WCHAR)*(1+lstrlenW(pv->pwszVal)));
             break;
         }
+        case VT_CLSID: {
+            struct clsid_blob blob = {.vt = VT_CLSID, .wReserved0 = {0, 0, 0}, .wReserved1 = 0, .puuid = *pv->puuid};
+            ret = RegSetValueExW(regkey, buffer, 0, REG_BINARY, (const BYTE *)&blob, sizeof(blob));
+            break;
+        }
         default:
             ret = 0;
             FIXME("Unhandled type %u\n", pv->vt);

From da4c758e5e914b5b55f49deccad7258c96374353 Mon Sep 17 00:00:00 2001
From: Harald Sitter <sitter@kde.org>
Date: Mon, 17 Feb 2025 23:18:33 +0100
Subject: [PATCH 19/21] containerid: helper to generate a containerid from a
 sysfs path

TBD
---
 dlls/mmdevapi/devenum.c       |   2 +
 dlls/ntdll/Makefile.in        |   1 +
 dlls/ntdll/unix/containerid.c | 196 ++++++++++++++++++++++++++++++++++
 dlls/winebus.sys/bus_udev.c   |  27 +++++
 dlls/winebus.sys/main.c       |  22 ++++
 dlls/winebus.sys/unixlib.h    |   1 +
 dlls/winepulse.drv/pulse.c    |  23 ++++
 include/Makefile.in           |   1 +
 include/wine/containerid.h    |  28 +++++
 9 files changed, 301 insertions(+)
 create mode 100644 dlls/ntdll/unix/containerid.c
 create mode 100644 include/wine/containerid.h

diff --git a/dlls/mmdevapi/devenum.c b/dlls/mmdevapi/devenum.c
index b1e7e2e7eaa..2bbcdbfa8fa 100644
--- a/dlls/mmdevapi/devenum.c
+++ b/dlls/mmdevapi/devenum.c
@@ -441,6 +441,8 @@ static MMDevice *MMDevice_Create(const WCHAR *name, GUID *id, EDataFlow flow, DW
             pv.pwszVal = guidstr;
             MMDevice_SetPropValue(id, flow, &deviceinterface_key, &pv);
 
+            set_driver_prop_value(id, flow, (const PROPERTYKEY*)&DEVPKEY_Device_ContainerId);
+
             if (FAILED(set_driver_prop_value(id, flow, &PKEY_AudioEndpoint_FormFactor)))
             {
                 pv.vt = VT_UI4;
diff --git a/dlls/ntdll/Makefile.in b/dlls/ntdll/Makefile.in
index 457ae577399..6d77ff4a0c9 100644
--- a/dlls/ntdll/Makefile.in
+++ b/dlls/ntdll/Makefile.in
@@ -46,6 +46,7 @@ SOURCES = \
 	threadpool.c \
 	time.c \
 	unix/cdrom.c \
+	unix/containerid.c \
 	unix/debug.c \
 	unix/env.c \
 	unix/esync.c \
diff --git a/dlls/ntdll/unix/containerid.c b/dlls/ntdll/unix/containerid.c
new file mode 100644
index 00000000000..61fa5896049
--- /dev/null
+++ b/dlls/ntdll/unix/containerid.c
@@ -0,0 +1,196 @@
+/*
+ * ContainerID helper functions
+ *
+ * Copyright 2025 Harald Sitter <sitter@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#if 0
+#pragma makedep unix
+#endif
+
+#include "config.h"
+
+#include <dirent.h>
+#include <errno.h>
+#include <fcntl.h> /* Definition of AT_* constants */
+#include <libgen.h>
+#include <limits.h>
+#include <stdlib.h>
+#include <sys/stat.h>
+#include <sys/types.h>
+#include <unistd.h>
+
+#include "ntstatus.h"
+#define WIN32_NO_STATUS
+#include "windef.h"
+#include "winternl.h"
+#include "wine/containerid.h"
+#include "wine/debug.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(containerid);
+
+// Find the directory with a 'removeble' file. Mutates sysfs_path in place.
+static BOOL find_removable_file_dir(char *sysfs_path)
+{
+    DIR *device_dir = NULL;
+    struct stat st;
+    for (;;) {
+        if (strcmp("/sys/devices", sysfs_path) == 0) {
+            TRACE("Device is not removable (could not find removable file)\n");
+            return FALSE;
+        }
+        device_dir = opendir(sysfs_path);
+        if (fstatat(dirfd(device_dir), "removable", &st, 0) == 0) {
+            closedir(device_dir);
+            return TRUE;
+        }
+        closedir(device_dir);
+        dirname(sysfs_path); // mutates in place
+    }
+    return FALSE;
+}
+
+// Checks if the device at sysfs_path is removable by checking the contents of the 'removable' file.
+static BOOL is_device_removable(char *sysfs_path)
+{
+    char is_removable_str[MAX_PATH];
+    char removable[] = "removable";
+    DIR *device_dir = opendir(sysfs_path);
+    int fd = openat(dirfd(device_dir), "removable", O_RDONLY | O_CLOEXEC);
+    int err = errno;
+
+    closedir(device_dir);
+
+    if (fd != -1) {
+        read(fd, is_removable_str, sizeof(is_removable_str));
+        close(fd);
+        if (strncmp(is_removable_str, removable, strlen(removable)) == 0) {
+            // Perfect, it's removable, so let's expose the sysfs path and by extension generate a container id.
+            return TRUE;
+        } else {
+            return FALSE;
+            TRACE("Device is not removable, not exposing sysfs path\n");
+        }
+    }
+
+    WARN("Failed to open %s/removable: %s\n", sysfs_path, strerror(err));
+    return FALSE;
+}
+
+static BOOL get_device_sysfs_path_from_sys_path(char const *sysfs_path, char device_path[MAX_PATH])
+{
+    char resolved_sysfs_path[MAX_PATH];
+    // Resolve all parts.
+    if (realpath(sysfs_path, resolved_sysfs_path) == NULL) {
+        WARN("realpath failed: %s\n", strerror(errno));
+        return FALSE;
+    }
+    // Then walk up until we find a removable file marker.
+    if (find_removable_file_dir(resolved_sysfs_path)) {
+        // resolved_sysfs_path is now pointing at the device directory containing a removable file.
+        // Next let's figure out if this device is actually removable.
+        if (is_device_removable(resolved_sysfs_path)) {
+            strcpy(device_path, resolved_sysfs_path);
+            return TRUE;
+        }
+    }
+    return FALSE;
+}
+
+static void container_id_from_inputs(char const **inputs, unsigned inputs_count, GUID *container_id)
+{
+    UINT8 hash[sizeof(GUID)] = {0};
+    UINT8 hash_index = 0;
+
+    // Trivialistic hash function. XOR all the bytes of all the inputs together.
+    for (int i = 0; i < inputs_count; i++) {
+        for (int j = 0; j < strlen(inputs[i]); j++) {
+            hash[hash_index] ^= inputs[i][j];
+            hash_index = (hash_index + 1) % ARRAY_SIZE(hash);
+        }
+    }
+
+    memcpy(container_id, hash, sizeof(GUID));
+}
+
+static  NTSTATUS fill_container_id(char const device_path[MAX_PATH], char const id_product[7], char const id_vendor[7], GUID *container_id)
+{
+    char const *inputs[] = {device_path, id_product, id_vendor};
+
+    // When sysfs_path is empty it means something has gone horribly wrong.
+    if (device_path[0] == 0) {
+        return STATUS_INVALID_PARAMETER;
+    }
+
+    container_id_from_inputs(inputs, ARRAY_SIZE(inputs), container_id);
+    TRACE("Generated container id: %s\n", wine_dbgstr_guid(container_id));
+
+    return STATUS_SUCCESS;
+}
+
+static BOOL read_id_file(char const *sysfs_path, char const *file, char *buffer, size_t buffer_size)
+{
+    DIR *device_dir = opendir(sysfs_path);
+    int fd = openat(dirfd(device_dir), file, O_RDONLY | O_CLOEXEC);
+    int err = errno;
+    off_t offset = 0;
+
+    closedir(device_dir);
+
+    if (fd == -1) {
+        WARN("Failed to open %s/%s: %s\n", sysfs_path, file, strerror(err));
+        return FALSE;
+    }
+
+    for (;;) {
+        ssize_t len = read(fd, buffer + offset, buffer_size - offset);
+        if (len == 0)
+            break;
+        if (len == -1) {
+            if (errno == EINTR)
+                continue;
+            WARN("Failed to read %s/%s: %s\n", sysfs_path, file, strerror(errno));
+            close(fd);
+            return FALSE;
+        }
+    }
+    close(fd);
+    return TRUE;
+
+}
+
+BOOL container_id_for_sysfs(char const *sysfs_path, GUID *container_id)
+{
+    char device_path[MAX_PATH] = {0};
+    char id_product[7] = {0}; // 7 = strlen(0x0b05)+1
+    char id_vendor[7] = {0};
+
+    if (!get_device_sysfs_path_from_sys_path(sysfs_path, device_path)) {
+        return FALSE;
+    }
+
+    if (!read_id_file(device_path, "idProduct", id_product, sizeof(id_product))) {
+        return FALSE;
+    }
+
+    if (!read_id_file(device_path, "idVendor", id_vendor, sizeof(id_vendor))) {
+        return FALSE;
+    }
+
+    fill_container_id(device_path, id_product, id_vendor, container_id);
+    return TRUE;
+}
diff --git a/dlls/winebus.sys/bus_udev.c b/dlls/winebus.sys/bus_udev.c
index 332e79e3ae5..694e0732b68 100644
--- a/dlls/winebus.sys/bus_udev.c
+++ b/dlls/winebus.sys/bus_udev.c
@@ -73,6 +73,7 @@
 #include "ddk/hidtypes.h"
 #include "ddk/hidsdi.h"
 
+#include "wine/containerid.h"
 #include "wine/debug.h"
 #include "wine/hid.h"
 #include "wine/unixlib.h"
@@ -1563,6 +1564,30 @@ static void get_device_subsystem_info(struct udev_device *dev, const char *subsy
     }
 }
 
+static const char *get_device_syspath(struct udev_device *dev)
+{
+    struct udev_device *parent;
+
+    if ((parent = udev_device_get_parent_with_subsystem_devtype(dev, "hid", NULL)))
+        return udev_device_get_syspath(parent);
+
+    if ((parent = udev_device_get_parent_with_subsystem_devtype(dev, "usb", "usb_device")))
+        return udev_device_get_syspath(parent);
+
+    return udev_device_get_syspath(dev);
+}
+
+void get_container_id(struct udev_device *dev, struct device_desc *desc)
+{
+    const char *sysfs_path = get_device_syspath(dev);
+
+    memset(&desc->container_id, 0, sizeof(GUID));
+    if (!sysfs_path || sysfs_path[0] == 0) {
+        return;
+    }
+    container_id_for_sysfs(sysfs_path, &desc->container_id);
+}
+
 static void udev_add_device(struct udev_device *dev, int fd)
 {
     struct device_desc desc =
@@ -1588,6 +1613,8 @@ static void udev_add_device(struct udev_device *dev, int fd)
 
     TRACE("udev %s syspath %s\n", debugstr_a(devnode), udev_device_get_syspath(dev));
 
+    get_container_id(dev, &desc);
+
     get_device_subsystem_info(dev, "hid", NULL, &desc, &bus);
     get_device_subsystem_info(dev, "input", NULL, &desc, &bus);
     get_device_subsystem_info(dev, "usb", "usb_device", &desc, &bus);
diff --git a/dlls/winebus.sys/main.c b/dlls/winebus.sys/main.c
index 27edacdd97b..7dfd2afa82e 100644
--- a/dlls/winebus.sys/main.c
+++ b/dlls/winebus.sys/main.c
@@ -40,6 +40,9 @@
 
 #include "unixlib.h"
 
+#include "initguid.h"
+DEFINE_GUID(GUID_NULL,0,0,0,0,0,0,0,0,0,0,0);
+
 WINE_DEFAULT_DEBUG_CHANNEL(hid);
 
 static DRIVER_OBJECT *driver_obj;
@@ -198,6 +201,21 @@ static WCHAR *get_instance_id(DEVICE_OBJECT *device)
     return dst;
 }
 
+static WCHAR *get_container_id(DEVICE_OBJECT *device)
+{
+    struct device_extension *ext = (struct device_extension *)device->DeviceExtension;
+    UNICODE_STRING dst;
+
+    if (IsEqualGUID(&ext->desc.container_id, &GUID_NULL)) {
+        return NULL;
+    }
+
+    RtlZeroMemory(&dst, sizeof(dst));
+    RtlStringFromGUID(&ext->desc.container_id, &dst);
+
+    return dst.Buffer;
+}
+
 static WCHAR *get_device_id(DEVICE_OBJECT *device)
 {
     static const WCHAR input_format[] = L"&MI_%02u";
@@ -755,6 +773,10 @@ static NTSTATUS handle_IRP_MN_QUERY_ID(DEVICE_OBJECT *device, IRP *irp)
             TRACE("BusQueryInstanceID\n");
             irp->IoStatus.Information = (ULONG_PTR)get_instance_id(device);
             break;
+        case BusQueryContainerID:
+            TRACE("BusQueryContainerID\n");
+            irp->IoStatus.Information = (ULONG_PTR)get_container_id(device);
+            break;
         default:
             WARN("Unhandled type %08x\n", type);
             return status;
diff --git a/dlls/winebus.sys/unixlib.h b/dlls/winebus.sys/unixlib.h
index 02e7a1c6953..0b898da5e50 100644
--- a/dlls/winebus.sys/unixlib.h
+++ b/dlls/winebus.sys/unixlib.h
@@ -45,6 +45,7 @@ struct device_desc
     WCHAR manufacturer[MAX_PATH];
     WCHAR product[MAX_PATH];
     WCHAR serialnumber[MAX_PATH];
+    GUID container_id;
 };
 
 struct sdl_bus_options
diff --git a/dlls/winepulse.drv/pulse.c b/dlls/winepulse.drv/pulse.c
index 9cb29be21b6..77dafb2fb2f 100644
--- a/dlls/winepulse.drv/pulse.c
+++ b/dlls/winepulse.drv/pulse.c
@@ -38,10 +38,14 @@
 #include "initguid.h"
 #include "audioclient.h"
 
+#include "wine/containerid.h"
 #include "wine/debug.h"
 #include "wine/list.h"
 #include "wine/unixlib.h"
 
+#include "initguid.h"
+#include "devpkey.h"
+
 #include "../mmdevapi/unixlib.h"
 
 #include "mult.h"
@@ -105,6 +109,7 @@ typedef struct _PhysDevice {
     UINT index;
     REFERENCE_TIME min_period, def_period;
     WAVEFORMATEXTENSIBLE fmt;
+    GUID container_id;
     char pulse_name[0];
 } PhysDevice;
 
@@ -550,6 +555,7 @@ static void fill_device_info(PhysDevice *dev, pa_proplist *p)
     dev->bus_type = phys_device_bus_invalid;
     dev->vendor_id = 0;
     dev->product_id = 0;
+    memset(&dev->container_id, 0, sizeof(GUID));
 
     if (!p)
         return;
@@ -566,6 +572,13 @@ static void fill_device_info(PhysDevice *dev, pa_proplist *p)
 
     if ((buffer = pa_proplist_gets(p, PA_PROP_DEVICE_PRODUCT_ID)))
         dev->product_id = strtol(buffer, NULL, 16);
+
+    if ((buffer = pa_proplist_gets(p, "sysfs.path"))) {
+        // The syspath is of the audio device. Resolve it up to the device level.
+        char sysfs_path[MAX_PATH];
+        snprintf(sysfs_path, sizeof(sysfs_path), "/sys%s/device", buffer);
+        container_id_for_sysfs(sysfs_path, &dev->container_id);
+    }
 }
 
 static void pulse_add_device(struct list *list, pa_proplist *proplist, int index, EndpointFormFactor form,
@@ -2622,6 +2635,16 @@ static NTSTATUS pulse_get_prop_value(void *args)
                 params->result = S_OK;
                 return STATUS_SUCCESS;
             }
+        } else if (IsEqualGUID(&params->prop->fmtid, &DEVPKEY_Device_ContainerId)) {
+            params->value->vt = VT_CLSID;
+            params->value->puuid = malloc(sizeof(GUID));
+            if (!params->value->puuid)
+                params->result = E_OUTOFMEMORY;
+            else {
+                params->result = S_OK;
+                *params->value->puuid = dev->container_id;
+            }
+            return STATUS_SUCCESS;
         }
 
         params->result = E_NOTIMPL;
diff --git a/include/Makefile.in b/include/Makefile.in
index c5fa5980ccf..4d58c32e4fe 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -919,6 +919,7 @@ SOURCES = \
 	wine/afd.h \
 	wine/asm.h \
 	wine/atsvc.idl \
+	wine/containerid.h \
 	wine/condrv.h \
 	wine/dcetypes.idl \
 	wine/debug.h \
diff --git a/include/wine/containerid.h b/include/wine/containerid.h
new file mode 100644
index 00000000000..0a5b84794ff
--- /dev/null
+++ b/include/wine/containerid.h
@@ -0,0 +1,28 @@
+/*
+ * ContainerID helper functions
+ *
+ * Copyright 2025 Harald Sitter <sitter@kde.org>
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#ifndef _WINE_CONTAINERID
+#define _WINE_CONTAINERID
+
+#include "winternl.h"
+
+NTSYSAPI BOOL container_id_for_sysfs(char const *sysfs_path, GUID *container_id);
+
+#endif /* _WINE_CONTAINERID */

From 16a5d54045a71c0ff382aaf9f880f6508bebcfae Mon Sep 17 00:00:00 2001
From: Claire <claire.github-309c@sitedethib.com>
Date: Tue, 29 Nov 2022 17:37:44 +0100
Subject: [PATCH 20/21] Implement SetupDiGetDeviceInterfacePropertyW for
 DEVPKEY_Device_InstanceId

Fixes a crash in Marvel's Spider-Man
---
 dlls/setupapi/devinst.c     | 49 +++++++++++++++++++++++++++++++++++++
 dlls/setupapi/setupapi.spec |  1 +
 2 files changed, 50 insertions(+)

diff --git a/dlls/setupapi/devinst.c b/dlls/setupapi/devinst.c
index f6675ee7840..72c990b39f6 100644
--- a/dlls/setupapi/devinst.c
+++ b/dlls/setupapi/devinst.c
@@ -3121,6 +3121,55 @@ BOOL WINAPI SetupDiDestroyDeviceInfoList(HDEVINFO devinfo)
     return TRUE;
 }
 
+/***********************************************************************
+ *              SetupDiGetDeviceInterfacePropertyW (SETUPAPI.@)
+ */
+BOOL WINAPI SetupDiGetDeviceInterfacePropertyW(HDEVINFO devinfo, SP_DEVICE_INTERFACE_DATA *iface_data,
+                const DEVPROPKEY *prop_key, DEVPROPTYPE *prop_type, BYTE *prop_buff,
+                DWORD prop_buff_size, DWORD *required_size, DWORD flags) {
+
+    // TODO: should probably use DEVPKEY_Device_InstanceId
+    static const DEVPROPKEY device_instanceid_key = {
+        {0x78c34fc8, 0x104a, 0x4aca, {0x9e, 0xa4, 0x52, 0x4d, 0x52, 0x99, 0x6e, 0x57}}, 256
+    };
+
+    TRACE("%p, %p, (%s, %04lx), %p, %p, %ld, %p, %#lx\n", devinfo, iface_data, wine_dbgstr_guid(&prop_key->fmtid), prop_key->pid, prop_type, prop_buff, prop_buff_size,
+          required_size, flags);
+
+    // Special case for InstanceID
+    if (IsEqualDevPropKey(*prop_key, device_instanceid_key)) {
+        struct device *device;
+        struct device_iface *iface;
+
+        if (!(iface = get_device_iface(devinfo, iface_data)))
+            return FALSE;
+
+        if (!(device = iface->device))
+            return FALSE;
+
+        TRACE("instance ID: %s\n", debugstr_w(device->instanceId));
+        if (prop_buff_size < lstrlenW(device->instanceId) + 1)
+        {
+            SetLastError(ERROR_INSUFFICIENT_BUFFER);
+            if (required_size)
+                *required_size = lstrlenW(device->instanceId) + 1;
+            return FALSE;
+        }
+
+        lstrcpyW((WCHAR *) prop_buff, device->instanceId);
+        if (required_size)
+            *required_size = lstrlenW(device->instanceId) + 1;
+        *prop_type = DEVPROP_TYPE_STRING;
+
+        return TRUE;
+    } else {
+        // TODO: maybe fall back as SetupDiGetDevicePropertyW?
+        FIXME("stub\n");
+    }
+
+    return FALSE;
+}
+
 /***********************************************************************
  *		SetupDiGetDeviceInterfaceDetailA (SETUPAPI.@)
  */
diff --git a/dlls/setupapi/setupapi.spec b/dlls/setupapi/setupapi.spec
index 1c93a1f3b9b..ce0d0b5813e 100644
--- a/dlls/setupapi/setupapi.spec
+++ b/dlls/setupapi/setupapi.spec
@@ -358,6 +358,7 @@
 @ stdcall SetupDiGetDeviceInterfaceDetailA(long ptr ptr long ptr ptr)
 @ stdcall SetupDiGetDeviceInterfaceDetailW(long ptr ptr long ptr ptr)
 @ stdcall SetupDiGetDevicePropertyKeys(ptr ptr ptr long ptr long)
+@ stdcall SetupDiGetDeviceInterfacePropertyW(ptr ptr ptr ptr ptr long ptr long)
 @ stdcall SetupDiGetDevicePropertyW(ptr ptr ptr ptr ptr long ptr long)
 @ stdcall SetupDiGetDeviceRegistryPropertyA(long ptr long ptr ptr long ptr)
 @ stdcall SetupDiGetDeviceRegistryPropertyW(long ptr long ptr ptr long ptr)

From b4d017be8971ba7ebbd3059ae751b5b8a143aaa5 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Mon, 19 May 2025 20:33:06 -0400
Subject: [PATCH 21/21] winebus: Fix PROTON_ENABLE/DISABLE_HIDRAW.

---
 dlls/winebus.sys/main.c    | 20 ++++++--------------
 dlls/winebus.sys/unixlib.c | 22 ++++++++++++++++++++++
 dlls/winebus.sys/unixlib.h |  9 +++++++++
 3 files changed, 37 insertions(+), 14 deletions(-)

diff --git a/dlls/winebus.sys/main.c b/dlls/winebus.sys/main.c
index 7dfd2afa82e..f6ec1eb281c 100644
--- a/dlls/winebus.sys/main.c
+++ b/dlls/winebus.sys/main.c
@@ -486,10 +486,10 @@ static BOOL is_hidraw_enabled(WORD vid, WORD pid, const USAGE_AND_PAGE *usages,
 {
     char buffer[FIELD_OFFSET(KEY_VALUE_PARTIAL_INFORMATION, Data[1024])];
     KEY_VALUE_PARTIAL_INFORMATION *info = (KEY_VALUE_PARTIAL_INFORMATION *)buffer;
-    WCHAR vidpid[MAX_PATH], *tmp, value[1024];
+    struct hidraw_enabled_params params = {0};
+    WCHAR vidpid[MAX_PATH], *tmp;
     BOOL prefer_hidraw = FALSE;
     UNICODE_STRING str;
-    SIZE_T len;
     DWORD size;
 
     if (check_bus_option(L"DisableHidraw", FALSE)) return FALSE;
@@ -500,19 +500,11 @@ static BOOL is_hidraw_enabled(WORD vid, WORD pid, const USAGE_AND_PAGE *usages,
         return FALSE;
     }
 
-    if (!RtlQueryEnvironmentVariable(NULL, L"PROTON_DISABLE_HIDRAW", 20, value, ARRAY_SIZE(value) - 1, &len))
+    params.vid = vid;
+    params.pid = pid;
+    if (!winebus_call(hidraw_enabled, &params) && params.env_set)
     {
-        value[len] = 0;
-        if (!wcscmp(value, L"1")) return FALSE;
-        swprintf(vidpid, ARRAY_SIZE(vidpid), L"0x%04X/0x%04X", vid, pid);
-        if (wcscasestr(value, vidpid)) return FALSE;
-    }
-    if (!RtlQueryEnvironmentVariable(NULL, L"PROTON_ENABLE_HIDRAW", 20, value, ARRAY_SIZE(value) - 1, &len))
-    {
-        value[len] = 0;
-        if (!wcscmp(value, L"1")) return TRUE;
-        swprintf(vidpid, ARRAY_SIZE(vidpid), L"0x%04X/0x%04X", vid, pid);
-        if (wcscasestr(value, vidpid)) return TRUE;
+        return params.enabled;
     }
 
     if (usages->UsagePage == HID_USAGE_PAGE_DIGITIZER)
diff --git a/dlls/winebus.sys/unixlib.c b/dlls/winebus.sys/unixlib.c
index bd4351f059c..da5d4502f45 100644
--- a/dlls/winebus.sys/unixlib.c
+++ b/dlls/winebus.sys/unixlib.c
@@ -300,6 +300,27 @@ static NTSTATUS unix_device_set_feature_report(void *args)
     return STATUS_SUCCESS;
 }
 
+static NTSTATUS unix_hidraw_enabled(void *args)
+{
+    char *value;
+    char vidpid[MAX_PATH] = {0};
+    struct hidraw_enabled_params *params = args;
+
+    if ((value = getenv("PROTON_DISABLE_HIDRAW")))
+    {
+        if (!strcmp(value, "1")) { params->enabled = FALSE; params->env_set = TRUE; }
+        snprintf(vidpid, ARRAY_SIZE(vidpid), "0x%04X/0x%04X", params->vid, params->pid);
+        if (strcasestr(value, vidpid)) { params->enabled = FALSE; params->env_set = TRUE; }
+    } else if ((value = getenv("PROTON_ENABLE_HIDRAW")))
+    {
+        if (!strcmp(value, "1")) { params->enabled = TRUE; params->env_set = TRUE; }
+        snprintf(vidpid, ARRAY_SIZE(vidpid), "0x%04X/0x%04X", params->vid, params->pid);
+        if (strcasestr(value, vidpid)) { params->enabled = TRUE; params->env_set = TRUE; }
+    }
+
+    return STATUS_SUCCESS;
+}
+
 const unixlib_entry_t __wine_unix_call_funcs[] =
 {
     sdl_bus_init,
@@ -319,6 +340,7 @@ const unixlib_entry_t __wine_unix_call_funcs[] =
     unix_device_set_output_report,
     unix_device_get_feature_report,
     unix_device_set_feature_report,
+    unix_hidraw_enabled
 };
 
 C_ASSERT(ARRAYSIZE(__wine_unix_call_funcs) == unix_funcs_count);
diff --git a/dlls/winebus.sys/unixlib.h b/dlls/winebus.sys/unixlib.h
index 0b898da5e50..e92873a392c 100644
--- a/dlls/winebus.sys/unixlib.h
+++ b/dlls/winebus.sys/unixlib.h
@@ -126,6 +126,14 @@ struct device_report_params
     IO_STATUS_BLOCK *io;
 };
 
+struct hidraw_enabled_params
+{
+    unsigned short vid;
+    unsigned short pid;
+    BOOL env_set;
+    BOOL enabled;
+};
+
 enum unix_funcs
 {
     sdl_init,
@@ -145,6 +153,7 @@ enum unix_funcs
     device_set_output_report,
     device_get_feature_report,
     device_set_feature_report,
+    hidraw_enabled,
     unix_funcs_count,
 };
 
